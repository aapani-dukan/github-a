{"version":3,"file":"index-tyck7BVo.js","sources":["../../../client/src/lib/firebase.ts","../../../client/src/lib/queryClient.ts","../../../client/src/hooks/use-toast.ts","../../../client/src/lib/utils.ts","../../../client/src/components/ui/toast.tsx","../../../client/src/components/ui/toaster.tsx","../../../client/src/components/ui/tooltip.tsx","../../../client/src/hooks/useAuth.tsx","../../../client/src/components/ui/button.tsx","../../../client/src/components/ui/card.tsx","../../../client/src/pages/auth.tsx","../../../client/src/components/ui/checkbox.tsx","../../../client/src/components/ui/select.tsx","../../../client/src/components/ui/skeleton.tsx","../../../client/src/lib/store.ts","../../../client/src/components/ui/sheet.tsx","../../../client/src/components/cart-modal.tsx","../../../client/src/components/header.tsx","../../../client/src/components/ui/badge.tsx","../../../client/src/components/product-card.tsx","../../../client/src/components/ui/input.tsx","../../../client/src/components/footer.tsx","../../../client/src/pages/home.tsx","../../../client/src/components/ui/textarea.tsx","../../../client/src/components/ui/tabs.tsx","../../../client/src/components/ui/dialog.tsx","../../../client/src/components/ui/label.tsx","../../../client/src/components/ui/form.tsx","../../../shared/backend/schema.ts","../../../client/src/pages/seller-dashboard.tsx","../../../client/src/pages/seller-apply.tsx","../../../client/src/pages/not-found.tsx","../../../client/src/App.tsx","../../../client/src/main.tsx"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithPopup, getRedirectResult, GoogleAuthProvider, signOut } from \"firebase/auth\";\n\nconst firebaseConfig = {\n  apiKey: import.meta.env.VITE_FIREBASE_API_KEY,\n  authDomain: \"aapani-dukan.firebaseapp.com\",\n  projectId: \"aapani-dukan\",\n  storageBucket: \"aapani-dukan.firebasestorage.app\",\n  messagingSenderId: \"352463214204\",\n  appId: \"1:352463214204:web:a3adc9ef1d8af0de1fdbf9\"\n};\n\nconst app = initializeApp(firebaseConfig);\nexport const auth = getAuth(app);\n\nconst provider = new GoogleAuthProvider();\nprovider.addScope('email');\nprovider.addScope('profile');\n\nexport function signInWithGoogle() {\n  return signInWithPopup(auth, provider);\n}\n\nexport function handleRedirectResult() {\n  return getRedirectResult(auth);\n}\n\nexport function logout() {\n  return signOut(auth);\n}\n","// client/src/lib/queryClient.ts\n\nimport { QueryClient } from \"@tanstack/react-query\";\nimport { auth } from \"@/lib/firebase\";\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      staleTime: Infinity,\n      cacheTime: Infinity,\n    },\n  },\n});\n\nconst API_BASE_URL = \"\"; // यह सुनिश्चित करें कि यह खाली स्ट्रिंग हो\n\n// यह वह apiRequest है जिसे हम उपयोग करेंगे!\nexport async function apiRequest<T>(\n  method: string,\n  path: string, // URL की जगह 'path' का उपयोग करें\n  data?: unknown, // 'any' की जगह 'unknown' अधिक सुरक्षित है\n): Promise<Response> {\n  const url = `${API_BASE_URL}${path}`;\n\n  const headers: HeadersInit = {\n    ...(data ? { \"Content-Type\": \"application/json\" } : {}),\n  };\n\n  console.log(`[apiRequest] Starting request: ${method} ${url}`);\n  console.log(`[apiRequest] Current Firebase user for token check:`, auth.currentUser);\n\n  let token: string | null = null;\n  try {\n    if (auth.currentUser) {\n      token = await auth.currentUser.getIdToken();\n      console.log(`[apiRequest] Firebase ID Token obtained: ${token ? 'Yes' : 'No'}`);\n    } else {\n      console.warn(\"[apiRequest] No Firebase currentUser available to get ID token. Request might be unauthorized.\");\n    }\n  } catch (tokenError) {\n    console.error(\"[apiRequest] Error getting Firebase ID Token:\", tokenError);\n  }\n\n  if (token) {\n    headers[\"Authorization\"] = `Bearer ${token}`;\n    console.log(\"[apiRequest] Authorization header added.\");\n  } else {\n    console.log(\"[apiRequest] No Authorization header added (token was null or error occurred).\");\n  }\n\n  console.log(`[apiRequest] Request headers:`, headers);\n  console.log(`[apiRequest] Request body (JSON.stringify):`, data ? JSON.stringify(data) : 'No body');\n\n  try {\n    const res = await fetch(url, { // 'response' की जगह 'res' उपयोग करें ताकि कंसिस्टेंट रहे\n      method,\n      headers,\n      body: data ? JSON.stringify(data) : undefined,\n      credentials: \"include\", // यह महत्वपूर्ण है\n    });\n\n    console.log(`[apiRequest] Received response for ${url}. Status: ${res.status}`);\n\n    if (!res.ok) {\n      const text = (await res.text()) || res.statusText;\n      console.error(`[apiRequest] API Error Response: ${res.status}: ${text}`);\n      throw new Error(`${res.status}: ${text}`);\n    }\n\n    console.log(`[apiRequest] Request ${url} successful.`);\n    return res;\n  } catch (fetchError) {\n    console.error(`[apiRequest] Fetch operation failed for ${url}:`, fetchError);\n    throw fetchError;\n  }\n}\n","import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","\n\n      import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n  \n","import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","import { createContext, useContext, useEffect, useState } from \"react\";\nimport { User as FirebaseUser, onAuthStateChanged } from \"firebase/auth\";\nimport { auth, handleRedirectResult } from \"@/lib/firebase\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { User } from \"@shared/backend/schema\";\n\ninterface AuthContextType {\n  firebaseUser: FirebaseUser | null;\n  user: User | null;\n  loading: boolean;\n  signOut: () => Promise<void>;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\n  const [firebaseUser, setFirebaseUser] = useState<FirebaseUser | null>(null);\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, async (firebaseUser) => {\n      setFirebaseUser(firebaseUser);\n      \n      if (firebaseUser) {\n        try {\n          // Create or get user in our database\n          const userData = {\n            firebaseUid: firebaseUser.uid,\n            email: firebaseUser.email!,\n            name: firebaseUser.displayName || firebaseUser.email!,\n            role:\"customer\",\n            approvalStatus:\"approved\",\n          };\n          \n          const response = await apiRequest(\"POST\", \"/api/users\", userData);\n          const user = await response.json();\n          setUser(user);\n        } catch (error) {\n          console.error(\"Error creating/fetching user:\", error);\n        }\n      } else {\n        setUser(null);\n      }\n      \n      setLoading(false);\n    });\n\n    return unsubscribe;\n  }, []);\n\n  const signOut = async () => {\n    try {\n      await auth.signOut();\n    } catch (error) {\n      console.error(\"Error signing out:\", error);\n    }\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        firebaseUser,\n        user,\n        loading,\n        signOut,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n}\n","import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","import { useState } from \"react\";\nimport { signInWithGoogle } from \"@/lib/firebase\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Store } from \"lucide-react\";\n\nexport default function AuthPage() {\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleGoogleSignIn = async () => {\n    try {\n      setIsLoading(true);\n      await signInWithGoogle();\n    } catch (error) {\n      console.error(\"Error signing in:\", error);\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center p-4 bg-gray-50\">\n      <div className=\"max-w-md w-full\">\n        <Card className=\"bg-white rounded-2xl shadow-xl\">\n          <CardContent className=\"p-8 text-center\">\n            <div className=\"mb-8\">\n              <div className=\"w-16 h-16 bg-blue-600 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Store className=\"text-white text-2xl w-8 h-8\" />\n              </div>\n              <h1 className=\"text-2xl font-semibold text-gray-900 mb-2\">Welcome Back</h1>\n              <p className=\"text-gray-600\">Sign in to access your seller dashboard</p>\n            </div>\n            \n            <Button\n              onClick={handleGoogleSignIn}\n              disabled={isLoading}\n              className=\"w-full bg-white border-2 border-gray-200 hover:border-gray-300 text-gray-700 hover:bg-gray-50 font-medium py-3 px-6 rounded-lg transition-colors duration-200\"\n              variant=\"outline\"\n            >\n              <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" className=\"mr-3\">\n                <path fill=\"#4285F4\" d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\"/>\n                <path fill=\"#34A853\" d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\"/>\n                <path fill=\"#FBBC05\" d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\"/>\n                <path fill=\"#EA4335\" d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\"/>\n              </svg>\n              Continue with Google\n            </Button>\n            \n            {isLoading && (\n              <div className=\"mt-4 flex items-center justify-center space-x-2 text-gray-600\">\n                <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-blue-600\"></div>\n                <span className=\"text-sm\">Signing you in...</span>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}\n","import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","import { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\n\ninterface CartItem {\n  id: number;\n  productId: number;\n  name: string;\n  price: string;\n  image: string;\n  quantity: number;\n}\n\ninterface CartStore {\n  items: CartItem[];\n  sessionId: string;\n  addItem: (item: Omit<CartItem, 'id'>) => void;\n  removeItem: (id: number) => void;\n  updateQuantity: (id: number, quantity: number) => void;\n  clearCart: () => void;\n  getTotalItems: () => number;\n  getTotalPrice: () => number;\n}\n\nexport const useCartStore = create<CartStore>()(\n  persist(\n    (set, get) => ({\n      items: [],\n      sessionId: Math.random().toString(36).substring(2, 15),\n\n      addItem: (newItem) => {\n        const items = get().items;\n        const existingItem = items.find(item => item.productId === newItem.productId);\n\n        if (existingItem) {\n          set({\n            items: items.map(item =>\n              item.productId === newItem.productId\n                ? { ...item, quantity: item.quantity + newItem.quantity }\n                : item\n            )\n          });\n        } else {\n          set({\n            items: [...items, { ...newItem, id: Date.now() }]\n          });\n        }\n      },\n\n      removeItem: (id) => {\n        set({ items: get().items.filter(item => item.id !== id) });\n      },\n\n      updateQuantity: (id, quantity) => {\n        if (quantity <= 0) {\n          get().removeItem(id);\n          return;\n        }\n\n        set({\n          items: get().items.map(item =>\n            item.id === id ? { ...item, quantity } : item\n          )\n        });\n      },\n\n      clearCart: () => {\n        set({ items: [] });\n      },\n\n      getTotalItems: () => {\n        return get().items.reduce((total, item) => total + item.quantity, 0);\n      },\n\n      getTotalPrice: () => {\n        return get().items.reduce((total, item) => total + (parseFloat(item.price) * item.quantity), 0);\n      },\n    }),\n    {\n      name: 'cart-storage',\n    }\n  )\n);\n\n// ✅ Seller Registration Store — Add this below cart store\ninterface SellerRegistrationStore {\n  isOpen: boolean;\n  open: () => void;\n  close: () => void;\n}\n\nexport const useSellerRegistrationStore = create<SellerRegistrationStore>((set) => ({\n  isOpen: false,\n  open: () => set({ isOpen: true }),\n  close: () => set({ isOpen: false }),\n}));\n","\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","import { X, Plus, Minus, Trash2, ShoppingBag } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Sheet, SheetContent, SheetHeader, SheetTitle } from \"@/components/ui/sheet\";\nimport { useCartStore } from \"@/lib/store\";\nimport { Link } from \"wouter\";\n\ninterface CartModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nexport default function CartModal({ isOpen, onClose }: CartModalProps) {\n  const { items, updateQuantity, removeItem, getTotalPrice, clearCart } = useCartStore();\n\n  const total = getTotalPrice();\n\n  if (items.length === 0) {\n    return (\n      <Sheet open={isOpen} onOpenChange={onClose}>\n        <SheetContent className=\"w-full max-w-md\">\n          <SheetHeader>\n            <SheetTitle>Shopping Cart</SheetTitle>\n          </SheetHeader>\n          \n          <div className=\"flex flex-col items-center justify-center h-96 space-y-4\">\n            <ShoppingBag className=\"h-16 w-16 text-gray-300\" />\n            <p className=\"text-gray-500 text-center\">Your cart is empty</p>\n            <Button onClick={onClose} className=\"bg-primary hover:bg-primary/90\">\n              Continue Shopping\n            </Button>\n          </div>\n        </SheetContent>\n      </Sheet>\n    );\n  }\n\n  return (\n    <Sheet open={isOpen} onOpenChange={onClose}>\n      <SheetContent className=\"w-full max-w-md flex flex-col\">\n        <SheetHeader>\n          <SheetTitle>Shopping Cart</SheetTitle>\n        </SheetHeader>\n\n        {/* Cart Items */}\n        <div className=\"flex-1 overflow-y-auto py-4 space-y-4\">\n          {items.map((item) => (\n            <div key={item.id} className=\"flex items-center space-x-4 p-4 border rounded-lg\">\n              <img\n                src={item.image}\n                alt={item.name}\n                className=\"w-16 h-16 object-cover rounded-lg\"\n              />\n              \n              <div className=\"flex-1 min-w-0\">\n                <h4 className=\"font-medium text-sm truncate\">\n                  {item.name}\n                </h4>\n                <p className=\"text-gray-500 text-sm\">\n                  ${item.price}\n                </p>\n                \n                <div className=\"flex items-center mt-2 space-x-2\">\n                  <Button\n                    size=\"sm\"\n                    variant=\"outline\"\n                    onClick={() => updateQuantity(item.id, item.quantity - 1)}\n                    className=\"h-6 w-6 p-0\"\n                  >\n                    <Minus className=\"h-3 w-3\" />\n                  </Button>\n                  \n                  <span className=\"text-sm font-medium min-w-[20px] text-center\">\n                    {item.quantity}\n                  </span>\n                  \n                  <Button\n                    size=\"sm\"\n                    variant=\"outline\"\n                    onClick={() => updateQuantity(item.id, item.quantity + 1)}\n                    className=\"h-6 w-6 p-0\"\n                  >\n                    <Plus className=\"h-3 w-3\" />\n                  </Button>\n                </div>\n              </div>\n              \n              <Button\n                size=\"sm\"\n                variant=\"ghost\"\n                onClick={() => removeItem(item.id)}\n                className=\"text-red-500 hover:text-red-700 p-1\"\n              >\n                <Trash2 className=\"h-4 w-4\" />\n              </Button>\n            </div>\n          ))}\n        </div>\n\n        {/* Cart Footer */}\n        <div className=\"border-t pt-4 space-y-4\">\n          <div className=\"flex justify-between items-center\">\n            <span className=\"text-lg font-semibold\">Total:</span>\n            <span className=\"text-xl font-bold text-primary\">\n              ${total.toFixed(2)}\n            </span>\n          </div>\n          \n          <div className=\"space-y-2\">\n            <Link href=\"/checkout\">\n              <Button \n                className=\"w-full bg-primary hover:bg-primary/90 text-white\"\n                onClick={onClose}\n              >\n                Proceed to Checkout\n              </Button>\n            </Link>\n            \n            <Link href=\"/cart\">\n              <Button \n                variant=\"outline\" \n                className=\"w-full\"\n                onClick={onClose}\n              >\n                View Cart\n              </Button>\n            </Link>\n          </div>\n        </div>\n      </SheetContent>\n    </Sheet>\n  );\n}\n","// Header.tsx\nimport React from \"react\";\nimport { Link } from \"wouter\";\n\nimport { useCartStore } from \"@/lib/store\";\nimport { useAuth } from \"@/hooks/useAuth\";\n\nimport CartModal from \"./cart-modal\";\n\ninterface Category {\n  id: string;\n  name: string;\n}\n\ninterface HeaderProps {\n  categories: Category[];\n}\n\nconst Header: React.FC<HeaderProps> = ({ categories }) => {\n  const { items, isCartOpen, toggleCart } = useCartStore();\n  const { user } = useAuth();               // 🔑 हमारा लॉग-इन यूज़र\n\n  // 👉 Seller बटन का नया logic\n  const handleBecomeSeller = () => {\n    if (!user) return;                      // extra safety, पर हूम पेज तक no-login आता नहीं\n    if (user.isApprovedSeller) {\n      window.location.href = \"/seller-dashboard\";\n    } else {\n      window.location.href = \"/seller-apply\";\n    }\n  };\n\n  return (\n    <header className=\"bg-white shadow-md px-4 py-3 flex items-center justify-between\">\n      {/* Logo / Home */}\n      <Link href=\"/\" className=\"text-xl font-bold text-blue-600\">\n        Shopnish\n      </Link>\n\n      {/* Category links */}\n      <nav className=\"space-x-4\">\n        {categories.map((category) => (\n          <Link\n            key={category.id}\n            href={`/category/${category.id}`}\n            className=\"text-gray-700 hover:text-blue-600\"\n          >\n            {category.name}\n          </Link>\n        ))}\n      </nav>\n\n      {/* Cart + Become-Seller */}\n      <div className=\"flex items-center space-x-4\">\n        {/* Cart */}\n        <button\n          onClick={toggleCart}\n          className=\"relative text-gray-700 hover:text-blue-600\"\n        >\n          🛒\n          {items.length > 0 && (\n            <span className=\"absolute -top-2 -right-2 bg-red-500 text-white rounded-full w-5 h-5 text-xs flex items-center justify-center\">\n              {items.length}\n            </span>\n          )}\n        </button>\n\n        {/* Become a Seller */}\n        <button\n          onClick={handleBecomeSeller}\n          className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\n        >\n          Become a Seller\n        </button>\n      </div>\n\n      {/* Cart modal */}\n      <CartModal isOpen={isCartOpen} onClose={toggleCart} />\n    </header>\n  );\n};\n\nexport default Header;\n","import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","import { useState } from \"react\";\nimport { Link } from \"wouter\";\nimport { Star, ShoppingCart } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { useCartStore } from \"@/lib/store\";\nimport { useToast } from \"@/hooks/use-toast\";\n\ninterface Product {\n  id: number;\n  name: string;\n  nameHindi: string;\n  description: string | null;\n  price: string;\n  originalPrice: string | null;\n  image: string;\n  brand: string | null;\n  unit: string;\n  stock: number;\n  rating: string | null;\n  reviewCount: number | null;\n}\n\ninterface ProductCardProps {\n  product: Product;\n}\n\nexport default function ProductCard({ product }: ProductCardProps) {\n  const [isAdding, setIsAdding] = useState(false);\n  const addItem = useCartStore(state => state.addItem);\n  const { toast } = useToast();\n\n  // Calculate discount percentage\n  const discountPercentage = product.originalPrice \n    ? Math.round(((parseFloat(product.originalPrice) - parseFloat(product.price)) / parseFloat(product.originalPrice)) * 100)\n    : 0;\n\n  // Stock level indicators\n  const getStockStatus = () => {\n    if (product.stock === 0) return { text: \"Out of Stock\", color: \"text-red-600\", bgColor: \"bg-red-50\" };\n    if (product.stock <= 5) return { text: `Only ${product.stock} left`, color: \"text-orange-600\", bgColor: \"bg-orange-50\" };\n    if (product.stock <= 10) return { text: `${product.stock} units left`, color: \"text-yellow-600\", bgColor: \"bg-yellow-50\" };\n    return { text: \"In Stock\", color: \"text-green-600\", bgColor: \"bg-green-50\" };\n  };\n\n  const stockStatus = getStockStatus();\n\n  const handleAddToCart = async (e: React.MouseEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    \n    if (product.stock === 0) {\n      toast({\n        title: \"Out of Stock\",\n        description: \"This product is currently unavailable.\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n    \n    setIsAdding(true);\n    \n    try {\n      addItem({\n        productId: product.id,\n        name: product.name,\n        price: product.price,\n        image: product.image,\n        quantity: 1,\n      });\n\n      toast({\n        title: \"Added to cart\",\n        description: `${product.name} has been added to your cart.`,\n      });\n    } catch (error) {\n      toast({\n        title: \"Error\",\n        description: \"Failed to add item to cart.\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setTimeout(() => setIsAdding(false), 1000);\n    }\n  };\n\n  const renderStars = (rating: string | null) => {\n    if (!rating) return null;\n    \n    const numRating = parseFloat(rating);\n    const fullStars = Math.floor(numRating);\n    const hasHalfStar = numRating % 1 !== 0;\n    \n    return (\n      <div className=\"flex items-center\">\n        {[...Array(5)].map((_, i) => (\n          <Star\n            key={i}\n            className={`h-4 w-4 ${\n              i < fullStars\n                ? \"text-yellow-400 fill-current\"\n                : i === fullStars && hasHalfStar\n                ? \"text-yellow-400 fill-current opacity-50\"\n                : \"text-gray-300\"\n            }`}\n          />\n        ))}\n      </div>\n    );\n  };\n\n  return (\n    <Card className=\"group cursor-pointer hover:shadow-md transition-shadow duration-200 relative\">\n      <Link href={`/product/${product.id}`}>\n        <div className=\"relative overflow-hidden rounded-t-lg\">\n          <img\n            src={product.image}\n            alt={product.name}\n            className=\"w-full h-48 object-cover group-hover:scale-105 transition-transform duration-300\"\n          />\n          \n          {/* Discount Badge */}\n          {discountPercentage > 0 && (\n            <Badge className=\"absolute top-2 left-2 bg-red-500 text-white font-bold\">\n              {discountPercentage}% OFF\n            </Badge>\n          )}\n          \n          {/* Stock Status Badge */}\n          <Badge \n            variant=\"outline\" \n            className={`absolute top-2 right-2 ${stockStatus.color} ${stockStatus.bgColor} border-0 text-xs`}\n          >\n            {stockStatus.text}\n          </Badge>\n        </div>\n      </Link>\n      \n      <CardContent className=\"p-4\">\n        <Link href={`/product/${product.id}`}>\n          <div className=\"mb-2\">\n            <h4 className=\"font-semibold text-lg line-clamp-2 hover:text-primary transition-colors\">\n              {product.name}\n            </h4>\n            <p className=\"text-sm text-gray-600 line-clamp-1\">{product.nameHindi}</p>\n          </div>\n        </Link>\n        \n        <div className=\"flex items-center justify-between mb-2\">\n          {product.brand && (\n            <Badge variant=\"secondary\" className=\"text-xs\">\n              {product.brand}\n            </Badge>\n          )}\n          <span className=\"text-xs text-gray-500\">{product.unit}</span>\n        </div>\n        \n        {(product.rating || product.reviewCount) && (\n          <div className=\"flex items-center mb-3 space-x-2\">\n            {renderStars(product.rating)}\n            {product.reviewCount && (\n              <span className=\"text-gray-500 text-sm\">\n                ({product.reviewCount})\n              </span>\n            )}\n          </div>\n        )}\n        \n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex flex-col\">\n            <div className=\"flex items-center space-x-2\">\n              <span className=\"text-xl font-bold text-green-600\">\n                ₹{product.price}\n              </span>\n              {product.originalPrice && parseFloat(product.originalPrice) > parseFloat(product.price) && (\n                <span className=\"text-gray-400 line-through text-sm\">\n                  ₹{product.originalPrice}\n                </span>\n              )}\n            </div>\n            {discountPercentage > 0 && (\n              <span className=\"text-xs text-green-600 font-medium\">\n                You save ₹{(parseFloat(product.originalPrice!) - parseFloat(product.price)).toFixed(2)}\n              </span>\n            )}\n          </div>\n          \n          <Button\n            size=\"sm\"\n            onClick={handleAddToCart}\n            disabled={isAdding || product.stock === 0}\n            className={`${\n              product.stock === 0 \n                ? \"bg-gray-400 cursor-not-allowed\" \n                : \"bg-primary hover:bg-primary/90\"\n            } text-white`}\n          >\n            {isAdding ? (\n              <span className=\"text-green-500\">✓</span>\n            ) : product.stock === 0 ? (\n              \"Out of Stock\"\n            ) : (\n              <ShoppingCart className=\"h-4 w-4\" />\n            )}\n          </Button>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n","import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","import { Facebook, Twitter, Instagram, Linkedin, Mail } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Link } from \"wouter\";\n\nexport default function Footer() {\n  const handleNewsletterSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    // Handle newsletter subscription\n  };\n\n  return (\n    <footer className=\"bg-neutral-900 text-white py-16\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n          {/* Company Info */}\n          <div>\n            <h3 className=\"text-xl font-bold mb-4\">Shopnish</h3>\n            <p className=\"text-gray-300 mb-4\">\n              Your trusted online marketplace for everything you need, delivered fast and secure.\n            </p>\n            <div className=\"flex space-x-4\">\n              <Button variant=\"ghost\" size=\"sm\" className=\"text-gray-300 hover:text-white p-2\">\n                <Facebook className=\"h-5 w-5\" />\n              </Button>\n              <Button variant=\"ghost\" size=\"sm\" className=\"text-gray-300 hover:text-white p-2\">\n                <Twitter className=\"h-5 w-5\" />\n              </Button>\n              <Button variant=\"ghost\" size=\"sm\" className=\"text-gray-300 hover:text-white p-2\">\n                <Instagram className=\"h-5 w-5\" />\n              </Button>\n              <Button variant=\"ghost\" size=\"sm\" className=\"text-gray-300 hover:text-white p-2\">\n                <Linkedin className=\"h-5 w-5\" />\n              </Button>\n            </div>\n          </div>\n\n          {/* Quick Links */}\n          <div>\n            <h4 className=\"text-lg font-semibold mb-4\">Quick Links</h4>\n            <ul className=\"space-y-2\">\n              <li>\n                <Link href=\"/about\" className=\"text-gray-300 hover:text-white transition-colors\">\n                  About Us\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/contact\" className=\"text-gray-300 hover:text-white transition-colors\">\n                  Contact\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/faq\" className=\"text-gray-300 hover:text-white transition-colors\">\n                  FAQ\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/shipping\" className=\"text-gray-300 hover:text-white transition-colors\">\n                  Shipping Info\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/returns\" className=\"text-gray-300 hover:text-white transition-colors\">\n                  Returns\n                </Link>\n              </li>\n            </ul>\n          </div>\n\n          {/* Categories */}\n          <div>\n            <h4 className=\"text-lg font-semibold mb-4\">Categories</h4>\n            <ul className=\"space-y-2\">\n              <li>\n                <Link href=\"/?category=1\" className=\"text-gray-300 hover:text-white transition-colors\">\n                  Electronics\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/?category=2\" className=\"text-gray-300 hover:text-white transition-colors\">\n                  Fashion\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/?category=3\" className=\"text-gray-300 hover:text-white transition-colors\">\n                  Home & Garden\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/?category=4\" className=\"text-gray-300 hover:text-white transition-colors\">\n                  Sports\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/?category=6\" className=\"text-gray-300 hover:text-white transition-colors\">\n                  Health & Beauty\n                </Link>\n              </li>\n            </ul>\n          </div>\n\n          {/* Newsletter */}\n          <div>\n            <h4 className=\"text-lg font-semibold mb-4\">Stay Updated</h4>\n            <p className=\"text-gray-300 mb-4\">\n              Subscribe to get special offers and updates.\n            </p>\n            <form onSubmit={handleNewsletterSubmit} className=\"flex\">\n              <Input\n                type=\"email\"\n                placeholder=\"Enter your email\"\n                className=\"flex-1 rounded-r-none border-gray-600 bg-gray-800 text-white placeholder-gray-400\"\n              />\n              <Button \n                type=\"submit\"\n                className=\"bg-primary hover:bg-primary/90 rounded-l-none\"\n              >\n                <Mail className=\"h-4 w-4\" />\n              </Button>\n            </form>\n          </div>\n        </div>\n\n        {/* Bottom Bar */}\n        <div className=\"border-t border-gray-700 mt-12 pt-8 flex flex-col md:flex-row justify-between items-center\">\n          <p className=\"text-gray-300 text-sm\">\n            © 2024 Shopnish. All rights reserved.\n          </p>\n          <div className=\"flex space-x-6 mt-4 md:mt-0\">\n            <Link href=\"/privacy\" className=\"text-gray-300 hover:text-white text-sm transition-colors\">\n              Privacy Policy\n            </Link>\n            <Link href=\"/terms\" className=\"text-gray-300 hover:text-white text-sm transition-colors\">\n              Terms of Service\n            </Link>\n            <Link href=\"/cookies\" className=\"text-gray-300 hover:text-white text-sm transition-colors\">\n              Cookie Policy\n            </Link>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { useLocation } from \"wouter\";\nimport { Filter, ArrowRight } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport Header from \"@/components/header\";\nimport ProductCard from \"@/components/product-card\";\nimport Footer from \"@/components/footer\";\n\ninterface Category {\n  id: number;\n  name: string;\n  slug: string;\n  description: string | null;\n  image: string | null;\n}\n\ninterface Product {\n  id: number;\n  name: string;\n  description: string | null;\n  price: string;\n  originalPrice: string | null;\n  image: string;\n  brand: string | null;\n  rating: string | null;\n  reviewCount: number | null;\n}\n\nexport default function Home() {\n  const [location] = useLocation();\n  const urlParams = new URLSearchParams(location.split('?')[1] || '');\n  const categoryParam = urlParams.get('category');\n  const searchParam = urlParams.get('search');\n\n  const [selectedCategory, setSelectedCategory] = useState<number | null>(\n    categoryParam ? parseInt(categoryParam) : null\n  );\n  const [searchQuery, setSearchQuery] = useState(searchParam || \"\");\n  const [priceFilter, setPriceFilter] = useState<string[]>([]);\n  const [sortBy, setSortBy] = useState(\"best-match\");\n\n  // Update filters when URL changes\n  useEffect(() => {\n    const newCategoryParam = urlParams.get('category');\n    const newSearchParam = urlParams.get('search');\n    \n    setSelectedCategory(newCategoryParam ? parseInt(newCategoryParam) : null);\n    setSearchQuery(newSearchParam || \"\");\n  }, [location]);\n\n  const { data: categories = [], isLoading: categoriesLoading } = useQuery<Category[]>({\n    queryKey: ['/api/categories'],\n  });\n\n  const { data: products = [], isLoading: productsLoading } = useQuery<Product[]>({\n    queryKey: ['/api/products', selectedCategory, searchQuery],\n    queryFn: async () => {\n      const params = new URLSearchParams();\n      if (selectedCategory) params.append('categoryId', selectedCategory.toString());\n      if (searchQuery) params.append('search', searchQuery);\n      \n      const response = await fetch(`/api/products?${params}`);\n      if (!response.ok) throw new Error('Failed to fetch products');\n      return response.json();\n    },\n  });\n\n  const { data: featuredProducts = [] } = useQuery<Product[]>({\n    queryKey: ['/api/products', 'featured'],\n    queryFn: async () => {\n      const response = await fetch('/api/products?featured=true');\n      if (!response.ok) throw new Error('Failed to fetch featured products');\n      return response.json();\n    },\n  });\n\n  const filteredProducts = products.filter(product => {\n    if (priceFilter.length === 0) return true;\n    \n    const price = parseFloat(product.price);\n    return priceFilter.some(range => {\n      switch (range) {\n        case 'under-25': return price < 25;\n        case '25-50': return price >= 25 && price < 50;\n        case '50-100': return price >= 50 && price < 100;\n        case 'over-100': return price >= 100;\n        default: return true;\n      }\n    });\n  });\n\n  const handlePriceFilterChange = (range: string, checked: boolean) => {\n    if (checked) {\n      setPriceFilter(prev => [...prev, range]);\n    } else {\n      setPriceFilter(prev => prev.filter(r => r !== range));\n    }\n  };\n\n  const scrollToProducts = () => {\n    document.getElementById('products-section')?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  if (categoriesLoading) {\n    return (\n      <div className=\"min-h-screen bg-neutral-50\">\n        <div className=\"max-w-7xl mx-auto px-4 py-8\">\n          <Skeleton className=\"h-16 w-full mb-8\" />\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n            {[...Array(8)].map((_, i) => (\n              <Skeleton key={i} className=\"h-80 w-full\" />\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-neutral-50\">\n      <Header categories={categories} />\n\n      {/* Hero Section - Only show on home page without filters */}\n      {!selectedCategory && !searchQuery && (\n        <section className=\"bg-gradient-to-r from-primary to-orange-500 text-white py-16\">\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <div className=\"grid lg:grid-cols-2 gap-12 items-center\">\n              <div>\n                <h2 className=\"text-4xl lg:text-6xl font-bold mb-6\">\n                  Shop Everything You Need\n                </h2>\n                <p className=\"text-xl mb-8 text-orange-100\">\n                  Discover millions of products from trusted sellers with fast delivery and great prices.\n                </p>\n                <Button \n                  onClick={scrollToProducts}\n                  size=\"lg\"\n                  className=\"bg-white text-primary hover:bg-gray-100 font-semibold\"\n                >\n                  Start Shopping <ArrowRight className=\"ml-2 h-5 w-5\" />\n                </Button>\n              </div>\n              <div className=\"relative\">\n                <img\n                  src=\"https://images.unsplash.com/photo-1556742049-0cfed4f6a45d\"\n                  alt=\"Online shopping experience\"\n                  className=\"rounded-xl shadow-2xl w-full h-auto\"\n                />\n              </div>\n            </div>\n          </div>\n        </section>\n      )}\n\n      {/* Featured Categories - Only show on home page */}\n      {!selectedCategory && !searchQuery && (\n        <section className=\"py-16 bg-white\">\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <h3 className=\"text-3xl font-bold text-neutral-900 mb-12 text-center\">\n              Shop by Category\n            </h3>\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-6\">\n              {categories.slice(0, 4).map((category) => (\n                <div \n                  key={category.id} \n                  className=\"text-center group cursor-pointer\"\n                  onClick={() => setSelectedCategory(category.id)}\n                >\n                  <img\n                    src={category.image || 'https://images.unsplash.com/photo-1441986300917-64674bd600d8'}\n                    alt={category.name}\n                    className=\"w-full h-48 object-cover rounded-lg group-hover:shadow-lg transition-shadow\"\n                  />\n                  <h4 className=\"text-lg font-semibold mt-4\">\n                    {category.name}\n                  </h4>\n                </div>\n              ))}\n            </div>\n          </div>\n        </section>\n      )}\n\n      {/* Product Catalog */}\n      <main id=\"products-section\" className=\"py-16\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex flex-col lg:flex-row gap-8\">\n            {/* Filters Sidebar */}\n            <aside className=\"lg:w-64 flex-shrink-0\">\n              <Card className=\"sticky top-24\">\n                <CardContent className=\"p-6\">\n                  <h4 className=\"text-lg font-semibold mb-4 flex items-center\">\n                    <Filter className=\"mr-2 h-5 w-5\" />\n                    Filters\n                  </h4>\n                  \n                  {/* Price Range */}\n                  <div className=\"mb-6\">\n                    <h5 className=\"font-medium mb-3\">Price Range</h5>\n                    <div className=\"space-y-2\">\n                      {[\n                        { id: 'under-25', label: 'Under $25' },\n                        { id: '25-50', label: '$25 - $50' },\n                        { id: '50-100', label: '$50 - $100' },\n                        { id: 'over-100', label: 'Over $100' },\n                      ].map((range) => (\n                        <div key={range.id} className=\"flex items-center space-x-2\">\n                          <Checkbox\n                            id={range.id}\n                            checked={priceFilter.includes(range.id)}\n                            onCheckedChange={(checked) => \n                              handlePriceFilterChange(range.id, checked as boolean)\n                            }\n                          />\n                          <label htmlFor={range.id} className=\"text-sm cursor-pointer\">\n                            {range.label}\n                          </label>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n\n                  {/* Categories */}\n                  <div className=\"mb-6\">\n                    <h5 className=\"font-medium mb-3\">Categories</h5>\n                    <div className=\"space-y-2\">\n                      <div className=\"flex items-center space-x-2\">\n                        <Checkbox\n                          id=\"all-categories\"\n                          checked={!selectedCategory}\n                          onCheckedChange={() => setSelectedCategory(null)}\n                        />\n                        <label htmlFor=\"all-categories\" className=\"text-sm cursor-pointer\">\n                          All Categories\n                        </label>\n                      </div>\n                      {categories.map((category) => (\n                        <div key={category.id} className=\"flex items-center space-x-2\">\n                          <Checkbox\n                            id={`category-${category.id}`}\n                            checked={selectedCategory === category.id}\n                            onCheckedChange={() => \n                              setSelectedCategory(selectedCategory === category.id ? null : category.id)\n                            }\n                          />\n                          <label htmlFor={`category-${category.id}`} className=\"text-sm cursor-pointer\">\n                            {category.name}\n                          </label>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </aside>\n\n            {/* Product Grid */}\n            <div className=\"flex-1\">\n              {/* Sort and View Options */}\n              <div className=\"flex justify-between items-center mb-6\">\n                <h3 className=\"text-2xl font-bold text-neutral-900\">\n                  {searchQuery ? `Search results for \"${searchQuery}\"` : \n                   selectedCategory ? categories.find(c => c.id === selectedCategory)?.name : \n                   'Featured Products'}\n                </h3>\n                <div className=\"flex items-center space-x-4\">\n                  <Select value={sortBy} onValueChange={setSortBy}>\n                    <SelectTrigger className=\"w-48\">\n                      <SelectValue placeholder=\"Sort by\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"best-match\">Best Match</SelectItem>\n                      <SelectItem value=\"price-low\">Price: Low to High</SelectItem>\n                      <SelectItem value=\"price-high\">Price: High to Low</SelectItem>\n                      <SelectItem value=\"rating\">Customer Rating</SelectItem>\n                      <SelectItem value=\"newest\">Newest First</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n              </div>\n\n              {/* Product Grid */}\n              {productsLoading ? (\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\n                  {[...Array(8)].map((_, i) => (\n                    <Skeleton key={i} className=\"h-80 w-full\" />\n                  ))}\n                </div>\n              ) : filteredProducts.length === 0 ? (\n                <div className=\"text-center py-12\">\n                  <p className=\"text-gray-500 text-lg\">No products found matching your criteria.</p>\n                  <Button \n                    onClick={() => {\n                      setSelectedCategory(null);\n                      setSearchQuery(\"\");\n                      setPriceFilter([]);\n                    }}\n                    className=\"mt-4\"\n                    variant=\"outline\"\n                  >\n                    Clear Filters\n                  </Button>\n                </div>\n              ) : (\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\n                  {filteredProducts.map((product) => (\n                    <ProductCard key={product.id} product={product} />\n                  ))}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </main>\n\n      <Footer />\n    </div>\n  );\n                    }\n","import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","// @shared/backend/schema.ts\nimport { pgTable, text, serial, integer, decimal, boolean, timestamp, json, varchar } from \"drizzle-orm/pg-core\"; // varchar को इम्पोर्ट करें\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\n\n// ✅ ध्यान दें: `sellers` Zod ऑब्जेक्ट है, Drizzle स्कीमा नहीं।\n// यदि आप इसे डेटाबेस टेबल के रूप में उपयोग करना चाहते हैं, तो इसे `pgTable` में बदलना होगा।\n// फिलहाल, मैं इसे छोड़ रहा हूँ, लेकिन यह संभावित रूप से एक असंगति का स्रोत है।\nexport const sellers = z.object({\n  id: z.string().uuid(),\n  userId: z.string(), // यह 'users' टेबल के 'id' से रेफरेंस होना चाहिए अगर यह DB से है\n  businessName: z.string(),\n  email: z.string().email(),\n  phone: z.string().optional(),\n  address: z.string().optional(),\n  approvalStatus: z.enum([\"pending\", \"approved\", \"rejected\"]),\n  approvedAt: z.date().optional(),\n  rejectionReason: z.string().optional(),\n  createdAt: z.date(),\n  updatedAt: z.date(),\n});\n// Seller application table\nexport const sellerApplications = pgTable(\"seller_applications\", {\n  id:            serial(\"id\").primaryKey(),\n  userId:        integer(\"user_id\").references(() => users.id).notNull(),\n  businessName:  text(\"business_name\").notNull(),\n  gstNumber:     text(\"gst_number\"),\n  phone:         text(\"phone\"),\n  address:       text(\"address\"),\n  city:          text(\"city\"),\n  pincode:       text(\"pincode\"),\n  approvalStatus: varchar(\"approval_status\", {\n    enum: [\"pending\", \"approved\", \"rejected\"],\n  }).default(\"pending\"),\n\n  createdAt:     timestamp(\"created_at\").defaultNow(),\n  updatedAt:     timestamp(\"updated_at\").defaultNow(),\n});\n\n\n// User roles: customer, seller, admin, delivery_boy\nexport const users = pgTable(\"users\", {\n  id: serial(\"id\").primaryKey(),\n  firebaseUid: text(\"firebase_uid\").unique(), // ✅ Firebase UID यहाँ जोड़ें\n  email: text(\"email\").notNull().unique(),\n  // password: text(\"password\").notNull(), // ✅ यदि आप Firebase Auth का उपयोग कर रहे हैं तो इसकी आवश्यकता नहीं है\n  name: text(\"name\"), // ✅ यूज़र का नाम यहाँ जोड़ें\n  firstName: text(\"first_name\"), // इसे optional या हटा सकते हैं यदि 'name' ही काफी है\n  lastName: text(\"last_name\"),   // इसे optional या हटा सकते हैं\n  phone: text(\"phone\"),          // इसे optional या हटा सकते हैं\n  role: varchar(\"role\", { enum: [\"customer\", \"seller\", \"admin\", \"delivery_boy\"] }).notNull().default(\"customer\"), // ✅ varchar और enum का उपयोग करें\n  approvalStatus: varchar(\"approval_status\", { enum: [\"pending\", \"approved\", \"rejected\"] }).notNull().default(\"approved\"), // ✅ अप्रूवल स्टेटस जोड़ें\n  address: text(\"address\"),\n  city: text(\"city\"),\n  pincode: text(\"pincode\"),\n  isActive: boolean(\"is_active\").default(true),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\n// Seller store information\nexport const stores = pgTable(\"stores\", {\n  id: serial(\"id\").primaryKey(),\n  sellerId: integer(\"seller_id\").references(() => users.id),\n  storeName: text(\"store_name\").notNull(),\n  storeType: text(\"store_type\").notNull(), // grocery, pharmacy, general, etc.\n  address: text(\"address\").notNull(),\n  city: text(\"city\").notNull(),\n  pincode: text(\"pincode\").notNull(),\n  phone: text(\"phone\").notNull(),\n  isActive: boolean(\"is_active\").default(true),\n  licenseNumber: text(\"license_number\"),\n  gstNumber: text(\"gst_number\"),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\n\n// ✅ insertSellerSchema की आवश्यकता नहीं होगी यदि आप `users` टेबल में `role` का उपयोग कर रहे हैं।\n// यदि आप इसे एक अलग 'sellers' टेबल के रूप में उपयोग कर रहे हैं, तो इसे `createInsertSchema` से बनाना बेहतर है।\n// फिलहाल, मैंने इसे हटा दिया है क्योंकि यह `users` टेबल के लिए ऑथेंटिकेशन लॉजिक को ओवरलैप कर रहा है।\n export const insertSellerSchema = z.object({\n   email: z.string().email(),\n   password: z.string().min(6),\n   firstName: z.string().min(1),\n   lastName: z.string().min(1),\n   phone: z.string().min(10),\n   role: z.literal(\"seller\").default(\"seller\"),\n });\n\n\n// Product categories for essentials\nexport const categories = pgTable(\"categories\", {\n  id: serial(\"id\").primaryKey(),\n  name: text(\"name\").notNull(),\n  nameHindi: text(\"name_hindi\"),\n  slug: text(\"slug\").notNull().unique(),\n  description: text(\"description\"),\n  image: text(\"image\"),\n  isActive: boolean(\"is_active\").default(true),\n  sortOrder: integer(\"sort_order\").default(0),\n});\n\n// Products from different sellers\nexport const products = pgTable(\"products\", {\n  id: serial(\"id\").primaryKey(),\n  sellerId: integer(\"seller_id\").references(() => users.id),\n  storeId: integer(\"store_id\").references(() => stores.id),\n  categoryId: integer(\"category_id\").references(() => categories.id),\n  name: text(\"name\").notNull(),\n  nameHindi: text(\"name_hindi\"),\n  description: text(\"description\"),\n  descriptionHindi: text(\"description_hindi\"),\n  price: decimal(\"price\", { precision: 10, scale: 2 }).notNull(),\n  originalPrice: decimal(\"original_price\", { precision: 10, scale: 2 }),\n  image: text(\"image\").notNull(),\n  images: text(\"images\").array(),\n  unit: text(\"unit\").notNull().default(\"piece\"), // kg, liter, piece, etc.\n  brand: text(\"brand\"),\n  stock: integer(\"stock\").notNull().default(0),\n  minOrderQty: integer(\"min_order_qty\").default(1),\n  maxOrderQty: integer(\"max_order_qty\").default(100),\n  isActive: boolean(\"is_active\").default(true),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\n// Delivery areas and charges\nexport const deliveryAreas = pgTable(\"delivery_areas\", {\n  id: serial(\"id\").primaryKey(),\n  areaName: text(\"area_name\").notNull(),\n  pincode: text(\"pincode\").notNull(),\n  city: text(\"city\").notNull(),\n  deliveryCharge: decimal(\"delivery_charge\", { precision: 10, scale: 2 }).notNull(),\n  freeDeliveryAbove: decimal(\"free_delivery_above\", { precision: 10, scale: 2 }),\n  isActive: boolean(\"is_active\").default(true),\n});\n\n// Delivery boys\nexport const deliveryBoys = pgTable(\"delivery_boys\", {\n  id: serial(\"id\").primaryKey(),\n  firebaseUid: text(\"firebase_uid\").unique().notNull(), // ✅ Firebase UID यहाँ जोड़ें\n  email: text(\"email\").unique().notNull(), // ✅ ईमेल यहाँ जोड़ें\n  name: text(\"name\"), // ✅ नाम यहाँ जोड़ें\n  approvalStatus: varchar(\"approval_status\", { enum: [\"pending\", \"approved\", \"rejected\"] }).notNull().default(\"pending\"), // ✅ अप्रूवल स्टेटस यहाँ जोड़ें\n  // userId: integer(\"user_id\").references(() => users.id), // ✅ इसे हटा दें या optional करें यदि आप Firebase UID से सीधे लिंक कर रहे हैं\n  vehicleType: text(\"vehicle_type\").notNull(), // bike, cycle, auto\n  vehicleNumber: text(\"vehicle_number\"),\n  licenseNumber: text(\"license_number\"),\n  aadharNumber: text(\"aadhar_number\"),\n  isAvailable: boolean(\"is_available\").default(true),\n  currentLat: decimal(\"current_lat\", { precision: 10, scale: 8 }),\n  currentLng: decimal(\"current_lng\", { precision: 11, scale: 8 }),\n  rating: decimal(\"rating\", { precision: 3, scale: 2 }).default(\"5.0\"),\n  totalDeliveries: integer(\"total_deliveries\").default(0),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\n// Shopping cart\nexport const cartItems = pgTable(\"cart_items\", {\n  id: serial(\"id\").primaryKey(),\n  userId: integer(\"user_id\").references(() => users.id),\n  productId: integer(\"product_id\").references(() => products.id),\n  quantity: integer(\"quantity\").notNull().default(1),\n  sessionId: text(\"session_id\"),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\n// Orders with delivery tracking\nexport const orders = pgTable(\"orders\", {\n  id: serial(\"id\").primaryKey(),\n  customerId: integer(\"customer_id\").references(() => users.id),\n  deliveryBoyId: integer(\"delivery_boy_id\").references(() => deliveryBoys.id),\n  orderNumber: text(\"order_number\").notNull().unique(),\n  subtotal: decimal(\"subtotal\", { precision: 10, scale: 2 }).notNull(),\n  deliveryCharge: decimal(\"delivery_charge\", { precision: 10, scale: 2 }).default(\"0\"),\n  discount: decimal(\"discount\", { precision: 10, scale: 2 }).default(\"0\"),\n  total: decimal(\"total\", { precision: 10, scale: 2 }).notNull(),\n  paymentMethod: text(\"payment_method\").notNull(), // cod, online, upi\n  paymentStatus: text(\"payment_status\").default(\"pending\"), // pending, paid, failed\n  status: text(\"status\").notNull().default(\"placed\"), // placed, confirmed, packed, out_for_delivery, delivered, cancelled\n  deliveryAddress: json(\"delivery_address\").notNull(),\n  deliveryInstructions: text(\"delivery_instructions\"),\n  estimatedDeliveryTime: timestamp(\"estimated_delivery_time\"),\n  actualDeliveryTime: timestamp(\"actual_delivery_time\"),\n  promoCode: text(\"promo_code\"),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\nexport const orderItems = pgTable(\"order_items\", {\n  id: serial(\"id\").primaryKey(),\n  orderId: integer(\"order_id\").references(() => orders.id),\n  productId: integer(\"product_id\").references(() => products.id),\n  sellerId: integer(\"seller_id\").references(() => users.id),\n  quantity: integer(\"quantity\").notNull(),\n  unitPrice: decimal(\"unit_price\", { precision: 10, scale: 2 }).notNull(),\n  totalPrice: decimal(\"total_price\", { precision: 10, scale: 2 }).notNull(),\n});\n\n// Order tracking/status updates\nexport const orderTracking = pgTable(\"order_tracking\", {\n  id: serial(\"id\").primaryKey(),\n  orderId: integer(\"order_id\").references(() => orders.id),\n  status: text(\"status\").notNull(),\n  message: text(\"message\"),\n  messageHindi: text(\"message_hindi\"),\n  location: text(\"location\"),\n  updatedBy: integer(\"updated_by\").references(() => users.id),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\n// Promo codes and discounts\nexport const promoCodes = pgTable(\"promo_codes\", {\n  id: serial(\"id\").primaryKey(),\n  code: text(\"code\").notNull().unique(),\n  description: text(\"description\").notNull(),\n  discountType: text(\"discount_type\").notNull(), // percentage, fixed\n  discountValue: decimal(\"discount_value\", { precision: 10, scale: 2 }).notNull(),\n  minOrderAmount: decimal(\"min_order_amount\", { precision: 10, scale: 2 }),\n  maxDiscount: decimal(\"max_discount\", { precision: 10, scale: 2 }),\n  usageLimit: integer(\"usage_limit\"),\n  usedCount: integer(\"used_count\").default(0),\n  validFrom: timestamp(\"valid_from\").notNull(),\n  validUntil: timestamp(\"valid_until\").notNull(),\n  isActive: boolean(\"is_active\").default(true),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\n// Home services\nexport const serviceCategories = pgTable(\"service_categories\", {\n  id: serial(\"id\").primaryKey(),\n  name: text(\"name\").notNull(),\n  nameHindi: text(\"name_hindi\"),\n  description: text(\"description\"),\n  icon: text(\"icon\"),\n  isActive: boolean(\"is_active\").default(true),\n});\n\nexport const services = pgTable(\"services\", {\n  id: serial(\"id\").primaryKey(),\n  categoryId: integer(\"category_id\").references(() => serviceCategories.id),\n  name: text(\"name\").notNull(),\n  nameHindi: text(\"name_hindi\"),\n  description: text(\"description\"),\n  basePrice: decimal(\"base_price\", { precision: 10, scale: 2 }).notNull(),\n  duration: integer(\"duration\").notNull(), // in minutes\n  isActive: boolean(\"is_active\").default(true),\n});\n\nexport const serviceProviders = pgTable(\"service_providers\", {\n  id: serial(\"id\").primaryKey(),\n  userId: integer(\"user_id\").references(() => users.id),\n  serviceId: integer(\"service_id\").references(() => services.id),\n  experience: text(\"experience\"),\n  rating: decimal(\"rating\", { precision: 3, scale: 2 }).default(\"5.0\"),\n  totalJobs: integer(\"total_jobs\").default(0),\n  isAvailable: boolean(\"is_available\").default(true),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\nexport const serviceBookings = pgTable(\"service_bookings\", {\n  id: serial(\"id\").primaryKey(),\n  customerId: integer(\"customer_id\").references(() => users.id),\n  serviceProviderId: integer(\"service_provider_id\").references(() => serviceProviders.id),\n  serviceId: integer(\"service_id\").references(() => services.id),\n  bookingNumber: text(\"booking_number\").notNull().unique(),\n  scheduledDate: timestamp(\"scheduled_date\").notNull(),\n  scheduledTime: text(\"scheduled_time\").notNull(),\n  address: json(\"address\").notNull(),\n  price: decimal(\"price\", { precision: 10, scale: 2 }).notNull(),\n  status: text(\"status\").default(\"pending\"), // pending, confirmed, in_progress, completed, cancelled\n  paymentMethod: text(\"payment_method\").notNull(),\n  paymentStatus: text(\"payment_status\").default(\"pending\"),\n  customerNotes: text(\"customer_notes\"),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\n// Customer reviews for products\nexport const reviews = pgTable(\"reviews\", {\n  id: serial(\"id\").primaryKey(),\n  customerId: integer(\"customer_id\").references(() => users.id),\n  productId: integer(\"product_id\").references(() => products.id),\n  orderId: integer(\"order_id\").references(() => orders.id),\n  rating: integer(\"rating\").notNull(),\n  comment: text(\"comment\"),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\n// --- Insert schemas ---\n// ✅ `users` के लिए updated insert schema\nexport const insertUserSchema = createInsertSchema(users)\n  .omit({\n    id: true,\n    createdAt: true,\n    updatedAt: true,\n  })\n  .partial({          // ✅ सब optional कर दिया\n    role: true,\n    approvalStatus: true,\n  })\n  .required({         // ✅ सिर्फ ज़रूरी fields पक्की रखीं\n    firebaseUid: true,\n    email: true,\n    name: true,\n  });\n\nexport const insertStoreSchema = createInsertSchema(stores).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertCategorySchema = createInsertSchema(categories).omit({\n  id: true,\n});\n\nexport const insertProductSchema = createInsertSchema(products).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n});\n\nexport const insertDeliveryAreaSchema = createInsertSchema(deliveryAreas).omit({\n  id: true,\n});\n\n// ✅ `deliveryBoys` के लिए updated insert schema\nexport const insertDeliveryBoySchema = createInsertSchema(deliveryBoys).omit({\n  id: true,\n  createdAt: true,\n  // userId: true, // यदि आप इसे हटा रहे हैं तो यहाँ भी omit करें\n});\n\nexport const insertCartItemSchema = createInsertSchema(cartItems).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertOrderSchema = createInsertSchema(orders).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n});\n\nexport const insertOrderItemSchema = createInsertSchema(orderItems).omit({\n  id: true,\n});\n\nexport const insertOrderTrackingSchema = createInsertSchema(orderTracking).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertPromoCodeSchema = createInsertSchema(promoCodes).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertServiceCategorySchema = createInsertSchema(serviceCategories).omit({\n  id: true,\n});\n\nexport const insertServiceSchema = createInsertSchema(services).omit({\n  id: true,\n});\n\nexport const insertServiceProviderSchema = createInsertSchema(serviceProviders).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertServiceBookingSchema = createInsertSchema(serviceBookings).omit({\n  id: true,\n  createdAt: true,\n});\nexport const insertSellerApplicationSchema = createInsertSchema(sellerApplications).omit({\n  id: true,\n  createdAt: true,\n});\nexport const insertReviewSchema = createInsertSchema(reviews).omit({\n  id: true,\n  createdAt: true,\n});\n\n// --- Types ---\nexport type User = typeof users.$inferSelect;\nexport type InsertUser = z.infer<typeof insertUserSchema>; // ✅ यह अब updated schema से infer होगा\n\nexport type Store = typeof stores.$inferSelect;\nexport type InsertStore = z.infer<typeof insertStoreSchema>;\n\nexport type Category = typeof categories.$inferSelect;\nexport type InsertCategory = z.infer<typeof insertCategorySchema>;\n\nexport type Product = typeof products.$inferSelect;\nexport type InsertProduct = z.infer<typeof insertProductSchema>;\n\nexport type DeliveryArea = typeof deliveryAreas.$inferSelect;\nexport type InsertDeliveryArea = z.infer<typeof insertDeliveryAreaSchema>;\n\nexport type DeliveryBoy = typeof deliveryBoys.$inferSelect;\nexport type InsertDeliveryBoy = z.infer<typeof insertDeliveryBoySchema>; // ✅ यह अब updated schema से infer होगा\n\nexport type CartItem = typeof cartItems.$inferSelect;\nexport type InsertCartItem = z.infer<typeof insertCartItemSchema>;\n\nexport type Order = typeof orders.$inferSelect;\nexport type InsertOrder = z.infer<typeof insertOrderSchema>;\n\nexport type OrderItem = typeof orderItems.$inferSelect;\nexport type InsertOrderItem = z.infer<typeof insertOrderItemSchema>;\n\nexport type OrderTracking = typeof orderTracking.$inferSelect;\nexport type InsertOrderTracking = z.infer<typeof insertOrderTrackingSchema>;\n\nexport type PromoCode = typeof promoCodes.$inferSelect;\nexport type InsertPromoCode = z.infer<typeof insertPromoCodeSchema>;\n\nexport type ServiceCategory = typeof serviceCategories.$inferSelect;\nexport type InsertServiceCategory = z.infer<typeof insertServiceCategorySchema>;\n\nexport type Service = typeof services.$inferSelect;\nexport type InsertService = z.infer<typeof insertServiceSchema>;\n\nexport type ServiceProvider = typeof serviceProviders.$inferSelect;\nexport type InsertServiceProvider = z.infer<typeof insertServiceProviderSchema>;\n\nexport type ServiceBooking = typeof serviceBookings.$inferSelect;\nexport type InsertServiceBooking = z.infer<typeof insertServiceBookingSchema>;\n\nexport type Review = typeof reviews.$inferSelect;\nexport type InsertReview = z.infer<typeof insertReviewSchema>;\n\n// ✅ Seller type को Drizzle स्कीमा से Infer करें यदि आप इसे डेटाबेस से उपयोग कर रहे हैं।\n// यदि यह केवल एक Zod ऑब्जेक्ट है, तो इसे ऐसा ही छोड़ दें, लेकिन यह डेटाबेस से सीधे काम नहीं करेगा।\n// मैं मान रहा हूँ कि आप इसे डेटाबेस टेबल के रूप में उपयोग करना चाहेंगे।\n// तो आपको पहले `sellers` को `pgTable` में बदलना होगा अगर वह नहीं है।\n// यदि आप seller के लिए अलग टेबल बनाते हैं तो यह कुछ ऐसा होगा:\n/*\nexport const sellersPgTable = pgTable(\"sellers\", {\n  id: serial(\"id\").primaryKey(),\n  userId: integer(\"user_id\").references(() => users.id).unique().notNull(), // One-to-one with users table\n  businessName: text(\"business_name\").notNull(),\n  // Add other seller specific fields as needed\n  approvalStatus: varchar(\"approval_status\", { enum: [\"pending\", \"approved\", \"rejected\"] }).notNull().default(\"pending\"),\n  approvedAt: timestamp(\"approved_at\"),\n  rejectionReason: text(\"rejection_reason\"),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\nexport type Seller = typeof sellersPgTable.$inferSelect;\nexport type InsertSeller = typeof sellersPgTable.$inferInsert;\n*/\n\n// यदि `sellers` केवल एक Zod object है और आप उसे database table की तरह use नहीं कर रहे, तो उसे वैसे ही छोड़ दें\n// और `getSellers` function `storage.ts` में उसे in-memory handle करेगा।\n// यहाँ आपके मौजूदा Zod object पर आधारित `Seller` type है:\nexport type Seller = z.infer<typeof sellers>;\n","import Header from \"@/components/header\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Label } from \"@/components/ui/label\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger, DialogDescription } from \"@/components/ui/dialog\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { insertProductSchema,insertSellerSchema,insertCategorySchema } from \"@shared/backend/schema\";\nimport type { Seller, ProductWithSeller, Category, OrderWithItems } from \"@shared/backend/schema\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { \n  Package, \n  ShoppingCart, \n  TrendingUp, \n  Star, \n  Plus, \n  Edit, \n  Trash2,\n  Eye,\n  Clock,\n  CheckCircle,\n  Truck,\n  Settings\n} from \"lucide-react\";\nimport { useState } from \"react\";\nimport { z } from \"zod\";\n\nconst productFormSchema = insertProductSchema.extend({\n  images: z.array(z.string()).optional(),\n});\n\nconst sellerFormSchema = insertSellerSchema.omit({ userId: true });\nconst categoryFormSchema = insertCategorySchema;\n\nexport default function SellerDashboard() {\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n  const [isProductDialogOpen, setIsProductDialogOpen] = useState(false);\n  const [editingProduct, setEditingProduct] = useState<ProductWithSeller | null>(null);\n  const [isCategoryDialogOpen, setIsCategoryDialogOpen] = useState(false);\n\n  // Fetch seller profile\n  const { data: seller, isLoading: sellerLoading } = useQuery<Seller>({\n    queryKey: [\"/api/sellers/me\"],\n  });\n\n  // Fetch seller's products\n  const { data: products, isLoading: productsLoading } = useQuery<ProductWithSeller[]>({\n    queryKey: [\"/api/products\", { sellerId: seller?.id }],\n    enabled: !!seller?.id,\n  });\n\n  // Fetch seller's orders\n  const { data: orders, isLoading: ordersLoading } = useQuery<OrderWithItems[]>({\n    queryKey: [\"/api/seller/orders\"],\n    enabled: !!seller?.id,\n  });\n\n  // Fetch categories for product form\n  const { data: categories } = useQuery<Category[]>({\n    queryKey: [\"/api/categories\"],\n  });\n\n  // Product form\n  const productForm = useForm<z.infer<typeof productFormSchema>>({\n    resolver: zodResolver(productFormSchema),\n    defaultValues: {\n      name: \"\",\n      description: \"\",\n      price: \"\",\n      originalPrice: \"\",\n      categoryId: undefined,\n      stock: 0,\n      images: [],\n    },\n  });\n\n  // Category form\n  const categoryForm = useForm<z.infer<typeof categoryFormSchema>>({\n    resolver: zodResolver(categoryFormSchema),\n    defaultValues: {\n      name: \"\",\n      slug: \"\",\n      description: \"\",\n      imageUrl: \"\",\n      isActive: true,\n    },\n  });\n\n  // Seller form\n  const sellerForm = useForm<z.infer<typeof sellerFormSchema>>({\n    resolver: zodResolver(sellerFormSchema),\n    defaultValues: seller || {\n      businessName: \"\",\n      description: \"\",\n      businessAddress: \"\",\n      businessPhone: \"\",\n      gstNumber: \"\",\n      bankAccountNumber: \"\",\n      ifscCode: \"\",\n    },\n  });\n\n  // Create/Update product mutation\n  const productMutation = useMutation({\n    mutationFn: async (data: z.infer<typeof productFormSchema>) => {\n      if (editingProduct) {\n        return await apiRequest(\"PUT\", `/api/products/${editingProduct.id}`, data);\n      } else {\n        return await apiRequest(\"POST\", \"/api/products\", data);\n      }\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/products\"] });\n      toast({\n        title: editingProduct ? \"Product updated\" : \"Product created\",\n        description: `Product has been ${editingProduct ? \"updated\" : \"created\"} successfully`,\n      });\n      setIsProductDialogOpen(false);\n      setEditingProduct(null);\n      productForm.reset();\n    },\n    onError: () => {\n      toast({\n        title: \"Error\",\n        description: `Failed to ${editingProduct ? \"update\" : \"create\"} product`,\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  // Update seller mutation\n  const sellerMutation = useMutation({\n    mutationFn: async (data: z.infer<typeof sellerFormSchema>) => {\n      return await apiRequest(\"PUT\", \"/api/sellers/me\", data);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/sellers/me\"] });\n      toast({\n        title: \"Profile updated\",\n        description: \"Your seller profile has been updated successfully\",\n      });\n    },\n    onError: () => {\n      toast({\n        title: \"Error\",\n        description: \"Failed to update seller profile\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  // Delete product mutation\n  const deleteProductMutation = useMutation({\n    mutationFn: async (productId: number) => {\n      return await apiRequest(\"DELETE\", `/api/products/${productId}`);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/products\"] });\n      toast({\n        title: \"Product deleted\",\n        description: \"Product has been deleted successfully\",\n      });\n    },\n    onError: () => {\n      toast({\n        title: \"Error\",\n        description: \"Failed to delete product\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  // Category creation mutation\n  const categoryMutation = useMutation({\n    mutationFn: async (data: z.infer<typeof categoryFormSchema>) => {\n      return await apiRequest(\"POST\", \"/api/categories\", data);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/categories\"] });\n      toast({\n        title: \"Category created\",\n        description: \"Category has been created successfully\",\n      });\n      setIsCategoryDialogOpen(false);\n      categoryForm.reset();\n    },\n    onError: () => {\n      toast({\n        title: \"Error\",\n        description: \"Failed to create category\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const onProductSubmit = (data: z.infer<typeof productFormSchema>) => {\n    productMutation.mutate(data);\n  };\n\n  const onSellerSubmit = (data: z.infer<typeof sellerFormSchema>) => {\n    sellerMutation.mutate(data);\n  };\n\n  const onCategorySubmit = (data: z.infer<typeof categoryFormSchema>) => {\n    categoryMutation.mutate(data);\n  };\n\n  const handleEditProduct = (product: ProductWithSeller) => {\n    setEditingProduct(product);\n    productForm.reset({\n      name: product.name,\n      description: product.description || \"\",\n      price: product.price,\n      originalPrice: product.originalPrice || \"\",\n      categoryId: product.categoryId,\n      stock: product.stock || 0,\n      images: product.images || [],\n    });\n    setIsProductDialogOpen(true);\n  };\n\n  const handleDeleteProduct = (productId: number) => {\n    if (confirm(\"Are you sure you want to delete this product?\")) {\n      deleteProductMutation.mutate(productId);\n    }\n  };\n\n  // Calculate dashboard metrics\n  const totalRevenue = orders?.reduce((sum, order) => \n    sum + order.orderItems.reduce((itemSum, item) => \n      itemSum + parseFloat(item.total), 0\n    ), 0\n  ) || 0;\n\n  const totalOrders = orders?.length || 0;\n  const totalProducts = products?.length || 0;\n  const averageRating = parseFloat(seller?.rating || \"0\");\n\n  if (sellerLoading) {\n    return (\n      <div className=\"min-h-screen bg-background\">\n        <Header />\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          <div className=\"animate-pulse space-y-6\">\n            <Skeleton className=\"h-8 w-64\" />\n            <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n              {[...Array(4)].map((_, i) => (\n                <Skeleton key={i} className=\"h-32\" />\n              ))}\n            </div>\n            <Skeleton className=\"h-96\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (!seller) {\n    return (\n      <div className=\"min-h-screen bg-background\">\n        <Header />\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-16 text-center\">\n          <div className=\"text-6xl mb-4\">🏪</div>\n          <h2 className=\"text-2xl font-bold mb-4\">Seller Profile Not Found</h2>\n          <p className=\"text-muted-foreground mb-6\">\n            It looks like you haven't set up your seller profile yet.\n          </p>\n          <Button onClick={() => window.location.href = \"/\"}>\n            Go Back Home\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Header />\n\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Header */}\n        <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between mb-8\">\n          <div>\n            <h1 className=\"text-3xl font-bold text-foreground mb-2\">Seller Dashboard</h1>\n            <p className=\"text-muted-foreground\">Manage your products and orders</p>\n          </div>\n          <div className=\"flex items-center space-x-4 mt-4 sm:mt-0\">\n            {seller.isVerified ? (\n              <Badge variant=\"default\" className=\"bg-green-600\">\n                <CheckCircle className=\"h-3 w-3 mr-1\" />\n                Verified Seller\n              </Badge>\n            ) : (\n              <Badge variant=\"secondary\">\n                <Clock className=\"h-3 w-3 mr-1\" />\n                Pending Verification\n              </Badge>\n            )}\n          </div>\n        </div>\n\n        {/* Metrics Cards */}\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\n          <Card>\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center\">\n                <TrendingUp className=\"h-8 w-8 text-primary\" />\n                <div className=\"ml-4\">\n                  <p className=\"text-sm font-medium text-muted-foreground\">Total Revenue</p>\n                  <p className=\"text-2xl font-bold\">₹{totalRevenue.toLocaleString()}</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center\">\n                <ShoppingCart className=\"h-8 w-8 text-secondary\" />\n                <div className=\"ml-4\">\n                  <p className=\"text-sm font-medium text-muted-foreground\">Total Orders</p>\n                  <p className=\"text-2xl font-bold\">{totalOrders}</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center\">\n                <Package className=\"h-8 w-8 text-yellow-600\" />\n                <div className=\"ml-4\">\n                  <p className=\"text-sm font-medium text-muted-foreground\">Products</p>\n                  <p className=\"text-2xl font-bold\">{totalProducts}</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center\">\n                <Star className=\"h-8 w-8 text-yellow-500\" />\n                <div className=\"ml-4\">\n                  <p className=\"text-sm font-medium text-muted-foreground\">Rating</p>\n                  <p className=\"text-2xl font-bold\">{averageRating.toFixed(1)}</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Main Content */}\n        <Tabs defaultValue=\"products\" className=\"space-y-4\">\n          <TabsList>\n            <TabsTrigger value=\"products\">Products</TabsTrigger>\n            <TabsTrigger value=\"orders\">Orders</TabsTrigger>\n            <TabsTrigger value=\"profile\">Profile</TabsTrigger>\n          </TabsList>\n\n          {/* Products Tab */}\n          <TabsContent value=\"products\" className=\"space-y-4\">\n            <Card>\n              <CardHeader>\n                <div className=\"flex justify-between items-center\">\n                  <CardTitle>Your Products</CardTitle>\n                  <div className=\"flex gap-2\">\n                    <Dialog open={isCategoryDialogOpen} onOpenChange={setIsCategoryDialogOpen}>\n                      <DialogTrigger asChild>\n                        <Button variant=\"outline\" onClick={() => {\n                          categoryForm.reset();\n                        }}>\n                          <Plus className=\"h-4 w-4 mr-2\" />\n                          Create Category\n                        </Button>\n                      </DialogTrigger>\n                      <DialogContent>\n                        <DialogHeader>\n                          <DialogTitle>Create New Category</DialogTitle>\n                        </DialogHeader>\n                        <Form {...categoryForm}>\n                          <form onSubmit={categoryForm.handleSubmit(onCategorySubmit)} className=\"space-y-4\">\n                            <FormField\n                              control={categoryForm.control}\n                              name=\"name\"\n                              render={({ field }) => (\n                                <FormItem>\n                                  <FormLabel>Category Name</FormLabel>\n                                  <FormControl>\n                                    <Input {...field} />\n                                  </FormControl>\n                                  <FormMessage />\n                                </FormItem>\n                              )}\n                            />\n                            \n                            <FormField\n                              control={categoryForm.control}\n                              name=\"slug\"\n                              render={({ field }) => (\n                                <FormItem>\n                                  <FormLabel>Category Slug</FormLabel>\n                                  <FormControl>\n                                    <Input {...field} placeholder=\"e.g., electronics\" />\n                                  </FormControl>\n                                  <FormMessage />\n                                </FormItem>\n                              )}\n                            />\n                            \n                            <FormField\n                              control={categoryForm.control}\n                              name=\"description\"\n                              render={({ field }) => (\n                                <FormItem>\n                                  <FormLabel>Description (Optional)</FormLabel>\n                                  <FormControl>\n                                    <Textarea {...field} />\n                                  </FormControl>\n                                  <FormMessage />\n                                </FormItem>\n                              )}\n                            />\n                            \n                            <FormField\n                              control={categoryForm.control}\n                              name=\"imageUrl\"\n                              render={({ field }) => (\n                                <FormItem>\n                                  <FormLabel>Image URL (Optional)</FormLabel>\n                                  <FormControl>\n                                    <Input {...field} type=\"url\" />\n                                  </FormControl>\n                                  <FormMessage />\n                                </FormItem>\n                              )}\n                            />\n\n                            <div className=\"flex justify-end space-x-2\">\n                              <Button \n                                type=\"button\" \n                                variant=\"outline\" \n                                onClick={() => setIsCategoryDialogOpen(false)}\n                              >\n                                Cancel\n                              </Button>\n                              <Button type=\"submit\" disabled={categoryMutation.isPending}>\n                                {categoryMutation.isPending ? \"Creating...\" : \"Create Category\"}\n                              </Button>\n                            </div>\n                          </form>\n                        </Form>\n                      </DialogContent>\n                    </Dialog>\n                    \n                    <Dialog open={isProductDialogOpen} onOpenChange={setIsProductDialogOpen}>\n                      <DialogTrigger asChild>\n                        <Button onClick={() => {\n                          setEditingProduct(null);\n                          productForm.reset();\n                        }}>\n                          <Plus className=\"h-4 w-4 mr-2\" />\n                          Add Product\n                        </Button>\n                      </DialogTrigger>\n                      <DialogContent className=\"max-w-2xl\">\n                      <DialogHeader>\n                        <DialogTitle>\n                          {editingProduct ? \"Edit Product\" : \"Add New Product\"}\n                          </DialogTitle>\n                      </DialogHeader>\n                      <Form {...productForm}>\n                        <form onSubmit={productForm.handleSubmit(onProductSubmit)} className=\"space-y-4\">\n                          <FormField\n                            control={productForm.control}\n                            name=\"name\"\n                            render={({ field }) => (\n                              <FormItem>\n                                <FormLabel>Product Name</FormLabel>\n                                <FormControl>\n                                  <Input {...field} />\n                                </FormControl>\n                                <FormMessage />\n                              </FormItem>\n                            )}\n                          />\n                          \n                          <FormField\n                            control={productForm.control}\n                            name=\"description\"\n                            render={({ field }) => (\n                              <FormItem>\n                                <FormLabel>Description</FormLabel>\n                                <FormControl>\n                                  <Textarea {...field} />\n                                </FormControl>\n                                <FormMessage />\n                              </FormItem>\n                            )}\n                          />\n\n                          <div className=\"grid grid-cols-2 gap-4\">\n                            <FormField\n                              control={productForm.control}\n                              name=\"price\"\n                              render={({ field }) => (\n                                <FormItem>\n                                  <FormLabel>Price (₹)</FormLabel>\n                                  <FormControl>\n                                    <Input {...field} type=\"number\" step=\"0.01\" />\n                                  </FormControl>\n                                  <FormMessage />\n                                </FormItem>\n                              )}\n                            />\n\n                            <FormField\n                              control={productForm.control}\n                              name=\"originalPrice\"\n                              render={({ field }) => (\n                                <FormItem>\n                                    <FormLabel>Original Price (₹)</FormLabel>\n                                  <FormControl>\n                                    <Input {...field} type=\"number\" step=\"0.01\" />\n                                  </FormControl>\n                                  <FormMessage />\n                                </FormItem>\n                              )}\n                            />\n                          </div>\n\n                          <div className=\"grid grid-cols-2 gap-4\">\n                            <FormField\n                              control={productForm.control}\n                              name=\"categoryId\"\n                              render={({ field }) => (\n                                <FormItem>\n                                  <FormLabel>Category</FormLabel>\n                                  <Select onValueChange={(value) => field.onChange(parseInt(value))}>\n                                    <FormControl>\n                                      <SelectTrigger>\n                                        <SelectValue placeholder=\"Select category\" />\n                                      </SelectTrigger>\n                                    </FormControl>\n                                    <SelectContent>\n                                      {categories?.map((category) => (\n                                        <SelectItem key={category.id} value={category.id.toString()}>\n                                          {category.name}\n                                        </SelectItem>\n                                      ))}\n                                    </SelectContent>\n                                     </Select>\n                                <FormMessage/>                                <FormMessage />\n                                </FormItem>\n                              )}\n                            />\n\n                            <FormField\n                              control={productForm.control}\n                              name=\"stock\"\n                              render={({ field }) => (\n                                <FormItem>\n                                  <FormLabel>Stock Quantity</FormLabel>\n                                  <FormControl>\n                                    <Input {...field} type=\"number\" onChange={(e) => field.onChange(parseInt(e.target.value))} />\n                                  </FormControl>\n                                  <FormMessage />\n                                </FormItem>\n                              )}\n                            />\n                          </div>\n\n                          <div className=\"flex justify-end space-x-2\">\n                            <Button \n                              type=\"button\" \n                              variant=\"outline\" \n                              onClick={() => setIsProductDialogOpen(false)}\n                            >\n                              Cancel\n                            </Button>\n                            <Button type=\"submit\" disabled={productMutation.isPending}>\n                              {productMutation.isPending ? \"Saving...\" : (editingProduct ? \"Update\" : \"Create\")}\n                            </Button>\n                          </div>\n                        </form>\n                      </Form>\n                      </DialogContent>\n                    </Dialog>\n                  </div>\n                </div>\n              </CardHeader>\n              <CardContent>\n                {productsLoading ? (\n                  <div className=\"space-y-4\">\n                    {[...Array(3)].map((_, i) => (\n                      <div key={i} className=\"flex items-center space-x-4 p-4 border rounded-lg\">\n                        <Skeleton className=\"w-16 h-16\" />\n                        <div className=\"flex-1 space-y-2\">\n                          <Skeleton className=\"h-4 w-3/4\" />\n                          <Skeleton className=\"h-3 w-1/2\" />\n                        </div>\n                        <Skeleton className=\"h-8 w-20\" />\n                      </div>\n                    ))}\n                  </div>\n                ) : products?.length === 0 ? (\n                  <div className=\"text-center py-8\">\n                    <Package className=\"h-12 w-12 text-muted-foreground mx-auto mb-4\" />\n                    <h3 className=\"text-lg font-semibold mb-2\">No products yet</h3>\n                    <p className=\"text-muted-foreground\">Add your first product to start selling</p>\n                  </div>\n                ) : (\n                  <div className=\"space-y-4\">\n                    {products?.map((product) => (\n                      <div key={product.id} className=\"flex items-center space-x-4 p-4 border rounded-lg\">\n                        <div className=\"w-16 h-16 bg-muted rounded flex items-center justify-center\">\n                          {product.images && product.images.length > 0 ? (\n                            <img \n                              src={product.images[0]} \n                              alt={product.name}\n                              className=\"w-full h-full object-cover rounded\"\n                            />\n                          ) : (\n                            <Package className=\"h-6 w-6\" />\n                          )}\n                        </div>\n                        <div className=\"flex-1\">\n                          <h4 className=\"font-semibold\">{product.name}</h4>\n                          <p className=\"text-sm text-muted-foreground\">\n                            ₹{parseFloat(product.price).toLocaleString()} • Stock: {product.stock}\n                          </p>\n                          <Badge variant={product.isActive ? \"default\" : \"secondary\"}>\n                            {product.isActive ? \"Active\" : \"Inactive\"}\n                          </Badge>\n                        </div>\n                        <div className=\"flex items-center space-x-2\">\n                          <Button \n                            size=\"sm\" \n                            variant=\"outline\"\n                            onClick={() => handleEditProduct(product)}\n                          >\n                            <Edit className=\"h-4 w-4\" />\n                          </Button>\n                          <Button \n                            size=\"sm\" \n                            variant=\"outline\"\n                            onClick={() => handleDeleteProduct(product.id)}\n                            disabled={deleteProductMutation.isPending}\n                          >\n                            <Trash2 className=\"h-4 w-4\" />\n                          </Button>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          {/* Orders Tab */}\n          <TabsContent value=\"orders\" className=\"space-y-4\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Recent Orders</CardTitle>\n              </CardHeader>\n              <CardContent>\n                {ordersLoading ? (\n                  <div className=\"space-y-4\">\n                    {[...Array(5)].map((_, i) => (\n                      <Skeleton key={i} className=\"h-16\" />\n                    ))}\n                   </div>\n                ) : orders?.length === 0 ? (\n                  <div className=\"text-center py-8\">\n                    <ShoppingCart className=\"h-12 w-12 text-muted-foreground mx-auto mb-4\" />\n                    <h3 className=\"text-lg font-semibold mb-2\">No orders yet</h3>\n                    <p className=\"text-muted-foreground\">Orders will appear here when customers purchase your products</p>\n                  </div>\n                ) : (\n                  <div className=\"space-y-4\">\n                    {orders?.map((order) => (\n                      <div key={order.id} className=\"p-4 border rounded-lg\">\n                        <div className=\"flex justify-between items-start mb-2\">\n                          <div>\n                            <h4 className=\"font-semibold\">Order #{order.orderNumber}</h4>\n                            <p className=\"text-sm text-muted-foreground\">\n                              {new Date(order.createdAt).toLocaleDateString()}\n                            </p>\n                          </div>\n                          <div className=\"text-right\">\n                            <p className=\"font-semibold\">₹{parseFloat(order.total).toLocaleString()}</p>\n                            <Badge variant={\n                              order.status === 'delivered' ? 'default' :\n                              order.status === 'shipped' ? 'secondary' :\n                              order.status === 'confirmed' ? 'outline' : 'destructive'\n                            }>\n                              {order.status}\n                            </Badge>\n                          </div>\n                        </div>\n                        <div className=\"space-y-2\">\n                          {order.orderItems.map((item) => (\n                            <div key={item.id} className=\"flex justify-between text-sm\">\n                              <span>{item.product.name} × {item.quantity}</span>\n                              <span>₹{parseFloat(item.total).toLocaleString()}</span>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n      )}\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          {/* Profile Tab */}\n          <TabsContent value=\"profile\" className=\"space-y-4\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Seller Profile</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <Form {...sellerForm}>\n                  <form onSubmit={sellerForm.handleSubmit(onSellerSubmit)} className=\"space-y-4\">\n                    <FormField\n                      control={sellerForm.control}\n                      name=\"businessName\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Business Name</FormLabel>\n                          <FormControl>\n                            <Input {...field} />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n\n                    <FormField\n                      control={sellerForm.control}\n                      name=\"description\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Business Description</FormLabel>\n                          <FormControl>\n                            <Textarea {...field} />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n\n                    <FormField\n                      control={sellerForm.control}\n                      name=\"businessAddress\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Business Address</FormLabel>\n                                                    <FormControl>\n                            <Textarea {...field} />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                      <FormField\n                        control={sellerForm.control}\n                        name=\"businessPhone\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>Business Phone</FormLabel>\n                            <FormControl>\n                              <Input {...field} />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n\n                      <FormField\n                        control={sellerForm.control}\n                                                name=\"gstNumber\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>GST Number</FormLabel>\n                            <FormControl>\n                              <Input {...field} />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n                    </div>\n\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                      <FormField\n                        control={sellerForm.control}\n                        name=\"bankAccountNumber\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>Bank Account Number</FormLabel>\n                            <FormControl>\n                              <Input {...field} type=\"password\" />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n\n                      <FormField\n                        control={sellerForm.control}\n                        name=\"ifscCode\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>IFSC Code</FormLabel>\n                            <FormControl>\n                              <Input {...field} />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n                    </div>\n\n                    <Button type=\"submit\" disabled={sellerMutation.isPending}>\n                      {sellerMutation.isPending ? \"Updating...\" : \"Update Profile\"}\n                    </Button>\n                  </form>\n                </Form>\n              </CardContent>\n            </Card>\n          </TabsContent>\n        </Tabs>\n      </div>\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport { Button } from \"@/components/ui/button\";\nimport { Store, ArrowLeft, Rocket, Percent, Zap, Headphones, Globe } from \"lucide-react\";\nimport { Link } from \"wouter\";\nimport SellerRegistrationModal from \"@/components/seller-registration-modal\";\n\nexport default function SellerApplyPage() {\n  const { signOut } = useAuth();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Navigation */}\n      <nav className=\"bg-white shadow-sm border-b border-gray-200\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-center h-16\">\n            <div className=\"flex items-center space-x-3\">\n              <Link href=\"/\">\n                <Button variant=\"ghost\" size=\"sm\" className=\"text-gray-500 hover:text-gray-700\">\n                  <ArrowLeft className=\"w-4 h-4\" />\n                </Button>\n              </Link>\n              <div className=\"w-8 h-8 bg-amber-600 rounded-lg flex items-center justify-center\">\n                <Store className=\"text-white text-sm w-4 h-4\" />\n              </div>\n              <span className=\"font-semibold text-gray-900\">Seller Application</span>\n            </div>\n            <button \n              onClick={signOut}\n              className=\"text-sm text-gray-500 hover:text-gray-700 transition-colors\"\n            >\n              Sign Out\n            </button>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"max-w-2xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\n        <div className=\"text-center mb-12\">\n          <div className=\"w-20 h-20 bg-amber-100 rounded-full flex items-center justify-center mx-auto mb-6\">\n            <Rocket className=\"text-amber-600 text-2xl w-8 h-8\" />\n          </div>\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-4\">The way is here</h1>\n          <p className=\"text-lg text-gray-600 mb-8\">Start your selling journey with us. Complete your application to get approved as a seller.</p>\n          \n          <Button \n            onClick={() => setIsModalOpen(true)}\n            className=\"inline-flex items-center px-8 py-4 bg-amber-600 hover:bg-amber-700 text-white font-medium rounded-xl transition-colors duration-200 shadow-lg hover:shadow-xl transform hover:-translate-y-0.5 text-lg\"\n          >\n            <Store className=\"mr-3 w-5 h-5\" />\n            Click here\n          </Button>\n        </div>\n\n        {/* Benefits Section */}\n        <div className=\"grid md:grid-cols-2 gap-8\">\n          <div className=\"bg-white rounded-xl p-6 shadow-sm border border-gray-100\">\n            <div className=\"w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center mb-4\">\n              <Percent className=\"text-green-600 w-6 h-6\" />\n            </div>\n            <h3 className=\"font-semibold text-gray-900 mb-2\">Low Commission</h3>\n            <p className=\"text-gray-600 text-sm\">Competitive rates to maximize your profits</p>\n          </div>\n          \n          <div className=\"bg-white rounded-xl p-6 shadow-sm border border-gray-100\">\n            <div className=\"w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center mb-4\">\n              <Zap className=\"text-blue-600 w-6 h-6\" />\n            </div>\n            <h3 className=\"font-semibold text-gray-900 mb-2\">Fast Setup</h3>\n            <p className=\"text-gray-600 text-sm\">Get your store up and running quickly</p>\n          </div>\n          \n          <div className=\"bg-white rounded-xl p-6 shadow-sm border border-gray-100\">\n            <div className=\"w-12 h-12 bg-purple-100 rounded-lg flex items-center justify-center mb-4\">\n              <Headphones className=\"text-purple-600 w-6 h-6\" />\n            </div>\n            <h3 className=\"font-semibold text-gray-900 mb-2\">24/7 Support</h3>\n            <p className=\"text-gray-600 text-sm\">Dedicated support team to help you succeed</p>\n          </div>\n          \n          <div className=\"bg-white rounded-xl p-6 shadow-sm border border-gray-100\">\n            <div className=\"w-12 h-12 bg-red-100 rounded-lg flex items-center justify-center mb-4\">\n              <Globe className=\"text-red-600 w-6 h-6\" />\n            </div>\n            <h3 className=\"font-semibold text-gray-900 mb-2\">Global Reach</h3>\n            <p className=\"text-gray-600 text-sm\">Access customers from around the world</p>\n          </div>\n        </div>\n      </main>\n\n      <SellerApplicationModal \n        isOpen={isModalOpen} \n        onClose={() => setIsModalOpen(false)} \n      />\n    </div>\n  );\n}\n","import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","import { Switch, Route, Redirect } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport { AuthProvider, useAuth } from \"@/hooks/useAuth\";\nimport AuthPage from \"@/pages/auth\";\nimport HomePage from \"@/pages/home\";\nimport SellerDashboard from \"@/pages/seller-dashboard\";\nimport SellerApplyPage from \"@/pages/seller-apply\";\nimport NotFound from \"@/pages/not-found\";\n\nfunction ProtectedRoute({ children }: { children: React.ReactNode }) {\n  const { firebaseUser, loading } = useAuth();\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  if (!firebaseUser) {\n    return <Redirect to=\"/auth\" />;\n  }\n\n  return <>{children}</>;\n}\n\nfunction SellerProtectedRoute({ children }: { children: React.ReactNode }) {\n  const { user, loading } = useAuth();\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  if (!user?.isApprovedSeller) {\n    return <Redirect to=\"/seller-apply\" />;\n  }\n\n  return <>{children}</>;\n}\n\nfunction Router() {\n  const { firebaseUser, loading } = useAuth();\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <Switch>\n      <Route path=\"/auth\">\n        {firebaseUser ? <Redirect to=\"/\" /> : <AuthPage />}\n      </Route>\n\n      <Route path=\"/\">\n        <ProtectedRoute>\n          <HomePage />\n        </ProtectedRoute>\n      </Route>\n\n      <Route path=\"/seller-dashboard\">\n        <ProtectedRoute>\n          <SellerProtectedRoute>\n            <SellerDashboard />\n          </SellerProtectedRoute>\n        </ProtectedRoute>\n      </Route>\n\n      <Route path=\"/seller-apply\">\n        <ProtectedRoute>\n          <SellerApplyPage />\n        </ProtectedRoute>\n      </Route>\n\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        <AuthProvider>\n          <Toaster />\n          <Router />\n        </AuthProvider>\n      </TooltipProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","import { createRoot } from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n           \n"],"names":["firebaseConfig","app","initializeApp","auth","getAuth","provider","GoogleAuthProvider","signInWithGoogle","signInWithPopup","queryClient","QueryClient","API_BASE_URL","apiRequest","method","path","data","url","headers","token","tokenError","res","text","fetchError","TOAST_LIMIT","TOAST_REMOVE_DELAY","count","genId","toastTimeouts","addToRemoveQueue","toastId","timeout","dispatch","reducer","state","action","t","toast","listeners","memoryState","listener","props","id","update","dismiss","open","useToast","setState","React.useState","React.useEffect","index","cn","inputs","twMerge","clsx","ToastProvider","ToastPrimitives.Provider","ToastViewport","React.forwardRef","className","ref","jsx","ToastPrimitives.Viewport","toastVariants","cva","Toast","variant","ToastPrimitives.Root","ToastAction","ToastPrimitives.Action","ToastClose","ToastPrimitives.Close","X","ToastTitle","ToastPrimitives.Title","ToastDescription","ToastPrimitives.Description","Toaster","toasts","title","description","jsxs","TooltipProvider","TooltipPrimitive.Provider","TooltipContent","sideOffset","TooltipPrimitive.Content","AuthContext","createContext","AuthProvider","children","firebaseUser","setFirebaseUser","useState","user","setUser","loading","setLoading","useEffect","onAuthStateChanged","userData","error","signOut","useAuth","context","useContext","buttonVariants","Button","size","asChild","Comp","Slot","Card","CardHeader","CardTitle","CardDescription","CardContent","CardFooter","AuthPage","isLoading","setIsLoading","handleGoogleSignIn","Store","Checkbox","CheckboxPrimitive.Root","CheckboxPrimitive.Indicator","Check","Select","SelectPrimitive.Root","SelectValue","SelectPrimitive.Value","SelectTrigger","SelectPrimitive.Trigger","SelectPrimitive.Icon","ChevronDown","SelectScrollUpButton","SelectPrimitive.ScrollUpButton","ChevronUp","SelectScrollDownButton","SelectPrimitive.ScrollDownButton","SelectContent","position","SelectPrimitive.Portal","SelectPrimitive.Content","SelectPrimitive.Viewport","SelectLabel","SelectPrimitive.Label","SelectItem","SelectPrimitive.Item","SelectPrimitive.ItemIndicator","SelectPrimitive.ItemText","SelectSeparator","SelectPrimitive.Separator","Skeleton","useCartStore","create","persist","set","get","newItem","items","existingItem","item","quantity","total","Sheet","SheetPrimitive.Root","SheetPortal","SheetPrimitive.Portal","SheetOverlay","SheetPrimitive.Overlay","sheetVariants","SheetContent","side","SheetPrimitive.Content","SheetPrimitive.Close","SheetHeader","SheetTitle","SheetPrimitive.Title","SheetDescription","SheetPrimitive.Description","CartModal","isOpen","onClose","updateQuantity","removeItem","getTotalPrice","clearCart","ShoppingBag","Minus","Plus","Trash2","Link","Header","categories","isCartOpen","toggleCart","handleBecomeSeller","category","badgeVariants","Badge","ProductCard","product","isAdding","setIsAdding","addItem","discountPercentage","stockStatus","handleAddToCart","e","renderStars","rating","numRating","fullStars","hasHalfStar","_","i","Star","ShoppingCart","Input","type","Footer","handleNewsletterSubmit","Facebook","Twitter","Instagram","Linkedin","Mail","Home","location","useLocation","urlParams","categoryParam","searchParam","selectedCategory","setSelectedCategory","searchQuery","setSearchQuery","priceFilter","setPriceFilter","sortBy","setSortBy","newCategoryParam","newSearchParam","categoriesLoading","useQuery","products","productsLoading","params","response","featuredProducts","filteredProducts","price","range","handlePriceFilterChange","checked","prev","r","scrollToProducts","_a","ArrowRight","Filter","Textarea","Tabs","TabsPrimitive.Root","TabsList","TabsPrimitive.List","TabsTrigger","TabsPrimitive.Trigger","TabsContent","TabsPrimitive.Content","Dialog","DialogPrimitive.Root","DialogTrigger","DialogPrimitive.Trigger","DialogPortal","DialogPrimitive.Portal","DialogOverlay","DialogPrimitive.Overlay","DialogContent","DialogPrimitive.Content","DialogPrimitive.Close","DialogHeader","DialogTitle","DialogPrimitive.Title","DialogDescription","DialogPrimitive.Description","labelVariants","Label","LabelPrimitive.Root","Form","FormProvider","FormFieldContext","React.createContext","FormField","Controller","useFormField","fieldContext","React.useContext","itemContext","FormItemContext","getFieldState","formState","useFormContext","fieldState","FormItem","React.useId","FormLabel","formItemId","FormControl","formDescriptionId","formMessageId","FormDescription","FormMessage","body","z.object","z.string","z.enum","z.date","sellerApplications","pgTable","serial","integer","users","varchar","timestamp","boolean","stores","insertSellerSchema","z.literal","decimal","deliveryAreas","deliveryBoys","cartItems","orders","json","orderItems","orderTracking","promoCodes","serviceCategories","services","serviceProviders","serviceBookings","reviews","createInsertSchema","insertCategorySchema","insertProductSchema","productFormSchema","z.array","sellerFormSchema","categoryFormSchema","SellerDashboard","useQueryClient","isProductDialogOpen","setIsProductDialogOpen","editingProduct","setEditingProduct","isCategoryDialogOpen","setIsCategoryDialogOpen","seller","sellerLoading","ordersLoading","productForm","useForm","zodResolver","categoryForm","sellerForm","productMutation","useMutation","sellerMutation","deleteProductMutation","productId","categoryMutation","onProductSubmit","onSellerSubmit","onCategorySubmit","handleEditProduct","handleDeleteProduct","totalRevenue","sum","order","itemSum","totalOrders","totalProducts","averageRating","CheckCircle","Clock","TrendingUp","Package","field","value","Edit","SellerApplyPage","isModalOpen","setIsModalOpen","ArrowLeft","Rocket","Percent","Zap","Headphones","Globe","NotFound","AlertCircle","ProtectedRoute","Redirect","SellerProtectedRoute","Router","Switch","Route","HomePage","App","QueryClientProvider","createRoot"],"mappings":"8pDAGA,MAAMA,GAAiB,CACrB,OAAQ,OACR,WAAY,+BACZ,UAAW,eACX,cAAe,mCACf,kBAAmB,eACnB,MAAO,2CACT,EAEMC,GAAMC,GAAcF,EAAc,EAC3BG,EAAOC,GAAQH,EAAG,EAEzBI,GAAW,IAAIC,GACrBD,GAAS,SAAS,OAAO,EACzBA,GAAS,SAAS,SAAS,EAEpB,SAASE,IAAmB,CACjC,OAAOC,GAAgBL,EAAME,EAAQ,CACvC,CChBO,MAAMI,GAAc,IAAIC,GAAY,CACzC,eAAgB,CACd,QAAS,CACP,UAAW,IACX,UAAW,GAAA,CACb,CAEJ,CAAC,EAEKC,GAAe,GAGrB,eAAsBC,EACpBC,EACAC,EACAC,EACmB,CACnB,MAAMC,EAAM,GAAGL,EAAY,GAAGG,CAAI,GAE5BG,EAAuB,CAC3B,GAAIF,EAAO,CAAE,eAAgB,oBAAuB,CAAA,CAAC,EAGvD,QAAQ,IAAI,kCAAkCF,CAAM,IAAIG,CAAG,EAAE,EAC7D,QAAQ,IAAI,sDAAuDb,EAAK,WAAW,EAEnF,IAAIe,EAAuB,KAC3B,GAAI,CACEf,EAAK,aACPe,EAAQ,MAAMf,EAAK,YAAY,WAAA,EAC/B,QAAQ,IAAI,4CAA4Ce,EAAQ,MAAQ,IAAI,EAAE,GAE9E,QAAQ,KAAK,gGAAgG,CAC/G,OACOC,EAAY,CACnB,QAAQ,MAAM,gDAAiDA,CAAU,CAAA,CAGvED,GACFD,EAAQ,cAAmB,UAAUC,CAAK,GAC1C,QAAQ,IAAI,0CAA0C,GAEtD,QAAQ,IAAI,gFAAgF,EAG9F,QAAQ,IAAI,gCAAiCD,CAAO,EACpD,QAAQ,IAAI,8CAA+CF,EAAO,KAAK,UAAUA,CAAI,EAAI,SAAS,EAElG,GAAI,CACF,MAAMK,EAAM,MAAM,MAAMJ,EAAK,CAC3B,OAAAH,EACA,QAAAI,EACA,KAAMF,EAAO,KAAK,UAAUA,CAAI,EAAI,OACpC,YAAa,SAAA,CACd,EAID,GAFA,QAAQ,IAAI,sCAAsCC,CAAG,aAAaI,EAAI,MAAM,EAAE,EAE1E,CAACA,EAAI,GAAI,CACX,MAAMC,EAAQ,MAAMD,EAAI,KAAA,GAAWA,EAAI,WACvC,cAAQ,MAAM,oCAAoCA,EAAI,MAAM,KAAKC,CAAI,EAAE,EACjE,IAAI,MAAM,GAAGD,EAAI,MAAM,KAAKC,CAAI,EAAE,CAAA,CAG1C,eAAQ,IAAI,wBAAwBL,CAAG,cAAc,EAC9CI,CAAA,OACAE,EAAY,CACnB,cAAQ,MAAM,2CAA2CN,CAAG,IAAKM,CAAU,EACrEA,CAAA,CAEV,CCpEA,MAAMC,GAAc,EACdC,GAAqB,IAgB3B,IAAIC,GAAQ,EAEZ,SAASC,IAAQ,CACf,OAAAD,IAASA,GAAQ,GAAK,OAAO,iBACtBA,GAAM,SAAA,CACf,CA0BA,MAAME,OAAoB,IAEpBC,GAAoBC,GAAoB,CAC5C,GAAIF,GAAc,IAAIE,CAAO,EAC3B,OAGF,MAAMC,EAAU,WAAW,IAAM,CAC/BH,GAAc,OAAOE,CAAO,EAC5BE,GAAS,CACP,KAAM,eACN,QAAAF,CAAA,CACD,CAAA,EACAL,EAAkB,EAErBG,GAAc,IAAIE,EAASC,CAAO,CACpC,EAEaE,GAAU,CAACC,EAAcC,IAA0B,CAC9D,OAAQA,EAAO,KAAA,CACb,IAAK,YACH,MAAO,CACL,GAAGD,EACH,OAAQ,CAACC,EAAO,MAAO,GAAGD,EAAM,MAAM,EAAE,MAAM,EAAGV,EAAW,CAAA,EAGhE,IAAK,eACH,MAAO,CACL,GAAGU,EACH,OAAQA,EAAM,OAAO,IAAKE,GACxBA,EAAE,KAAOD,EAAO,MAAM,GAAK,CAAE,GAAGC,EAAG,GAAGD,EAAO,OAAUC,CAAA,CACzD,EAGJ,IAAK,gBAAiB,CACpB,KAAM,CAAE,QAAAN,GAAYK,EAIpB,OAAIL,EACFD,GAAiBC,CAAO,EAExBI,EAAM,OAAO,QAASG,GAAU,CAC9BR,GAAiBQ,EAAM,EAAE,CAAA,CAC1B,EAGI,CACL,GAAGH,EACH,OAAQA,EAAM,OAAO,IAAKE,GACxBA,EAAE,KAAON,GAAWA,IAAY,OAC5B,CACE,GAAGM,EACH,KAAM,EAAA,EAERA,CAAA,CACN,CACF,CAEF,IAAK,eACH,OAAID,EAAO,UAAY,OACd,CACL,GAAGD,EACH,OAAQ,CAAA,CAAC,EAGN,CACL,GAAGA,EACH,OAAQA,EAAM,OAAO,OAAQE,GAAMA,EAAE,KAAOD,EAAO,OAAO,CAAA,CAC5D,CAEN,EAEMG,GAA2C,CAAA,EAEjD,IAAIC,GAAqB,CAAE,OAAQ,EAAC,EAEpC,SAASP,GAASG,EAAgB,CAChCI,GAAcN,GAAQM,GAAaJ,CAAM,EACzCG,GAAU,QAASE,GAAa,CAC9BA,EAASD,EAAW,CAAA,CACrB,CACH,CAIA,SAASF,GAAM,CAAE,GAAGI,GAAgB,CAClC,MAAMC,EAAKf,GAAA,EAELgB,EAAUF,GACdT,GAAS,CACP,KAAM,eACN,MAAO,CAAE,GAAGS,EAAO,GAAAC,CAAA,CAAG,CACvB,EACGE,EAAU,IAAMZ,GAAS,CAAE,KAAM,gBAAiB,QAASU,EAAI,EAErE,OAAAV,GAAS,CACP,KAAM,YACN,MAAO,CACL,GAAGS,EACH,GAAAC,EACA,KAAM,GACN,aAAeG,GAAS,CACjBA,GAAMD,EAAA,CAAQ,CACrB,CACF,CACD,EAEM,CACL,GAAAF,EACA,QAAAE,EACA,OAAAD,CAAA,CAEJ,CAEA,SAASG,IAAW,CAClB,KAAM,CAACZ,EAAOa,CAAQ,EAAIC,EAAAA,SAAsBT,EAAW,EAE3DU,OAAAA,EAAAA,UAAgB,KACdX,GAAU,KAAKS,CAAQ,EAChB,IAAM,CACX,MAAMG,EAAQZ,GAAU,QAAQS,CAAQ,EACpCG,EAAQ,IACVZ,GAAU,OAAOY,EAAO,CAAC,CAC3B,GAED,CAAChB,CAAK,CAAC,EAEH,CACL,GAAGA,EACH,MAAAG,GACA,QAAUP,GAAqBE,GAAS,CAAE,KAAM,gBAAiB,QAAAF,EAAS,CAAA,CAE9E,CCvLO,SAASqB,KAAMC,EAAsB,CAC1C,OAAOC,GAAQC,GAAKF,CAAM,CAAC,CAC7B,CCAA,MAAMG,GAAgBC,GAEhBC,GAAgBC,EAAAA,WAGpB,CAAC,CAAE,UAAAC,EAAW,GAAGlB,CAAA,EAASmB,IAC1BC,EAAAA,IAACC,GAAA,CACC,IAAAF,EACA,UAAWT,EACT,oIACAQ,CAAA,EAED,GAAGlB,CAAA,CACN,CACD,EACDgB,GAAc,YAAcK,GAAyB,YAErD,MAAMC,GAAgBC,GACpB,4lBACA,CACE,SAAU,CACR,QAAS,CACP,QAAS,uCACT,YACE,iFAAA,CACJ,EAEF,gBAAiB,CACf,QAAS,SAAA,CACX,CAEJ,EAEMC,GAAQP,EAAAA,WAIZ,CAAC,CAAE,UAAAC,EAAW,QAAAO,EAAS,GAAGzB,CAAA,EAASmB,IAEjCC,EAAAA,IAACM,GAAA,CACC,IAAAP,EACA,UAAWT,EAAGY,GAAc,CAAE,QAAAG,CAAA,CAAS,EAAGP,CAAS,EAClD,GAAGlB,CAAA,CAAA,CAGT,EACDwB,GAAM,YAAcE,GAAqB,YAEzC,MAAMC,GAAcV,EAAAA,WAGlB,CAAC,CAAE,UAAAC,EAAW,GAAGlB,CAAA,EAASmB,IAC1BC,EAAAA,IAACQ,GAAA,CACC,IAAAT,EACA,UAAWT,EACT,qgBACAQ,CAAA,EAED,GAAGlB,CAAA,CACN,CACD,EACD2B,GAAY,YAAcC,GAAuB,YAEjD,MAAMC,GAAaZ,EAAAA,WAGjB,CAAC,CAAE,UAAAC,EAAW,GAAGlB,CAAA,EAASmB,IAC1BC,EAAAA,IAACU,GAAA,CACC,IAAAX,EACA,UAAWT,EACT,wVACAQ,CAAA,EAEF,cAAY,GACX,GAAGlB,EAEJ,SAAAoB,EAAAA,IAACW,GAAA,CAAE,UAAU,SAAA,CAAU,CAAA,CACzB,CACD,EACDF,GAAW,YAAcC,GAAsB,YAE/C,MAAME,GAAaf,EAAAA,WAGjB,CAAC,CAAE,UAAAC,EAAW,GAAGlB,CAAA,EAASmB,IAC1BC,EAAAA,IAACa,GAAA,CACC,IAAAd,EACA,UAAWT,EAAG,wBAAyBQ,CAAS,EAC/C,GAAGlB,CAAA,CACN,CACD,EACDgC,GAAW,YAAcC,GAAsB,YAE/C,MAAMC,GAAmBjB,EAAAA,WAGvB,CAAC,CAAE,UAAAC,EAAW,GAAGlB,CAAA,EAASmB,IAC1BC,EAAAA,IAACe,GAAA,CACC,IAAAhB,EACA,UAAWT,EAAG,qBAAsBQ,CAAS,EAC5C,GAAGlB,CAAA,CACN,CACD,EACDkC,GAAiB,YAAcC,GAA4B,YCpGpD,SAASC,IAAU,CACxB,KAAM,CAAE,OAAAC,CAAA,EAAWhC,GAAA,EAEnB,cACGS,GAAA,CACE,SAAA,CAAAuB,EAAO,IAAI,SAAU,CAAE,GAAApC,EAAI,MAAAqC,EAAO,YAAAC,EAAa,OAAA7C,EAAQ,GAAGM,GAAS,CAClE,OACEwC,EAAAA,KAAChB,GAAA,CAAgB,GAAGxB,EAClB,SAAA,CAAAwC,EAAAA,KAAC,MAAA,CAAI,UAAU,aACZ,SAAA,CAAAF,GAASlB,EAAAA,IAACY,IAAY,SAAAM,CAAA,CAAM,EAC5BC,GACCnB,EAAAA,IAACc,GAAA,CAAkB,SAAAK,CAAA,CAAY,CAAA,EAEnC,EACC7C,QACAmC,GAAA,CAAA,CAAW,CAAA,CAAA,EARF5B,CASZ,CAAA,CAEH,QACAe,GAAA,CAAA,CAAc,CAAA,EACjB,CAEJ,CCzBA,MAAMyB,GAAkBC,GAMlBC,GAAiB1B,EAAAA,WAGrB,CAAC,CAAE,UAAAC,EAAW,WAAA0B,EAAa,EAAG,GAAG5C,GAASmB,IAC1CC,EAAAA,IAACyB,GAAA,CACC,IAAA1B,EACA,WAAAyB,EACA,UAAWlC,EACT,ubACAQ,CAAA,EAED,GAAGlB,CAAA,CACN,CACD,EACD2C,GAAe,YAAcE,GAAyB,YCdtD,MAAMC,GAAcC,EAAAA,cAA2C,MAAS,EAEjE,SAASC,GAAa,CAAE,SAAAC,GAA2C,CACxE,KAAM,CAACC,EAAcC,CAAe,EAAIC,EAAAA,SAA8B,IAAI,EACpE,CAACC,EAAMC,CAAO,EAAIF,EAAAA,SAAsB,IAAI,EAC5C,CAACG,EAASC,CAAU,EAAIJ,EAAAA,SAAS,EAAI,EAE3CK,EAAAA,UAAU,IACYC,GAAmB/F,EAAM,MAAOuF,GAAiB,CAGnE,GAFAC,EAAgBD,CAAY,EAExBA,EACF,GAAI,CAEF,MAAMS,EAAW,CACf,YAAaT,EAAa,IAC1B,MAAOA,EAAa,MACpB,KAAMA,EAAa,aAAeA,EAAa,MAC/C,KAAK,WACL,eAAe,UAAA,EAIXG,EAAO,MADI,MAAMjF,EAAW,OAAQ,aAAcuF,CAAQ,GACpC,KAAA,EAC5BL,EAAQD,CAAI,CAAA,OACLO,EAAO,CACd,QAAQ,MAAM,gCAAiCA,CAAK,CAAA,MAGtDN,EAAQ,IAAI,EAGdE,EAAW,EAAK,CAAA,CACjB,EAGA,EAAE,EAEL,MAAMK,EAAU,SAAY,CAC1B,GAAI,CACF,MAAMlG,EAAK,QAAA,CAAQ,OACZiG,EAAO,CACd,QAAQ,MAAM,qBAAsBA,CAAK,CAAA,CAC3C,EAGF,OACExC,EAAAA,IAAC0B,GAAY,SAAZ,CACC,MAAO,CACL,aAAAI,EACA,KAAAG,EACA,QAAAE,EACA,QAAAM,CAAA,EAGD,SAAAZ,CAAA,CAAA,CAGP,CAEO,SAASa,IAAU,CACxB,MAAMC,EAAUC,EAAAA,WAAWlB,EAAW,EACtC,GAAIiB,IAAY,OACd,MAAM,IAAI,MAAM,6CAA6C,EAE/D,OAAOA,CACT,CCzEA,MAAME,GAAiB1C,GACrB,2VACA,CACE,SAAU,CACR,QAAS,CACP,QAAS,yDACT,YACE,qEACF,QACE,iFACF,UACE,+DACF,MAAO,+CACP,KAAM,iDAAA,EAER,KAAM,CACJ,QAAS,iBACT,GAAI,sBACJ,GAAI,uBACJ,KAAM,WAAA,CACR,EAEF,gBAAiB,CACf,QAAS,UACT,KAAM,SAAA,CACR,CAEJ,EAQM2C,EAASjD,EAAAA,WACb,CAAC,CAAE,UAAAC,EAAW,QAAAO,EAAS,KAAA0C,EAAM,QAAAC,EAAU,GAAO,GAAGpE,CAAA,EAASmB,IAAQ,CAChE,MAAMkD,EAAOD,EAAUE,GAAO,SAC9B,OACElD,EAAAA,IAACiD,EAAA,CACC,UAAW3D,EAAGuD,GAAe,CAAE,QAAAxC,EAAS,KAAA0C,EAAM,UAAAjD,CAAA,CAAW,CAAC,EAC1D,IAAAC,EACC,GAAGnB,CAAA,CAAA,CACN,CAGN,EACAkE,EAAO,YAAc,SCjDrB,MAAMK,EAAOtD,EAAAA,WAGX,CAAC,CAAE,UAAAC,EAAW,GAAGlB,CAAA,EAASmB,IAC1BC,EAAAA,IAAC,MAAA,CACC,IAAAD,EACA,UAAWT,EACT,2DACAQ,CAAA,EAED,GAAGlB,CAAA,CACN,CACD,EACDuE,EAAK,YAAc,OAEnB,MAAMC,GAAavD,EAAAA,WAGjB,CAAC,CAAE,UAAAC,EAAW,GAAGlB,CAAA,EAASmB,IAC1BC,EAAAA,IAAC,MAAA,CACC,IAAAD,EACA,UAAWT,EAAG,gCAAiCQ,CAAS,EACvD,GAAGlB,CAAA,CACN,CACD,EACDwE,GAAW,YAAc,aAEzB,MAAMC,GAAYxD,EAAAA,WAGhB,CAAC,CAAE,UAAAC,EAAW,GAAGlB,CAAA,EAASmB,IAC1BC,EAAAA,IAAC,MAAA,CACC,IAAAD,EACA,UAAWT,EACT,qDACAQ,CAAA,EAED,GAAGlB,CAAA,CACN,CACD,EACDyE,GAAU,YAAc,YAExB,MAAMC,GAAkBzD,EAAAA,WAGtB,CAAC,CAAE,UAAAC,EAAW,GAAGlB,CAAA,EAASmB,IAC1BC,EAAAA,IAAC,MAAA,CACC,IAAAD,EACA,UAAWT,EAAG,gCAAiCQ,CAAS,EACvD,GAAGlB,CAAA,CACN,CACD,EACD0E,GAAgB,YAAc,kBAE9B,MAAMC,EAAc1D,EAAAA,WAGlB,CAAC,CAAE,UAAAC,EAAW,GAAGlB,GAASmB,UACzB,MAAA,CAAI,IAAAA,EAAU,UAAWT,EAAG,WAAYQ,CAAS,EAAI,GAAGlB,EAAO,CACjE,EACD2E,EAAY,YAAc,cAE1B,MAAMC,GAAa3D,EAAAA,WAGjB,CAAC,CAAE,UAAAC,EAAW,GAAGlB,CAAA,EAASmB,IAC1BC,EAAAA,IAAC,MAAA,CACC,IAAAD,EACA,UAAWT,EAAG,6BAA8BQ,CAAS,EACpD,GAAGlB,CAAA,CACN,CACD,EACD4E,GAAW,YAAc,aCtEzB,SAAwBC,IAAW,CACjC,KAAM,CAACC,EAAWC,CAAY,EAAI3B,EAAAA,SAAS,EAAK,EAE1C4B,EAAqB,SAAY,CACrC,GAAI,CACFD,EAAa,EAAI,EACjB,MAAMhH,GAAA,CAAiB,OAChB6F,EAAO,CACd,QAAQ,MAAM,oBAAqBA,CAAK,EACxCmB,EAAa,EAAK,CAAA,CACpB,EAGF,OACE3D,MAAC,MAAA,CAAI,UAAU,+DACb,eAAC,MAAA,CAAI,UAAU,kBACb,SAAAA,EAAAA,IAACmD,GAAK,UAAU,iCACd,SAAA/B,OAACmC,EAAA,CAAY,UAAU,kBACrB,SAAA,CAAAnC,EAAAA,KAAC,MAAA,CAAI,UAAU,OACb,SAAA,CAAApB,EAAAA,IAAC,OAAI,UAAU,mFACb,eAAC6D,GAAA,CAAM,UAAU,8BAA8B,CAAA,CACjD,EACA7D,EAAAA,IAAC,KAAA,CAAG,UAAU,4CAA4C,SAAA,eAAY,EACtEA,EAAAA,IAAC,IAAA,CAAE,UAAU,gBAAgB,SAAA,yCAAA,CAAuC,CAAA,EACtE,EAEAoB,EAAAA,KAAC0B,EAAA,CACC,QAASc,EACT,SAAUF,EACV,UAAU,gKACV,QAAQ,UAER,SAAA,CAAAtC,EAAAA,KAAC,MAAA,CAAI,MAAM,KAAK,OAAO,KAAK,QAAQ,YAAY,UAAU,OACxD,SAAA,CAAApB,EAAAA,IAAC,OAAA,CAAK,KAAK,UAAU,EAAE,0HAAyH,EAChJA,EAAAA,IAAC,OAAA,CAAK,KAAK,UAAU,EAAE,wIAAuI,EAC9JA,EAAAA,IAAC,OAAA,CAAK,KAAK,UAAU,EAAE,gIAA+H,EACtJA,EAAAA,IAAC,OAAA,CAAK,KAAK,UAAU,EAAE,qIAAA,CAAqI,CAAA,EAC9J,EAAM,sBAAA,CAAA,CAAA,EAIP0D,GACCtC,EAAAA,KAAC,MAAA,CAAI,UAAU,gEACb,SAAA,CAAApB,EAAAA,IAAC,MAAA,CAAI,UAAU,8DAAA,CAA+D,EAC9EA,EAAAA,IAAC,OAAA,CAAK,UAAU,UAAU,SAAA,mBAAA,CAAiB,CAAA,CAAA,CAC7C,CAAA,EAEJ,CAAA,CACF,EACF,EACF,CAEJ,CCpDA,MAAM8D,GAAWjE,EAAAA,WAGf,CAAC,CAAE,UAAAC,EAAW,GAAGlB,CAAA,EAASmB,IAC1BC,EAAAA,IAAC+D,GAAA,CACC,IAAAhE,EACA,UAAWT,EACT,iTACAQ,CAAA,EAED,GAAGlB,EAEJ,SAAAoB,EAAAA,IAACgE,GAAA,CACC,UAAW1E,EAAG,+CAA+C,EAE7D,SAAAU,EAAAA,IAACiE,GAAA,CAAM,UAAU,SAAA,CAAU,CAAA,CAAA,CAC7B,CACF,CACD,EACDH,GAAS,YAAcC,GAAuB,YCjB9C,MAAMG,GAASC,GAITC,GAAcC,GAEdC,GAAgBzE,EAAAA,WAGpB,CAAC,CAAE,UAAAC,EAAW,SAAA+B,EAAU,GAAGjD,CAAA,EAASmB,IACpCqB,EAAAA,KAACmD,GAAA,CACC,IAAAxE,EACA,UAAWT,EACT,yTACAQ,CAAA,EAED,GAAGlB,EAEH,SAAA,CAAAiD,EACD7B,EAAAA,IAACwE,GAAA,CAAqB,QAAO,GAC3B,SAAAxE,EAAAA,IAACyE,GAAA,CAAY,UAAU,oBAAA,CAAqB,CAAA,CAC9C,CAAA,CAAA,CACF,CACD,EACDH,GAAc,YAAcC,GAAwB,YAEpD,MAAMG,GAAuB7E,EAAAA,WAG3B,CAAC,CAAE,UAAAC,EAAW,GAAGlB,CAAA,EAASmB,IAC1BC,EAAAA,IAAC2E,GAAA,CACC,IAAA5E,EACA,UAAWT,EACT,uDACAQ,CAAA,EAED,GAAGlB,EAEJ,SAAAoB,EAAAA,IAAC4E,GAAA,CAAU,UAAU,SAAA,CAAU,CAAA,CACjC,CACD,EACDF,GAAqB,YAAcC,GAA+B,YAElE,MAAME,GAAyBhF,EAAAA,WAG7B,CAAC,CAAE,UAAAC,EAAW,GAAGlB,CAAA,EAASmB,IAC1BC,EAAAA,IAAC8E,GAAA,CACC,IAAA/E,EACA,UAAWT,EACT,uDACAQ,CAAA,EAED,GAAGlB,EAEJ,SAAAoB,EAAAA,IAACyE,GAAA,CAAY,UAAU,SAAA,CAAU,CAAA,CACnC,CACD,EACDI,GAAuB,YACrBC,GAAiC,YAEnC,MAAMC,GAAgBlF,EAAAA,WAGpB,CAAC,CAAE,UAAAC,EAAW,SAAA+B,EAAU,SAAAmD,EAAW,SAAU,GAAGpG,GAASmB,IACzDC,EAAAA,IAACiF,GAAA,CACC,SAAA7D,EAAAA,KAAC8D,GAAA,CACC,IAAAnF,EACA,UAAWT,EACT,gjBACA0F,IAAa,UACX,kIACFlF,CAAA,EAEF,SAAAkF,EACC,GAAGpG,EAEJ,SAAA,CAAAoB,EAAAA,IAAC0E,GAAA,EAAqB,EACtB1E,EAAAA,IAACmF,GAAA,CACC,UAAW7F,EACT,MACA0F,IAAa,UACX,yFAAA,EAGH,SAAAnD,CAAA,CAAA,QAEFgD,GAAA,CAAA,CAAuB,CAAA,CAAA,CAC1B,CAAA,CACF,CACD,EACDE,GAAc,YAAcG,GAAwB,YAEpD,MAAME,GAAcvF,EAAAA,WAGlB,CAAC,CAAE,UAAAC,EAAW,GAAGlB,CAAA,EAASmB,IAC1BC,EAAAA,IAACqF,GAAA,CACC,IAAAtF,EACA,UAAWT,EAAG,yCAA0CQ,CAAS,EAChE,GAAGlB,CAAA,CACN,CACD,EACDwG,GAAY,YAAcC,GAAsB,YAEhD,MAAMC,EAAazF,EAAAA,WAGjB,CAAC,CAAE,UAAAC,EAAW,SAAA+B,EAAU,GAAGjD,CAAA,EAASmB,IACpCqB,EAAAA,KAACmE,GAAA,CACC,IAAAxF,EACA,UAAWT,EACT,4NACAQ,CAAA,EAED,GAAGlB,EAEJ,SAAA,CAAAoB,EAAAA,IAAC,OAAA,CAAK,UAAU,+DACd,SAAAA,EAAAA,IAACwF,GAAA,CACC,SAAAxF,EAAAA,IAACiE,GAAA,CAAM,UAAU,SAAA,CAAU,CAAA,CAC7B,EACF,EAEAjE,MAACyF,GAAA,CAA0B,SAAA5D,CAAA,CAAS,CAAA,CAAA,CACtC,CACD,EACDyD,EAAW,YAAcC,GAAqB,YAE9C,MAAMG,GAAkB7F,EAAAA,WAGtB,CAAC,CAAE,UAAAC,EAAW,GAAGlB,CAAA,EAASmB,IAC1BC,EAAAA,IAAC2F,GAAA,CACC,IAAA5F,EACA,UAAWT,EAAG,2BAA4BQ,CAAS,EAClD,GAAGlB,CAAA,CACN,CACD,EACD8G,GAAgB,YAAcC,GAA0B,YChJxD,SAASC,EAAS,CAChB,UAAA9F,EACA,GAAGlB,CACL,EAAyC,CACvC,OACEoB,EAAAA,IAAC,MAAA,CACC,UAAWV,EAAG,oCAAqCQ,CAAS,EAC3D,GAAGlB,CAAA,CAAA,CAGV,CCWO,MAAMiH,GAAeC,GAAA,EAC1BC,GACE,CAACC,EAAKC,KAAS,CACb,MAAO,CAAA,EACP,UAAW,KAAK,SAAS,SAAS,EAAE,EAAE,UAAU,EAAG,EAAE,EAErD,QAAUC,GAAY,CACpB,MAAMC,EAAQF,IAAM,MACdG,EAAeD,EAAM,QAAaE,EAAK,YAAcH,EAAQ,SAAS,EAG1EF,EADEI,EACE,CACF,MAAOD,EAAM,IAAIE,GACfA,EAAK,YAAcH,EAAQ,UACvB,CAAE,GAAGG,EAAM,SAAUA,EAAK,SAAWH,EAAQ,UAC7CG,CAAA,CACN,EAGE,CACF,MAAO,CAAC,GAAGF,EAAO,CAAE,GAAGD,EAAS,GAAI,KAAK,KAAI,CAAG,CAAA,CAHjD,CAKH,EAGF,WAAarH,GAAO,CAClBmH,EAAI,CAAE,MAAOC,EAAA,EAAM,MAAM,OAAOI,GAAQA,EAAK,KAAOxH,CAAE,CAAA,CAAG,CAAA,EAG3D,eAAgB,CAACA,EAAIyH,IAAa,CAChC,GAAIA,GAAY,EAAG,CACjBL,EAAA,EAAM,WAAWpH,CAAE,EACnB,MAAA,CAGFmH,EAAI,CACF,MAAOC,IAAM,MAAM,IAAII,GACrBA,EAAK,KAAOxH,EAAK,CAAE,GAAGwH,EAAM,SAAAC,GAAaD,CAAA,CAC3C,CACD,CAAA,EAGH,UAAW,IAAM,CACfL,EAAI,CAAE,MAAO,CAAA,EAAI,CAAA,EAGnB,cAAe,IACNC,EAAA,EAAM,MAAM,OAAO,CAACM,EAAOF,IAASE,EAAQF,EAAK,SAAU,CAAC,EAGrE,cAAe,IACNJ,EAAA,EAAM,MAAM,OAAO,CAACM,EAAOF,IAASE,EAAS,WAAWF,EAAK,KAAK,EAAIA,EAAK,SAAW,CAAC,CAChG,GAEF,CACE,KAAM,cAAA,CACR,CAEJ,EAS0CP,GAAiCE,IAAS,CAClF,OAAQ,GACR,KAAM,IAAMA,EAAI,CAAE,OAAQ,GAAM,EAChC,MAAO,IAAMA,EAAI,CAAE,OAAQ,GAAO,CACpC,EAAE,ECrFF,MAAMQ,GAAQC,GAMRC,GAAcC,GAEdC,GAAe/G,EAAAA,WAGnB,CAAC,CAAE,UAAAC,EAAW,GAAGlB,CAAA,EAASmB,IAC1BC,EAAAA,IAAC6G,GAAA,CACC,UAAWvH,EACT,0JACAQ,CAAA,EAED,GAAGlB,EACJ,IAAAmB,CAAA,CACF,CACD,EACD6G,GAAa,YAAcC,GAAuB,YAElD,MAAMC,GAAgB3G,GACpB,mMACA,CACE,SAAU,CACR,KAAM,CACJ,IAAK,oGACL,OACE,6GACF,KAAM,gIACN,MACE,mIAAA,CACJ,EAEF,gBAAiB,CACf,KAAM,OAAA,CACR,CAEJ,EAMM4G,GAAelH,EAAAA,WAGnB,CAAC,CAAE,KAAAmH,EAAO,QAAS,UAAAlH,EAAW,SAAA+B,EAAU,GAAGjD,CAAA,EAASmB,WACnD2G,GAAA,CACC,SAAA,CAAA1G,EAAAA,IAAC4G,GAAA,EAAa,EACdxF,EAAAA,KAAC6F,GAAA,CACC,IAAAlH,EACA,UAAWT,EAAGwH,GAAc,CAAE,KAAAE,CAAA,CAAM,EAAGlH,CAAS,EAC/C,GAAGlB,EAEH,SAAA,CAAAiD,EACDT,EAAAA,KAAC8F,GAAA,CAAqB,UAAU,2OAC9B,SAAA,CAAAlH,EAAAA,IAACW,GAAA,CAAE,UAAU,SAAA,CAAU,EACvBX,EAAAA,IAAC,OAAA,CAAK,UAAU,UAAU,SAAA,OAAA,CAAK,CAAA,CAAA,CACjC,CAAA,CAAA,CAAA,CACF,CAAA,CACF,CACD,EACD+G,GAAa,YAAcE,GAAuB,YAElD,MAAME,GAAc,CAAC,CACnB,UAAArH,EACA,GAAGlB,CACL,IACEoB,EAAAA,IAAC,MAAA,CACC,UAAWV,EACT,mDACAQ,CAAA,EAED,GAAGlB,CAAA,CACN,EAEFuI,GAAY,YAAc,cAgB1B,MAAMC,GAAavH,EAAAA,WAGjB,CAAC,CAAE,UAAAC,EAAW,GAAGlB,CAAA,EAASmB,IAC1BC,EAAAA,IAACqH,GAAA,CACC,IAAAtH,EACA,UAAWT,EAAG,wCAAyCQ,CAAS,EAC/D,GAAGlB,CAAA,CACN,CACD,EACDwI,GAAW,YAAcC,GAAqB,YAE9C,MAAMC,GAAmBzH,EAAAA,WAGvB,CAAC,CAAE,UAAAC,EAAW,GAAGlB,CAAA,EAASmB,IAC1BC,EAAAA,IAACuH,GAAA,CACC,IAAAxH,EACA,UAAWT,EAAG,gCAAiCQ,CAAS,EACvD,GAAGlB,CAAA,CACN,CACD,EACD0I,GAAiB,YAAcC,GAA2B,YCnH1D,SAAwBC,GAAU,CAAE,OAAAC,EAAQ,QAAAC,GAA2B,CACrE,KAAM,CAAE,MAAAvB,EAAO,eAAAwB,EAAgB,WAAAC,EAAY,cAAAC,EAAe,UAAAC,CAAA,EAAcjC,GAAA,EAElEU,EAAQsB,EAAA,EAEd,OAAI1B,EAAM,SAAW,EAEjBnG,EAAAA,IAACwG,IAAM,KAAMiB,EAAQ,aAAcC,EACjC,SAAAtG,EAAAA,KAAC2F,GAAA,CAAa,UAAU,kBACtB,SAAA,CAAA/G,MAACmH,GAAA,CACC,SAAAnH,EAAAA,IAACoH,GAAA,CAAW,SAAA,eAAA,CAAa,EAC3B,EAEAhG,EAAAA,KAAC,MAAA,CAAI,UAAU,2DACb,SAAA,CAAApB,EAAAA,IAAC+H,GAAA,CAAY,UAAU,yBAAA,CAA0B,EACjD/H,EAAAA,IAAC,IAAA,CAAE,UAAU,4BAA4B,SAAA,qBAAkB,QAC1D8C,EAAA,CAAO,QAAS4E,EAAS,UAAU,iCAAiC,SAAA,mBAAA,CAErE,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,EAKF1H,EAAAA,IAACwG,IAAM,KAAMiB,EAAQ,aAAcC,EACjC,SAAAtG,EAAAA,KAAC2F,GAAA,CAAa,UAAU,gCACtB,SAAA,CAAA/G,MAACmH,GAAA,CACC,SAAAnH,EAAAA,IAACoH,GAAA,CAAW,SAAA,eAAA,CAAa,EAC3B,EAGApH,EAAAA,IAAC,MAAA,CAAI,UAAU,wCACZ,SAAAmG,EAAM,IAAKE,GACVjF,EAAAA,KAAC,MAAA,CAAkB,UAAU,oDAC3B,SAAA,CAAApB,EAAAA,IAAC,MAAA,CACC,IAAKqG,EAAK,MACV,IAAKA,EAAK,KACV,UAAU,mCAAA,CAAA,EAGZjF,EAAAA,KAAC,MAAA,CAAI,UAAU,iBACb,SAAA,CAAApB,EAAAA,IAAC,KAAA,CAAG,UAAU,+BACX,SAAAqG,EAAK,KACR,EACAjF,EAAAA,KAAC,IAAA,CAAE,UAAU,wBAAwB,SAAA,CAAA,IACjCiF,EAAK,KAAA,EACT,EAEAjF,EAAAA,KAAC,MAAA,CAAI,UAAU,mCACb,SAAA,CAAApB,EAAAA,IAAC8C,EAAA,CACC,KAAK,KACL,QAAQ,UACR,QAAS,IAAM6E,EAAetB,EAAK,GAAIA,EAAK,SAAW,CAAC,EACxD,UAAU,cAEV,SAAArG,EAAAA,IAACgI,GAAA,CAAM,UAAU,SAAA,CAAU,CAAA,CAAA,EAG7BhI,EAAAA,IAAC,OAAA,CAAK,UAAU,+CACb,WAAK,SACR,EAEAA,EAAAA,IAAC8C,EAAA,CACC,KAAK,KACL,QAAQ,UACR,QAAS,IAAM6E,EAAetB,EAAK,GAAIA,EAAK,SAAW,CAAC,EACxD,UAAU,cAEV,SAAArG,EAAAA,IAACiI,GAAA,CAAK,UAAU,SAAA,CAAU,CAAA,CAAA,CAC5B,CAAA,CACF,CAAA,EACF,EAEAjI,EAAAA,IAAC8C,EAAA,CACC,KAAK,KACL,QAAQ,QACR,QAAS,IAAM8E,EAAWvB,EAAK,EAAE,EACjC,UAAU,sCAEV,SAAArG,EAAAA,IAACkI,GAAA,CAAO,UAAU,SAAA,CAAU,CAAA,CAAA,CAC9B,CAAA,EA/CQ7B,EAAK,EAgDf,CACD,EACH,EAGAjF,EAAAA,KAAC,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAApB,EAAAA,IAAC,OAAA,CAAK,UAAU,wBAAwB,SAAA,SAAM,EAC9CoB,EAAAA,KAAC,OAAA,CAAK,UAAU,iCAAiC,SAAA,CAAA,IAC7CmF,EAAM,QAAQ,CAAC,CAAA,CAAA,CACnB,CAAA,EACF,EAEAnF,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAApB,EAAAA,IAACmI,EAAA,CAAK,KAAK,YACT,SAAAnI,EAAAA,IAAC8C,EAAA,CACC,UAAU,mDACV,QAAS4E,EACV,SAAA,qBAAA,CAAA,EAGH,EAEA1H,EAAAA,IAACmI,EAAA,CAAK,KAAK,QACT,SAAAnI,EAAAA,IAAC8C,EAAA,CACC,QAAQ,UACR,UAAU,SACV,QAAS4E,EACV,SAAA,WAAA,CAAA,CAED,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,CAEJ,CCjHA,MAAMU,GAAgC,CAAC,CAAE,WAAAC,KAAiB,CACxD,KAAM,CAAE,MAAAlC,EAAO,WAAAmC,EAAY,WAAAC,CAAA,EAAe1C,GAAA,EACpC,CAAE,KAAA5D,CAAA,EAASS,GAAA,EAGX8F,EAAqB,IAAM,CAC1BvG,IACDA,EAAK,iBACP,OAAO,SAAS,KAAO,oBAEvB,OAAO,SAAS,KAAO,gBACzB,EAGF,OACEb,EAAAA,KAAC,SAAA,CAAO,UAAU,iEAEhB,SAAA,CAAApB,MAACmI,EAAA,CAAK,KAAK,IAAI,UAAU,kCAAkC,SAAA,WAE3D,QAGC,MAAA,CAAI,UAAU,YACZ,SAAAE,EAAW,IAAKI,GACfzI,EAAAA,IAACmI,EAAA,CAEC,KAAM,aAAaM,EAAS,EAAE,GAC9B,UAAU,oCAET,SAAAA,EAAS,IAAA,EAJLA,EAAS,EAAA,CAMjB,EACH,EAGArH,EAAAA,KAAC,MAAA,CAAI,UAAU,8BAEb,SAAA,CAAAA,EAAAA,KAAC,SAAA,CACC,QAASmH,EACT,UAAU,6CACX,SAAA,CAAA,KAEEpC,EAAM,OAAS,GACdnG,EAAAA,IAAC,QAAK,UAAU,+GACb,WAAM,MAAA,CACT,CAAA,CAAA,CAAA,EAKJA,EAAAA,IAAC,SAAA,CACC,QAASwI,EACT,UAAU,6DACX,SAAA,iBAAA,CAAA,CAED,EACF,EAGAxI,EAAAA,IAACwH,GAAA,CAAU,OAAQc,EAAY,QAASC,CAAA,CAAY,CAAA,EACtD,CAEJ,EC3EMG,GAAgBvI,GACpB,yKACA,CACE,SAAU,CACR,QAAS,CACP,QACE,4EACF,UACE,kFACF,YACE,wFACF,QAAS,iBAAA,CACX,EAEF,gBAAiB,CACf,QAAS,SAAA,CACX,CAEJ,EAMA,SAASwI,EAAM,CAAE,UAAA7I,EAAW,QAAAO,EAAS,GAAGzB,GAAqB,CAC3D,OACEoB,MAAC,MAAA,CAAI,UAAWV,EAAGoJ,GAAc,CAAE,QAAArI,CAAA,CAAS,EAAGP,CAAS,EAAI,GAAGlB,CAAA,CAAO,CAE1E,CCLA,SAAwBgK,GAAY,CAAE,QAAAC,GAA6B,CACjE,KAAM,CAACC,EAAUC,CAAW,EAAI/G,EAAAA,SAAS,EAAK,EACxCgH,EAAUnD,GAAaxH,GAASA,EAAM,OAAO,EAC7C,CAAE,MAAAG,CAAA,EAAUS,GAAA,EAGZgK,EAAqBJ,EAAQ,cAC/B,KAAK,OAAQ,WAAWA,EAAQ,aAAa,EAAI,WAAWA,EAAQ,KAAK,GAAK,WAAWA,EAAQ,aAAa,EAAK,GAAG,EACtH,EAUEK,EANAL,EAAQ,QAAU,EAAU,CAAE,KAAM,eAAgB,MAAO,eAAgB,QAAS,WAAA,EACpFA,EAAQ,OAAS,EAAU,CAAE,KAAM,QAAQA,EAAQ,KAAK,QAAS,MAAO,kBAAmB,QAAS,cAAA,EACpGA,EAAQ,OAAS,GAAW,CAAE,KAAM,GAAGA,EAAQ,KAAK,cAAe,MAAO,kBAAmB,QAAS,cAAA,EACnG,CAAE,KAAM,WAAY,MAAO,iBAAkB,QAAS,aAAA,EAKzDM,EAAkB,MAAOC,GAAwB,CAIrD,GAHAA,EAAE,eAAA,EACFA,EAAE,gBAAA,EAEEP,EAAQ,QAAU,EAAG,CACvBrK,EAAM,CACJ,MAAO,eACP,YAAa,yCACb,QAAS,aAAA,CACV,EACD,MAAA,CAGFuK,EAAY,EAAI,EAEhB,GAAI,CACFC,EAAQ,CACN,UAAWH,EAAQ,GACnB,KAAMA,EAAQ,KACd,MAAOA,EAAQ,MACf,MAAOA,EAAQ,MACf,SAAU,CAAA,CACX,EAEDrK,EAAM,CACJ,MAAO,gBACP,YAAa,GAAGqK,EAAQ,IAAI,+BAAA,CAC7B,CAAA,MACa,CACdrK,EAAM,CACJ,MAAO,QACP,YAAa,8BACb,QAAS,aAAA,CACV,CAAA,QACH,CACE,WAAW,IAAMuK,EAAY,EAAK,EAAG,GAAI,CAAA,CAC3C,EAGIM,EAAeC,GAA0B,CAC7C,GAAI,CAACA,EAAQ,OAAO,KAEpB,MAAMC,EAAY,WAAWD,CAAM,EAC7BE,EAAY,KAAK,MAAMD,CAAS,EAChCE,EAAcF,EAAY,IAAM,EAEtC,OACEvJ,EAAAA,IAAC,MAAA,CAAI,UAAU,oBACZ,SAAA,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC0J,EAAGC,IACrB3J,EAAAA,IAAC4J,GAAA,CAEC,UAAW,WACTD,EAAIH,EACA,+BACAG,IAAMH,GAAaC,EACnB,0CACA,eACN,EAAA,EAPKE,CAAA,CASR,EACH,CAAA,EAIJ,OACEvI,EAAAA,KAAC+B,EAAA,CAAK,UAAU,+EACd,SAAA,CAAAnD,EAAAA,IAACmI,EAAA,CAAK,KAAM,YAAYU,EAAQ,EAAE,GAChC,SAAAzH,EAAAA,KAAC,MAAA,CAAI,UAAU,wCACb,SAAA,CAAApB,EAAAA,IAAC,MAAA,CACC,IAAK6I,EAAQ,MACb,IAAKA,EAAQ,KACb,UAAU,kFAAA,CAAA,EAIXI,EAAqB,GACpB7H,OAACuH,EAAA,CAAM,UAAU,wDACd,SAAA,CAAAM,EAAmB,OAAA,EACtB,EAIFjJ,EAAAA,IAAC2I,EAAA,CACC,QAAQ,UACR,UAAW,0BAA0BO,EAAY,KAAK,IAAIA,EAAY,OAAO,oBAE5E,SAAAA,EAAY,IAAA,CAAA,CACf,CAAA,CACF,CAAA,CACF,EAEA9H,EAAAA,KAACmC,EAAA,CAAY,UAAU,MACrB,SAAA,CAAAvD,EAAAA,IAACmI,EAAA,CAAK,KAAM,YAAYU,EAAQ,EAAE,GAChC,SAAAzH,EAAAA,KAAC,MAAA,CAAI,UAAU,OACb,SAAA,CAAApB,EAAAA,IAAC,KAAA,CAAG,UAAU,0EACX,SAAA6I,EAAQ,KACX,EACA7I,EAAAA,IAAC,IAAA,CAAE,UAAU,qCAAsC,WAAQ,SAAA,CAAU,CAAA,CAAA,CACvE,CAAA,CACF,EAEAoB,EAAAA,KAAC,MAAA,CAAI,UAAU,yCACZ,SAAA,CAAAyH,EAAQ,aACNF,EAAA,CAAM,QAAQ,YAAY,UAAU,UAClC,WAAQ,KAAA,CACX,EAEF3I,EAAAA,IAAC,OAAA,CAAK,UAAU,wBAAyB,WAAQ,IAAA,CAAK,CAAA,EACxD,GAEE6I,EAAQ,QAAUA,EAAQ,cAC1BzH,OAAC,MAAA,CAAI,UAAU,mCACZ,SAAA,CAAAiI,EAAYR,EAAQ,MAAM,EAC1BA,EAAQ,aACPzH,OAAC,OAAA,CAAK,UAAU,wBAAwB,SAAA,CAAA,IACpCyH,EAAQ,YAAY,GAAA,CAAA,CACxB,CAAA,EAEJ,EAGFzH,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,gBACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAA,EAAAA,KAAC,OAAA,CAAK,UAAU,mCAAmC,SAAA,CAAA,IAC/CyH,EAAQ,KAAA,EACZ,EACCA,EAAQ,eAAiB,WAAWA,EAAQ,aAAa,EAAI,WAAWA,EAAQ,KAAK,GACpFzH,EAAAA,KAAC,OAAA,CAAK,UAAU,qCAAqC,SAAA,CAAA,IACjDyH,EAAQ,aAAA,CAAA,CACZ,CAAA,EAEJ,EACCI,EAAqB,GACpB7H,OAAC,OAAA,CAAK,UAAU,qCAAqC,SAAA,CAAA,cACvC,WAAWyH,EAAQ,aAAc,EAAI,WAAWA,EAAQ,KAAK,GAAG,QAAQ,CAAC,CAAA,CAAA,CACvF,CAAA,EAEJ,EAEA7I,EAAAA,IAAC8C,EAAA,CACC,KAAK,KACL,QAASqG,EACT,SAAUL,GAAYD,EAAQ,QAAU,EACxC,UAAW,GACTA,EAAQ,QAAU,EACd,iCACA,gCACN,cAEC,SAAAC,EACC9I,MAAC,OAAA,CAAK,UAAU,iBAAiB,SAAA,GAAA,CAAC,EAChC6I,EAAQ,QAAU,EACpB,eAEA7I,EAAAA,IAAC6J,GAAA,CAAa,UAAU,SAAA,CAAU,CAAA,CAAA,CAEtC,CAAA,CACF,CAAA,CAAA,CACF,CAAA,EACF,CAEJ,CC9MA,MAAMC,EAAQjK,EAAAA,WACZ,CAAC,CAAE,UAAAC,EAAW,KAAAiK,EAAM,GAAGnL,CAAA,EAASmB,IAE5BC,EAAAA,IAAC,QAAA,CACC,KAAA+J,EACA,UAAWzK,EACT,iYACAQ,CAAA,EAEF,IAAAC,EACC,GAAGnB,CAAA,CAAA,CAIZ,EACAkL,EAAM,YAAc,QCdpB,SAAwBE,IAAS,CAC/B,MAAMC,EAA0Bb,GAAuB,CACrDA,EAAE,eAAA,CAAe,EAInB,aACG,SAAA,CAAO,UAAU,kCAChB,SAAAhI,EAAAA,KAAC,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,uDAEb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAApB,EAAAA,IAAC,KAAA,CAAG,UAAU,yBAAyB,SAAA,WAAQ,EAC/CA,EAAAA,IAAC,IAAA,CAAE,UAAU,qBAAqB,SAAA,sFAElC,EACAoB,EAAAA,KAAC,MAAA,CAAI,UAAU,iBACb,SAAA,CAAApB,EAAAA,IAAC8C,EAAA,CAAO,QAAQ,QAAQ,KAAK,KAAK,UAAU,qCAC1C,SAAA9C,EAAAA,IAACkK,GAAA,CAAS,UAAU,SAAA,CAAU,EAChC,EACAlK,EAAAA,IAAC8C,EAAA,CAAO,QAAQ,QAAQ,KAAK,KAAK,UAAU,qCAC1C,SAAA9C,EAAAA,IAACmK,GAAA,CAAQ,UAAU,SAAA,CAAU,EAC/B,EACAnK,EAAAA,IAAC8C,EAAA,CAAO,QAAQ,QAAQ,KAAK,KAAK,UAAU,qCAC1C,SAAA9C,EAAAA,IAACoK,GAAA,CAAU,UAAU,SAAA,CAAU,EACjC,EACApK,EAAAA,IAAC8C,EAAA,CAAO,QAAQ,QAAQ,KAAK,KAAK,UAAU,qCAC1C,SAAA9C,EAAAA,IAACqK,GAAA,CAAS,UAAU,SAAA,CAAU,CAAA,CAChC,CAAA,CAAA,CACF,CAAA,EACF,SAGC,MAAA,CACC,SAAA,CAAArK,EAAAA,IAAC,KAAA,CAAG,UAAU,6BAA6B,SAAA,cAAW,EACtDoB,EAAAA,KAAC,KAAA,CAAG,UAAU,YACZ,SAAA,CAAApB,EAAAA,IAAC,KAAA,CACC,eAACmI,EAAA,CAAK,KAAK,SAAS,UAAU,mDAAmD,oBAEjF,CAAA,CACF,EACAnI,EAAAA,IAAC,MACC,SAAAA,EAAAA,IAACmI,EAAA,CAAK,KAAK,WAAW,UAAU,mDAAmD,SAAA,SAAA,CAEnF,CAAA,CACF,EACAnI,EAAAA,IAAC,MACC,SAAAA,EAAAA,IAACmI,EAAA,CAAK,KAAK,OAAO,UAAU,mDAAmD,SAAA,KAAA,CAE/E,CAAA,CACF,EACAnI,EAAAA,IAAC,MACC,SAAAA,EAAAA,IAACmI,EAAA,CAAK,KAAK,YAAY,UAAU,mDAAmD,SAAA,eAAA,CAEpF,CAAA,CACF,EACAnI,EAAAA,IAAC,MACC,SAAAA,EAAAA,IAACmI,EAAA,CAAK,KAAK,WAAW,UAAU,mDAAmD,SAAA,SAAA,CAEnF,CAAA,CACF,CAAA,CAAA,CACF,CAAA,EACF,SAGC,MAAA,CACC,SAAA,CAAAnI,EAAAA,IAAC,KAAA,CAAG,UAAU,6BAA6B,SAAA,aAAU,EACrDoB,EAAAA,KAAC,KAAA,CAAG,UAAU,YACZ,SAAA,CAAApB,EAAAA,IAAC,KAAA,CACC,eAACmI,EAAA,CAAK,KAAK,eAAe,UAAU,mDAAmD,uBAEvF,CAAA,CACF,EACAnI,EAAAA,IAAC,MACC,SAAAA,EAAAA,IAACmI,EAAA,CAAK,KAAK,eAAe,UAAU,mDAAmD,SAAA,SAAA,CAEvF,CAAA,CACF,EACAnI,EAAAA,IAAC,MACC,SAAAA,EAAAA,IAACmI,EAAA,CAAK,KAAK,eAAe,UAAU,mDAAmD,SAAA,eAAA,CAEvF,CAAA,CACF,EACAnI,EAAAA,IAAC,MACC,SAAAA,EAAAA,IAACmI,EAAA,CAAK,KAAK,eAAe,UAAU,mDAAmD,SAAA,QAAA,CAEvF,CAAA,CACF,EACAnI,EAAAA,IAAC,MACC,SAAAA,EAAAA,IAACmI,EAAA,CAAK,KAAK,eAAe,UAAU,mDAAmD,SAAA,iBAAA,CAEvF,CAAA,CACF,CAAA,CAAA,CACF,CAAA,EACF,SAGC,MAAA,CACC,SAAA,CAAAnI,EAAAA,IAAC,KAAA,CAAG,UAAU,6BAA6B,SAAA,eAAY,EACvDA,EAAAA,IAAC,IAAA,CAAE,UAAU,qBAAqB,SAAA,+CAElC,EACAoB,EAAAA,KAAC,OAAA,CAAK,SAAU6I,EAAwB,UAAU,OAChD,SAAA,CAAAjK,EAAAA,IAAC8J,EAAA,CACC,KAAK,QACL,YAAY,mBACZ,UAAU,mFAAA,CAAA,EAEZ9J,EAAAA,IAAC8C,EAAA,CACC,KAAK,SACL,UAAU,gDAEV,SAAA9C,EAAAA,IAACsK,GAAA,CAAK,UAAU,SAAA,CAAU,CAAA,CAAA,CAC5B,CAAA,CACF,CAAA,CAAA,CACF,CAAA,EACF,EAGAlJ,EAAAA,KAAC,MAAA,CAAI,UAAU,6FACb,SAAA,CAAApB,EAAAA,IAAC,IAAA,CAAE,UAAU,wBAAwB,SAAA,wCAErC,EACAoB,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAApB,MAACmI,EAAA,CAAK,KAAK,WAAW,UAAU,2DAA2D,SAAA,iBAE3F,QACCA,EAAA,CAAK,KAAK,SAAS,UAAU,2DAA2D,SAAA,mBAEzF,QACCA,EAAA,CAAK,KAAK,WAAW,UAAU,2DAA2D,SAAA,eAAA,CAE3F,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,CAEJ,CC9GA,SAAwBoC,IAAO,QAC7B,KAAM,CAACC,CAAQ,EAAIC,GAAA,EACbC,EAAY,IAAI,gBAAgBF,EAAS,MAAM,GAAG,EAAE,CAAC,GAAK,EAAE,EAC5DG,EAAgBD,EAAU,IAAI,UAAU,EACxCE,EAAcF,EAAU,IAAI,QAAQ,EAEpC,CAACG,EAAkBC,CAAmB,EAAI9I,EAAAA,SAC9C2I,EAAgB,SAASA,CAAa,EAAI,IAAA,EAEtC,CAACI,EAAaC,CAAc,EAAIhJ,EAAAA,SAAS4I,GAAe,EAAE,EAC1D,CAACK,EAAaC,CAAc,EAAIlJ,EAAAA,SAAmB,CAAA,CAAE,EACrD,CAACmJ,EAAQC,CAAS,EAAIpJ,EAAAA,SAAS,YAAY,EAGjDK,EAAAA,UAAU,IAAM,CACd,MAAMgJ,EAAmBX,EAAU,IAAI,UAAU,EAC3CY,EAAiBZ,EAAU,IAAI,QAAQ,EAE7CI,EAAoBO,EAAmB,SAASA,CAAgB,EAAI,IAAI,EACxEL,EAAeM,GAAkB,EAAE,CAAA,EAClC,CAACd,CAAQ,CAAC,EAEb,KAAM,CAAE,KAAMnC,EAAa,CAAA,EAAI,UAAWkD,CAAA,EAAsBC,EAAqB,CACnF,SAAU,CAAC,iBAAiB,CAAA,CAC7B,EAEK,CAAE,KAAMC,EAAW,CAAA,EAAI,UAAWC,CAAA,EAAoBF,EAAoB,CAC9E,SAAU,CAAC,gBAAiBX,EAAkBE,CAAW,EACzD,QAAS,SAAY,CACnB,MAAMY,EAAS,IAAI,gBACfd,GAAkBc,EAAO,OAAO,aAAcd,EAAiB,UAAU,EACzEE,GAAaY,EAAO,OAAO,SAAUZ,CAAW,EAEpD,MAAMa,EAAW,MAAM,MAAM,iBAAiBD,CAAM,EAAE,EACtD,GAAI,CAACC,EAAS,GAAI,MAAM,IAAI,MAAM,0BAA0B,EAC5D,OAAOA,EAAS,KAAA,CAAK,CACvB,CACD,EAEK,CAAE,KAAMC,EAAmB,CAAA,CAAC,EAAML,EAAoB,CAC1D,SAAU,CAAC,gBAAiB,UAAU,EACtC,QAAS,SAAY,CACnB,MAAMI,EAAW,MAAM,MAAM,6BAA6B,EAC1D,GAAI,CAACA,EAAS,GAAI,MAAM,IAAI,MAAM,mCAAmC,EACrE,OAAOA,EAAS,KAAA,CAAK,CACvB,CACD,EAEKE,EAAmBL,EAAS,OAAO5C,GAAW,CAClD,GAAIoC,EAAY,SAAW,EAAG,MAAO,GAErC,MAAMc,EAAQ,WAAWlD,EAAQ,KAAK,EACtC,OAAOoC,EAAY,KAAKe,GAAS,CAC/B,OAAQA,EAAA,CACN,IAAK,WAAY,OAAOD,EAAQ,GAChC,IAAK,QAAS,OAAOA,GAAS,IAAMA,EAAQ,GAC5C,IAAK,SAAU,OAAOA,GAAS,IAAMA,EAAQ,IAC7C,IAAK,WAAY,OAAOA,GAAS,IACjC,QAAS,MAAO,EAAA,CAClB,CACD,CAAA,CACF,EAEKE,EAA0B,CAACD,EAAeE,IAAqB,CAEjEhB,EADEgB,EACaC,GAAQ,CAAC,GAAGA,EAAMH,CAAK,KAEfG,EAAK,OAAOC,IAAKA,KAAMJ,CAAK,CAFZ,CAGzC,EAGIK,EAAmB,IAAM,QAC7BC,EAAA,SAAS,eAAe,kBAAkB,IAA1C,MAAAA,EAA6C,eAAe,CAAE,SAAU,UAAU,EAGpF,OAAIf,QAEC,MAAA,CAAI,UAAU,6BACb,SAAAnK,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAApB,EAAAA,IAAC4F,EAAA,CAAS,UAAU,kBAAA,CAAmB,EACvC5F,MAAC,OAAI,UAAU,wCACZ,UAAC,GAAG,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC0J,EAAGC,IACrB3J,EAAAA,IAAC4F,EAAA,CAAiB,UAAU,aAAA,EAAb+D,CAA2B,CAC3C,CAAA,CACH,CAAA,CAAA,CACF,CAAA,CACF,EAKFvI,EAAAA,KAAC,MAAA,CAAI,UAAU,6BACb,SAAA,CAAApB,MAACoI,IAAO,WAAAC,EAAwB,EAG/B,CAACwC,GAAoB,CAACE,SACpB,UAAA,CAAQ,UAAU,+DACjB,SAAA/K,EAAAA,IAAC,OAAI,UAAU,yCACb,SAAAoB,EAAAA,KAAC,MAAA,CAAI,UAAU,0CACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAApB,EAAAA,IAAC,KAAA,CAAG,UAAU,sCAAsC,SAAA,2BAEpD,EACAA,EAAAA,IAAC,IAAA,CAAE,UAAU,+BAA+B,SAAA,0FAE5C,EACAoB,EAAAA,KAAC0B,EAAA,CACC,QAASuJ,EACT,KAAK,KACL,UAAU,wDACX,SAAA,CAAA,kBACgBrM,EAAAA,IAACuM,GAAA,CAAW,UAAU,cAAA,CAAe,CAAA,CAAA,CAAA,CACtD,EACF,EACAvM,EAAAA,IAAC,MAAA,CAAI,UAAU,WACb,SAAAA,EAAAA,IAAC,MAAA,CACC,IAAI,4DACJ,IAAI,6BACJ,UAAU,qCAAA,CAAA,CACZ,CACF,CAAA,CAAA,CACF,EACF,EACF,EAID,CAAC6K,GAAoB,CAACE,GACrB/K,EAAAA,IAAC,UAAA,CAAQ,UAAU,iBACjB,SAAAoB,EAAAA,KAAC,MAAA,CAAI,UAAU,yCACb,SAAA,CAAApB,EAAAA,IAAC,KAAA,CAAG,UAAU,wDAAwD,SAAA,mBAEtE,EACAA,EAAAA,IAAC,MAAA,CAAI,UAAU,wCACZ,SAAAqI,EAAW,MAAM,EAAG,CAAC,EAAE,IAAKI,GAC3BrH,EAAAA,KAAC,MAAA,CAEC,UAAU,mCACV,QAAS,IAAM0J,EAAoBrC,EAAS,EAAE,EAE9C,SAAA,CAAAzI,EAAAA,IAAC,MAAA,CACC,IAAKyI,EAAS,OAAS,+DACvB,IAAKA,EAAS,KACd,UAAU,6EAAA,CAAA,EAEZzI,EAAAA,IAAC,KAAA,CAAG,UAAU,6BACX,WAAS,IAAA,CACZ,CAAA,CAAA,EAXKyI,EAAS,EAAA,CAajB,CAAA,CACH,CAAA,CAAA,CACF,CAAA,CACF,EAIFzI,MAAC,OAAA,CAAK,GAAG,mBAAmB,UAAU,QACpC,SAAAA,MAAC,MAAA,CAAI,UAAU,yCACb,SAAAoB,EAAAA,KAAC,MAAA,CAAI,UAAU,kCAEb,SAAA,CAAApB,EAAAA,IAAC,QAAA,CAAM,UAAU,wBACf,SAAAA,EAAAA,IAACmD,EAAA,CAAK,UAAU,gBACd,SAAA/B,OAACmC,EAAA,CAAY,UAAU,MACrB,SAAA,CAAAnC,EAAAA,KAAC,KAAA,CAAG,UAAU,+CACZ,SAAA,CAAApB,EAAAA,IAACwM,GAAA,CAAO,UAAU,cAAA,CAAe,EAAE,SAAA,EAErC,EAGApL,EAAAA,KAAC,MAAA,CAAI,UAAU,OACb,SAAA,CAAApB,EAAAA,IAAC,KAAA,CAAG,UAAU,mBAAmB,SAAA,cAAW,EAC5CA,EAAAA,IAAC,MAAA,CAAI,UAAU,YACZ,SAAA,CACC,CAAE,GAAI,WAAY,MAAO,WAAA,EACzB,CAAE,GAAI,QAAS,MAAO,WAAA,EACtB,CAAE,GAAI,SAAU,MAAO,YAAA,EACvB,CAAE,GAAI,WAAY,MAAO,WAAA,CAAY,EACrC,IAAKgM,GACL5K,EAAAA,KAAC,MAAA,CAAmB,UAAU,8BAC5B,SAAA,CAAApB,EAAAA,IAAC8D,GAAA,CACC,GAAIkI,EAAM,GACV,QAASf,EAAY,SAASe,EAAM,EAAE,EACtC,gBAAkBE,GAChBD,EAAwBD,EAAM,GAAIE,CAAkB,CAAA,CAAA,EAGxDlM,EAAAA,IAAC,SAAM,QAASgM,EAAM,GAAI,UAAU,yBACjC,WAAM,KAAA,CACT,CAAA,GAVQA,EAAM,EAWhB,CACD,CAAA,CACH,CAAA,EACF,EAGA5K,EAAAA,KAAC,MAAA,CAAI,UAAU,OACb,SAAA,CAAApB,EAAAA,IAAC,KAAA,CAAG,UAAU,mBAAmB,SAAA,aAAU,EAC3CoB,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAApB,EAAAA,IAAC8D,GAAA,CACC,GAAG,iBACH,QAAS,CAAC+G,EACV,gBAAiB,IAAMC,EAAoB,IAAI,CAAA,CAAA,QAEhD,QAAA,CAAM,QAAQ,iBAAiB,UAAU,yBAAyB,SAAA,gBAAA,CAEnE,CAAA,EACF,EACCzC,EAAW,IAAKI,GACfrH,EAAAA,KAAC,MAAA,CAAsB,UAAU,8BAC/B,SAAA,CAAApB,EAAAA,IAAC8D,GAAA,CACC,GAAI,YAAY2E,EAAS,EAAE,GAC3B,QAASoC,IAAqBpC,EAAS,GACvC,gBAAiB,IACfqC,EAAoBD,IAAqBpC,EAAS,GAAK,KAAOA,EAAS,EAAE,CAAA,CAAA,EAG7EzI,EAAAA,IAAC,QAAA,CAAM,QAAS,YAAYyI,EAAS,EAAE,GAAI,UAAU,yBAClD,SAAAA,EAAS,IAAA,CACZ,CAAA,CAAA,EAVQA,EAAS,EAWnB,CACD,CAAA,CAAA,CACH,CAAA,CAAA,CACF,CAAA,CAAA,CACF,EACF,EACF,EAGArH,EAAAA,KAAC,MAAA,CAAI,UAAU,SAEb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,yCACb,SAAA,CAAApB,MAAC,MAAG,UAAU,sCACX,SAAA+K,EAAc,uBAAuBA,CAAW,IAChDF,GAAmByB,GAAAjE,EAAW,QAAU,EAAE,KAAOwC,CAAgB,IAA9C,YAAAyB,GAAiD,KACpE,oBACH,EACAtM,EAAAA,IAAC,OAAI,UAAU,8BACb,gBAACkE,GAAA,CAAO,MAAOiH,EAAQ,cAAeC,EACpC,SAAA,CAAApL,EAAAA,IAACsE,IAAc,UAAU,OACvB,eAACF,GAAA,CAAY,YAAY,UAAU,CAAA,CACrC,SACCW,GAAA,CACC,SAAA,CAAA/E,EAAAA,IAACsF,EAAA,CAAW,MAAM,aAAa,SAAA,aAAU,EACzCtF,EAAAA,IAACsF,EAAA,CAAW,MAAM,YAAY,SAAA,qBAAkB,EAChDtF,EAAAA,IAACsF,EAAA,CAAW,MAAM,aAAa,SAAA,qBAAkB,EACjDtF,EAAAA,IAACsF,EAAA,CAAW,MAAM,SAAS,SAAA,kBAAe,EAC1CtF,EAAAA,IAACsF,EAAA,CAAW,MAAM,SAAS,SAAA,cAAA,CAAY,CAAA,CAAA,CACzC,CAAA,CAAA,CACF,CAAA,CACF,CAAA,EACF,EAGCoG,EACC1L,EAAAA,IAAC,MAAA,CAAI,UAAU,sEACZ,SAAA,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC0J,EAAGC,IACrB3J,EAAAA,IAAC4F,EAAA,CAAiB,UAAU,aAAA,EAAb+D,CAA2B,CAC3C,CAAA,CACH,EACEmC,EAAiB,SAAW,EAC9B1K,EAAAA,KAAC,MAAA,CAAI,UAAU,oBACb,SAAA,CAAApB,EAAAA,IAAC,IAAA,CAAE,UAAU,wBAAwB,SAAA,4CAAyC,EAC9EA,EAAAA,IAAC8C,EAAA,CACC,QAAS,IAAM,CACbgI,EAAoB,IAAI,EACxBE,EAAe,EAAE,EACjBE,EAAe,CAAA,CAAE,CAAA,EAEnB,UAAU,OACV,QAAQ,UACT,SAAA,eAAA,CAAA,CAED,CAAA,CACF,EAEAlL,EAAAA,IAAC,MAAA,CAAI,UAAU,sEACZ,SAAA8L,EAAiB,IAAKjD,SACpBD,GAAA,CAA6B,QAAAC,CAAA,EAAZA,EAAQ,EAAsB,CACjD,CAAA,CACH,CAAA,CAAA,CAEJ,CAAA,CAAA,CACF,EACF,EACF,QAECmB,GAAA,CAAA,CAAO,CAAA,EACV,CAEgB,CC/TpB,MAAMyC,GAAW5M,EAAAA,WAGf,CAAC,CAAE,UAAAC,EAAW,GAAGlB,CAAA,EAASmB,IAExBC,EAAAA,IAAC,WAAA,CACC,UAAWV,EACT,oTACAQ,CAAA,EAEF,IAAAC,EACC,GAAGnB,CAAA,CAAA,CAGT,EACD6N,GAAS,YAAc,WCdvB,MAAMC,GAAOC,GAEPC,GAAW/M,EAAAA,WAGf,CAAC,CAAE,UAAAC,EAAW,GAAGlB,CAAA,EAASmB,IAC1BC,EAAAA,IAAC6M,GAAA,CACC,IAAA9M,EACA,UAAWT,EACT,6FACAQ,CAAA,EAED,GAAGlB,CAAA,CACN,CACD,EACDgO,GAAS,YAAcC,GAAmB,YAE1C,MAAMC,GAAcjN,EAAAA,WAGlB,CAAC,CAAE,UAAAC,EAAW,GAAGlB,CAAA,EAASmB,IAC1BC,EAAAA,IAAC+M,GAAA,CACC,IAAAhN,EACA,UAAWT,EACT,sYACAQ,CAAA,EAED,GAAGlB,CAAA,CACN,CACD,EACDkO,GAAY,YAAcC,GAAsB,YAEhD,MAAMC,GAAcnN,EAAAA,WAGlB,CAAC,CAAE,UAAAC,EAAW,GAAGlB,CAAA,EAASmB,IAC1BC,EAAAA,IAACiN,GAAA,CACC,IAAAlN,EACA,UAAWT,EACT,kIACAQ,CAAA,EAED,GAAGlB,CAAA,CACN,CACD,EACDoO,GAAY,YAAcC,GAAsB,YC1ChD,MAAMC,GAASC,GAETC,GAAgBC,GAEhBC,GAAeC,GAIfC,GAAgB3N,EAAAA,WAGpB,CAAC,CAAE,UAAAC,EAAW,GAAGlB,CAAA,EAASmB,IAC1BC,EAAAA,IAACyN,GAAA,CACC,IAAA1N,EACA,UAAWT,EACT,yJACAQ,CAAA,EAED,GAAGlB,CAAA,CACN,CACD,EACD4O,GAAc,YAAcC,GAAwB,YAEpD,MAAMC,GAAgB7N,EAAAA,WAGpB,CAAC,CAAE,UAAAC,EAAW,SAAA+B,EAAU,GAAGjD,CAAA,EAASmB,IACpCqB,EAAAA,KAACkM,GAAA,CACC,SAAA,CAAAtN,EAAAA,IAACwN,GAAA,EAAc,EACfpM,EAAAA,KAACuM,GAAA,CACC,IAAA5N,EACA,UAAWT,EACT,8fACAQ,CAAA,EAED,GAAGlB,EAEH,SAAA,CAAAiD,EACDT,EAAAA,KAACwM,GAAA,CAAsB,UAAU,gRAC/B,SAAA,CAAA5N,EAAAA,IAACW,GAAA,CAAE,UAAU,SAAA,CAAU,EACvBX,EAAAA,IAAC,OAAA,CAAK,UAAU,UAAU,SAAA,OAAA,CAAK,CAAA,CAAA,CACjC,CAAA,CAAA,CAAA,CACF,CAAA,CACF,CACD,EACD0N,GAAc,YAAcC,GAAwB,YAEpD,MAAME,GAAe,CAAC,CACpB,UAAA/N,EACA,GAAGlB,CACL,IACEoB,EAAAA,IAAC,MAAA,CACC,UAAWV,EACT,qDACAQ,CAAA,EAED,GAAGlB,CAAA,CACN,EAEFiP,GAAa,YAAc,eAgB3B,MAAMC,GAAcjO,EAAAA,WAGlB,CAAC,CAAE,UAAAC,EAAW,GAAGlB,CAAA,EAASmB,IAC1BC,EAAAA,IAAC+N,GAAA,CACC,IAAAhO,EACA,UAAWT,EACT,oDACAQ,CAAA,EAED,GAAGlB,CAAA,CACN,CACD,EACDkP,GAAY,YAAcC,GAAsB,YAEhD,MAAMC,GAAoBnO,EAAAA,WAGxB,CAAC,CAAE,UAAAC,EAAW,GAAGlB,CAAA,EAASmB,IAC1BC,EAAAA,IAACiO,GAAA,CACC,IAAAlO,EACA,UAAWT,EAAG,gCAAiCQ,CAAS,EACvD,GAAGlB,CAAA,CACN,CACD,EACDoP,GAAkB,YAAcC,GAA4B,YCtG5D,MAAMC,GAAgB/N,GACpB,4FACF,EAEMgO,GAAQtO,EAAAA,WAIZ,CAAC,CAAE,UAAAC,EAAW,GAAGlB,CAAA,EAASmB,IAC1BC,EAAAA,IAACoO,GAAA,CACC,IAAArO,EACA,UAAWT,EAAG4O,GAAA,EAAiBpO,CAAS,EACvC,GAAGlB,CAAA,CACN,CACD,EACDuP,GAAM,YAAcC,GAAoB,YCJxC,MAAMC,GAAOC,GASPC,GAAmBC,EAAAA,cACvB,CAAA,CACF,EAEMC,EAAY,CAGhB,CACA,GAAG7P,CACL,IAEIoB,EAAAA,IAACuO,GAAiB,SAAjB,CAA0B,MAAO,CAAE,KAAM3P,EAAM,IAAA,EAC9C,SAAAoB,EAAAA,IAAC0O,GAAA,CAAY,GAAG9P,EAAO,EACzB,EAIE+P,GAAe,IAAM,CACzB,MAAMC,EAAeC,EAAAA,WAAiBN,EAAgB,EAChDO,EAAcD,EAAAA,WAAiBE,EAAe,EAC9C,CAAE,cAAAC,EAAe,UAAAC,CAAA,EAAcC,GAAA,EAE/BC,EAAaH,EAAcJ,EAAa,KAAMK,CAAS,EAE7D,GAAI,CAACL,EACH,MAAM,IAAI,MAAM,gDAAgD,EAGlE,KAAM,CAAE,GAAA/P,GAAOiQ,EAEf,MAAO,CACL,GAAAjQ,EACA,KAAM+P,EAAa,KACnB,WAAY,GAAG/P,CAAE,aACjB,kBAAmB,GAAGA,CAAE,yBACxB,cAAe,GAAGA,CAAE,qBACpB,GAAGsQ,CAAA,CAEP,EAMMJ,GAAkBP,EAAAA,cACtB,CAAA,CACF,EAEMY,EAAWvP,EAAAA,WAGf,CAAC,CAAE,UAAAC,EAAW,GAAGlB,CAAA,EAASmB,IAAQ,CAClC,MAAMlB,EAAKwQ,EAAAA,MAAM,EAEjB,aACGN,GAAgB,SAAhB,CAAyB,MAAO,CAAE,GAAAlQ,GACjC,SAAAmB,EAAAA,IAAC,MAAA,CAAI,IAAAD,EAAU,UAAWT,EAAG,YAAaQ,CAAS,EAAI,GAAGlB,EAAO,EACnE,CAEJ,CAAC,EACDwQ,EAAS,YAAc,WAEvB,MAAME,EAAYzP,EAAAA,WAGhB,CAAC,CAAE,UAAAC,EAAW,GAAGlB,CAAA,EAASmB,IAAQ,CAClC,KAAM,CAAE,MAAAyC,EAAO,WAAA+M,CAAA,EAAeZ,GAAA,EAE9B,OACE3O,EAAAA,IAACmO,GAAA,CACC,IAAApO,EACA,UAAWT,EAAGkD,GAAS,mBAAoB1C,CAAS,EACpD,QAASyP,EACR,GAAG3Q,CAAA,CAAA,CAGV,CAAC,EACD0Q,EAAU,YAAc,YAExB,MAAME,EAAc3P,EAAAA,WAGlB,CAAC,CAAE,GAAGjB,CAAA,EAASmB,IAAQ,CACvB,KAAM,CAAE,MAAAyC,EAAO,WAAA+M,EAAY,kBAAAE,EAAmB,cAAAC,CAAA,EAAkBf,GAAA,EAEhE,OACE3O,EAAAA,IAACkD,GAAA,CACC,IAAAnD,EACA,GAAIwP,EACJ,mBACG/M,EAEG,GAAGiN,CAAiB,IAAIC,CAAa,GADrC,GAAGD,CAAiB,GAG1B,eAAc,CAAC,CAACjN,EACf,GAAG5D,CAAA,CAAA,CAGV,CAAC,EACD4Q,EAAY,YAAc,cAE1B,MAAMG,GAAkB9P,EAAAA,WAGtB,CAAC,CAAE,UAAAC,EAAW,GAAGlB,CAAA,EAASmB,IAAQ,CAClC,KAAM,CAAE,kBAAA0P,CAAA,EAAsBd,GAAA,EAE9B,OACE3O,EAAAA,IAAC,IAAA,CACC,IAAAD,EACA,GAAI0P,EACJ,UAAWnQ,EAAG,gCAAiCQ,CAAS,EACvD,GAAGlB,CAAA,CAAA,CAGV,CAAC,EACD+Q,GAAgB,YAAc,kBAE9B,MAAMC,EAAc/P,EAAAA,WAGlB,CAAC,CAAE,UAAAC,EAAW,SAAA+B,EAAU,GAAGjD,CAAA,EAASmB,IAAQ,CAC5C,KAAM,CAAE,MAAAyC,EAAO,cAAAkN,CAAA,EAAkBf,GAAA,EAC3BkB,EAAOrN,EAAQ,QAAOA,GAAA,YAAAA,EAAO,UAAW,EAAE,EAAIX,EAEpD,OAAKgO,EAKH7P,EAAAA,IAAC,IAAA,CACC,IAAAD,EACA,GAAI2P,EACJ,UAAWpQ,EAAG,uCAAwCQ,CAAS,EAC9D,GAAGlB,EAEH,SAAAiR,CAAA,CAAA,EAVI,IAaX,CAAC,EACDD,EAAY,YAAc,cC7JHE,GAAS,CAC9B,GAAIC,EAAE,EAAS,KAAA,EACf,OAAQA,EAAE,EACV,aAAcA,EAAE,EAChB,MAAOA,EAAE,EAAS,MAAA,EAClB,MAAOA,EAAE,EAAS,SAAA,EAClB,QAASA,EAAE,EAAS,SAAA,EACpB,eAAgBC,GAAO,CAAC,UAAW,WAAY,UAAU,CAAC,EAC1D,WAAYC,GAAE,EAAO,SAAA,EACrB,gBAAiBF,EAAE,EAAS,SAAA,EAC5B,UAAWE,GAAE,EACb,UAAWA,GAAE,CACf,CAAC,EAEM,MAAMC,GAAqBC,EAAQ,sBAAuB,CAC/D,GAAeC,EAAO,IAAI,EAAE,WAAA,EAC5B,OAAeC,EAAQ,SAAS,EAAE,WAAW,IAAMC,EAAM,EAAE,EAAE,QAAA,EAC7D,aAAe7S,EAAK,eAAe,EAAE,QAAA,EACrC,UAAeA,EAAK,YAAY,EAChC,MAAeA,EAAK,OAAO,EAC3B,QAAeA,EAAK,SAAS,EAC7B,KAAeA,EAAK,MAAM,EAC1B,QAAeA,EAAK,SAAS,EAC7B,eAAgB8S,GAAQ,kBAAmB,CACzC,KAAM,CAAC,UAAW,WAAY,UAAU,CAAA,CACzC,EAAE,QAAQ,SAAS,EAEpB,UAAeC,EAAU,YAAY,EAAE,WAAA,EACvC,UAAeA,EAAU,YAAY,EAAE,WAAA,CACzC,CAAC,EAIYF,EAAQH,EAAQ,QAAS,CACpC,GAAIC,EAAO,IAAI,EAAE,WAAA,EACjB,YAAa3S,EAAK,cAAc,EAAE,OAAA,EAClC,MAAOA,EAAK,OAAO,EAAE,QAAA,EAAU,OAAA,EAE/B,KAAMA,EAAK,MAAM,EACjB,UAAWA,EAAK,YAAY,EAC5B,SAAUA,EAAK,WAAW,EAC1B,MAAOA,EAAK,OAAO,EACnB,KAAM8S,GAAQ,OAAQ,CAAE,KAAM,CAAC,WAAY,SAAU,QAAS,cAAc,EAAG,EAAE,QAAA,EAAU,QAAQ,UAAU,EAC7G,eAAgBA,GAAQ,kBAAmB,CAAE,KAAM,CAAC,UAAW,WAAY,UAAU,EAAG,EAAE,QAAA,EAAU,QAAQ,UAAU,EACtH,QAAS9S,EAAK,SAAS,EACvB,KAAMA,EAAK,MAAM,EACjB,QAASA,EAAK,SAAS,EACvB,SAAUgT,EAAQ,WAAW,EAAE,QAAQ,EAAI,EAC3C,UAAWD,EAAU,YAAY,EAAE,WAAA,EACnC,UAAWA,EAAU,YAAY,EAAE,WAAA,CACrC,CAAC,EAGYE,GAASP,EAAQ,SAAU,CACtC,GAAIC,EAAO,IAAI,EAAE,WAAA,EACjB,SAAUC,EAAQ,WAAW,EAAE,WAAW,IAAMC,EAAM,EAAE,EACxD,UAAW7S,EAAK,YAAY,EAAE,QAAA,EAC9B,UAAWA,EAAK,YAAY,EAAE,QAAA,EAC9B,QAASA,EAAK,SAAS,EAAE,QAAA,EACzB,KAAMA,EAAK,MAAM,EAAE,QAAA,EACnB,QAASA,EAAK,SAAS,EAAE,QAAA,EACzB,MAAOA,EAAK,OAAO,EAAE,QAAA,EACrB,SAAUgT,EAAQ,WAAW,EAAE,QAAQ,EAAI,EAC3C,cAAehT,EAAK,gBAAgB,EACpC,UAAWA,EAAK,YAAY,EAC5B,UAAW+S,EAAU,YAAY,EAAE,WAAA,CACrC,CAAC,EAMaG,GAAqBb,GAAS,CACzC,MAAOC,EAAE,EAAS,MAAA,EAClB,SAAUA,EAAE,EAAS,IAAI,CAAC,EAC1B,UAAWA,EAAE,EAAS,IAAI,CAAC,EAC3B,SAAUA,EAAE,EAAS,IAAI,CAAC,EAC1B,MAAOA,EAAE,EAAS,IAAI,EAAE,EACxB,KAAMa,GAAU,QAAQ,EAAE,QAAQ,QAAQ,CAC5C,CAAC,EAIWvI,GAAa8H,EAAQ,aAAc,CAC9C,GAAIC,EAAO,IAAI,EAAE,WAAA,EACjB,KAAM3S,EAAK,MAAM,EAAE,QAAA,EACnB,UAAWA,EAAK,YAAY,EAC5B,KAAMA,EAAK,MAAM,EAAE,QAAA,EAAU,OAAA,EAC7B,YAAaA,EAAK,aAAa,EAC/B,MAAOA,EAAK,OAAO,EACnB,SAAUgT,EAAQ,WAAW,EAAE,QAAQ,EAAI,EAC3C,UAAWJ,EAAQ,YAAY,EAAE,QAAQ,CAAC,CAC5C,CAAC,EAGY5E,GAAW0E,EAAQ,WAAY,CAC1C,GAAIC,EAAO,IAAI,EAAE,WAAA,EACjB,SAAUC,EAAQ,WAAW,EAAE,WAAW,IAAMC,EAAM,EAAE,EACxD,QAASD,EAAQ,UAAU,EAAE,WAAW,IAAMK,GAAO,EAAE,EACvD,WAAYL,EAAQ,aAAa,EAAE,WAAW,IAAMhI,GAAW,EAAE,EACjE,KAAM5K,EAAK,MAAM,EAAE,QAAA,EACnB,UAAWA,EAAK,YAAY,EAC5B,YAAaA,EAAK,aAAa,EAC/B,iBAAkBA,EAAK,mBAAmB,EAC1C,MAAOoT,EAAQ,QAAS,CAAE,UAAW,GAAI,MAAO,EAAG,EAAE,QAAA,EACrD,cAAeA,EAAQ,iBAAkB,CAAE,UAAW,GAAI,MAAO,EAAG,EACpE,MAAOpT,EAAK,OAAO,EAAE,QAAA,EACrB,OAAQA,EAAK,QAAQ,EAAE,MAAA,EACvB,KAAMA,EAAK,MAAM,EAAE,QAAA,EAAU,QAAQ,OAAO,EAC5C,MAAOA,EAAK,OAAO,EACnB,MAAO4S,EAAQ,OAAO,EAAE,QAAA,EAAU,QAAQ,CAAC,EAC3C,YAAaA,EAAQ,eAAe,EAAE,QAAQ,CAAC,EAC/C,YAAaA,EAAQ,eAAe,EAAE,QAAQ,GAAG,EACjD,SAAUI,EAAQ,WAAW,EAAE,QAAQ,EAAI,EAC3C,UAAWD,EAAU,YAAY,EAAE,WAAA,EACnC,UAAWA,EAAU,YAAY,EAAE,WAAA,CACrC,CAAC,EAGYM,GAAgBX,EAAQ,iBAAkB,CACrD,GAAIC,EAAO,IAAI,EAAE,WAAA,EACjB,SAAU3S,EAAK,WAAW,EAAE,QAAA,EAC5B,QAASA,EAAK,SAAS,EAAE,QAAA,EACzB,KAAMA,EAAK,MAAM,EAAE,QAAA,EACnB,eAAgBoT,EAAQ,kBAAmB,CAAE,UAAW,GAAI,MAAO,EAAG,EAAE,QAAA,EACxE,kBAAmBA,EAAQ,sBAAuB,CAAE,UAAW,GAAI,MAAO,EAAG,EAC7E,SAAUJ,EAAQ,WAAW,EAAE,QAAQ,EAAI,CAC7C,CAAC,EAGYM,GAAeZ,EAAQ,gBAAiB,CACnD,GAAIC,EAAO,IAAI,EAAE,WAAA,EACjB,YAAa3S,EAAK,cAAc,EAAE,OAAA,EAAS,QAAA,EAC3C,MAAOA,EAAK,OAAO,EAAE,OAAA,EAAS,QAAA,EAC9B,KAAMA,EAAK,MAAM,EACjB,eAAgB8S,GAAQ,kBAAmB,CAAE,KAAM,CAAC,UAAW,WAAY,UAAU,EAAG,EAAE,QAAA,EAAU,QAAQ,SAAS,EAErH,YAAa9S,EAAK,cAAc,EAAE,QAAA,EAClC,cAAeA,EAAK,gBAAgB,EACpC,cAAeA,EAAK,gBAAgB,EACpC,aAAcA,EAAK,eAAe,EAClC,YAAagT,EAAQ,cAAc,EAAE,QAAQ,EAAI,EACjD,WAAYI,EAAQ,cAAe,CAAE,UAAW,GAAI,MAAO,EAAG,EAC9D,WAAYA,EAAQ,cAAe,CAAE,UAAW,GAAI,MAAO,EAAG,EAC9D,OAAQA,EAAQ,SAAU,CAAE,UAAW,EAAG,MAAO,CAAA,CAAG,EAAE,QAAQ,KAAK,EACnE,gBAAiBR,EAAQ,kBAAkB,EAAE,QAAQ,CAAC,EACtD,UAAWG,EAAU,YAAY,EAAE,WAAA,CACrC,CAAC,EAGYQ,GAAYb,EAAQ,aAAc,CAC7C,GAAIC,EAAO,IAAI,EAAE,WAAA,EACjB,OAAQC,EAAQ,SAAS,EAAE,WAAW,IAAMC,EAAM,EAAE,EACpD,UAAWD,EAAQ,YAAY,EAAE,WAAW,IAAM5E,GAAS,EAAE,EAC7D,SAAU4E,EAAQ,UAAU,EAAE,QAAA,EAAU,QAAQ,CAAC,EACjD,UAAW5S,EAAK,YAAY,EAC5B,UAAW+S,EAAU,YAAY,EAAE,WAAA,CACrC,CAAC,EAGYS,GAASd,EAAQ,SAAU,CACtC,GAAIC,EAAO,IAAI,EAAE,WAAA,EACjB,WAAYC,EAAQ,aAAa,EAAE,WAAW,IAAMC,EAAM,EAAE,EAC5D,cAAeD,EAAQ,iBAAiB,EAAE,WAAW,IAAMU,GAAa,EAAE,EAC1E,YAAatT,EAAK,cAAc,EAAE,QAAA,EAAU,OAAA,EAC5C,SAAUoT,EAAQ,WAAY,CAAE,UAAW,GAAI,MAAO,EAAG,EAAE,QAAA,EAC3D,eAAgBA,EAAQ,kBAAmB,CAAE,UAAW,GAAI,MAAO,CAAA,CAAG,EAAE,QAAQ,GAAG,EACnF,SAAUA,EAAQ,WAAY,CAAE,UAAW,GAAI,MAAO,CAAA,CAAG,EAAE,QAAQ,GAAG,EACtE,MAAOA,EAAQ,QAAS,CAAE,UAAW,GAAI,MAAO,EAAG,EAAE,QAAA,EACrD,cAAepT,EAAK,gBAAgB,EAAE,QAAA,EACtC,cAAeA,EAAK,gBAAgB,EAAE,QAAQ,SAAS,EACvD,OAAQA,EAAK,QAAQ,EAAE,QAAA,EAAU,QAAQ,QAAQ,EACjD,gBAAiByT,GAAK,kBAAkB,EAAE,QAAA,EAC1C,qBAAsBzT,EAAK,uBAAuB,EAClD,sBAAuB+S,EAAU,yBAAyB,EAC1D,mBAAoBA,EAAU,sBAAsB,EACpD,UAAW/S,EAAK,YAAY,EAC5B,UAAW+S,EAAU,YAAY,EAAE,WAAA,EACnC,UAAWA,EAAU,YAAY,EAAE,WAAA,CACrC,CAAC,EAEYW,GAAahB,EAAQ,cAAe,CAC/C,GAAIC,EAAO,IAAI,EAAE,WAAA,EACjB,QAASC,EAAQ,UAAU,EAAE,WAAW,IAAMY,GAAO,EAAE,EACvD,UAAWZ,EAAQ,YAAY,EAAE,WAAW,IAAM5E,GAAS,EAAE,EAC7D,SAAU4E,EAAQ,WAAW,EAAE,WAAW,IAAMC,EAAM,EAAE,EACxD,SAAUD,EAAQ,UAAU,EAAE,QAAA,EAC9B,UAAWQ,EAAQ,aAAc,CAAE,UAAW,GAAI,MAAO,EAAG,EAAE,QAAA,EAC9D,WAAYA,EAAQ,cAAe,CAAE,UAAW,GAAI,MAAO,CAAA,CAAG,EAAE,QAAA,CAClE,CAAC,EAGYO,GAAgBjB,EAAQ,iBAAkB,CACrD,GAAIC,EAAO,IAAI,EAAE,WAAA,EACjB,QAASC,EAAQ,UAAU,EAAE,WAAW,IAAMY,GAAO,EAAE,EACvD,OAAQxT,EAAK,QAAQ,EAAE,QAAA,EACvB,QAASA,EAAK,SAAS,EACvB,aAAcA,EAAK,eAAe,EAClC,SAAUA,EAAK,UAAU,EACzB,UAAW4S,EAAQ,YAAY,EAAE,WAAW,IAAMC,EAAM,EAAE,EAC1D,UAAWE,EAAU,YAAY,EAAE,WAAA,CACrC,CAAC,EAGYa,GAAalB,EAAQ,cAAe,CAC/C,GAAIC,EAAO,IAAI,EAAE,WAAA,EACjB,KAAM3S,EAAK,MAAM,EAAE,QAAA,EAAU,OAAA,EAC7B,YAAaA,EAAK,aAAa,EAAE,QAAA,EACjC,aAAcA,EAAK,eAAe,EAAE,QAAA,EACpC,cAAeoT,EAAQ,iBAAkB,CAAE,UAAW,GAAI,MAAO,EAAG,EAAE,QAAA,EACtE,eAAgBA,EAAQ,mBAAoB,CAAE,UAAW,GAAI,MAAO,EAAG,EACvE,YAAaA,EAAQ,eAAgB,CAAE,UAAW,GAAI,MAAO,EAAG,EAChE,WAAYR,EAAQ,aAAa,EACjC,UAAWA,EAAQ,YAAY,EAAE,QAAQ,CAAC,EAC1C,UAAWG,EAAU,YAAY,EAAE,QAAA,EACnC,WAAYA,EAAU,aAAa,EAAE,QAAA,EACrC,SAAUC,EAAQ,WAAW,EAAE,QAAQ,EAAI,EAC3C,UAAWD,EAAU,YAAY,EAAE,WAAA,CACrC,CAAC,EAGYc,GAAoBnB,EAAQ,qBAAsB,CAC7D,GAAIC,EAAO,IAAI,EAAE,WAAA,EACjB,KAAM3S,EAAK,MAAM,EAAE,QAAA,EACnB,UAAWA,EAAK,YAAY,EAC5B,YAAaA,EAAK,aAAa,EAC/B,KAAMA,EAAK,MAAM,EACjB,SAAUgT,EAAQ,WAAW,EAAE,QAAQ,EAAI,CAC7C,CAAC,EAEYc,GAAWpB,EAAQ,WAAY,CAC1C,GAAIC,EAAO,IAAI,EAAE,WAAA,EACjB,WAAYC,EAAQ,aAAa,EAAE,WAAW,IAAMiB,GAAkB,EAAE,EACxE,KAAM7T,EAAK,MAAM,EAAE,QAAA,EACnB,UAAWA,EAAK,YAAY,EAC5B,YAAaA,EAAK,aAAa,EAC/B,UAAWoT,EAAQ,aAAc,CAAE,UAAW,GAAI,MAAO,EAAG,EAAE,QAAA,EAC9D,SAAUR,EAAQ,UAAU,EAAE,QAAA,EAC9B,SAAUI,EAAQ,WAAW,EAAE,QAAQ,EAAI,CAC7C,CAAC,EAEYe,GAAmBrB,EAAQ,oBAAqB,CAC3D,GAAIC,EAAO,IAAI,EAAE,WAAA,EACjB,OAAQC,EAAQ,SAAS,EAAE,WAAW,IAAMC,EAAM,EAAE,EACpD,UAAWD,EAAQ,YAAY,EAAE,WAAW,IAAMkB,GAAS,EAAE,EAC7D,WAAY9T,EAAK,YAAY,EAC7B,OAAQoT,EAAQ,SAAU,CAAE,UAAW,EAAG,MAAO,CAAA,CAAG,EAAE,QAAQ,KAAK,EACnE,UAAWR,EAAQ,YAAY,EAAE,QAAQ,CAAC,EAC1C,YAAaI,EAAQ,cAAc,EAAE,QAAQ,EAAI,EACjD,UAAWD,EAAU,YAAY,EAAE,WAAA,CACrC,CAAC,EAEYiB,GAAkBtB,EAAQ,mBAAoB,CACzD,GAAIC,EAAO,IAAI,EAAE,WAAA,EACjB,WAAYC,EAAQ,aAAa,EAAE,WAAW,IAAMC,EAAM,EAAE,EAC5D,kBAAmBD,EAAQ,qBAAqB,EAAE,WAAW,IAAMmB,GAAiB,EAAE,EACtF,UAAWnB,EAAQ,YAAY,EAAE,WAAW,IAAMkB,GAAS,EAAE,EAC7D,cAAe9T,EAAK,gBAAgB,EAAE,QAAA,EAAU,OAAA,EAChD,cAAe+S,EAAU,gBAAgB,EAAE,QAAA,EAC3C,cAAe/S,EAAK,gBAAgB,EAAE,QAAA,EACtC,QAASyT,GAAK,SAAS,EAAE,QAAA,EACzB,MAAOL,EAAQ,QAAS,CAAE,UAAW,GAAI,MAAO,EAAG,EAAE,QAAA,EACrD,OAAQpT,EAAK,QAAQ,EAAE,QAAQ,SAAS,EACxC,cAAeA,EAAK,gBAAgB,EAAE,QAAA,EACtC,cAAeA,EAAK,gBAAgB,EAAE,QAAQ,SAAS,EACvD,cAAeA,EAAK,gBAAgB,EACpC,UAAW+S,EAAU,YAAY,EAAE,WAAA,CACrC,CAAC,EAGYkB,GAAUvB,EAAQ,UAAW,CACxC,GAAIC,EAAO,IAAI,EAAE,WAAA,EACjB,WAAYC,EAAQ,aAAa,EAAE,WAAW,IAAMC,EAAM,EAAE,EAC5D,UAAWD,EAAQ,YAAY,EAAE,WAAW,IAAM5E,GAAS,EAAE,EAC7D,QAAS4E,EAAQ,UAAU,EAAE,WAAW,IAAMY,GAAO,EAAE,EACvD,OAAQZ,EAAQ,QAAQ,EAAE,QAAA,EAC1B,QAAS5S,EAAK,SAAS,EACvB,UAAW+S,EAAU,YAAY,EAAE,WAAA,CACrC,CAAC,EAI+BmB,EAAmBrB,CAAK,EACrD,KAAK,CACJ,GAAI,GACJ,UAAW,GACX,UAAW,EACb,CAAC,EACA,QAAQ,CACP,KAAM,GACN,eAAgB,EAClB,CAAC,EACA,SAAS,CACR,YAAa,GACb,MAAO,GACP,KAAM,EACR,CAAC,EAE8BqB,EAAmBjB,EAAM,EAAE,KAAK,CAC/D,GAAI,GACJ,UAAW,EACb,CAAC,EAEM,MAAMkB,GAAuBD,EAAmBtJ,EAAU,EAAE,KAAK,CACtE,GAAI,EACN,CAAC,EAEYwJ,GAAsBF,EAAmBlG,EAAQ,EAAE,KAAK,CACnE,GAAI,GACJ,UAAW,GACX,UAAW,EACb,CAAC,EAEuCkG,EAAmBb,EAAa,EAAE,KAAK,CAC7E,GAAI,EACN,CAAC,EAGsCa,EAAmBZ,EAAY,EAAE,KAAK,CAC3E,GAAI,GACJ,UAAW,EAEb,CAAC,EAEmCY,EAAmBX,EAAS,EAAE,KAAK,CACrE,GAAI,GACJ,UAAW,EACb,CAAC,EAEgCW,EAAmBV,EAAM,EAAE,KAAK,CAC/D,GAAI,GACJ,UAAW,GACX,UAAW,EACb,CAAC,EAEoCU,EAAmBR,EAAU,EAAE,KAAK,CACvE,GAAI,EACN,CAAC,EAEwCQ,EAAmBP,EAAa,EAAE,KAAK,CAC9E,GAAI,GACJ,UAAW,EACb,CAAC,EAEoCO,EAAmBN,EAAU,EAAE,KAAK,CACvE,GAAI,GACJ,UAAW,EACb,CAAC,EAE0CM,EAAmBL,EAAiB,EAAE,KAAK,CACpF,GAAI,EACN,CAAC,EAEkCK,EAAmBJ,EAAQ,EAAE,KAAK,CACnE,GAAI,EACN,CAAC,EAE0CI,EAAmBH,EAAgB,EAAE,KAAK,CACnF,GAAI,GACJ,UAAW,EACb,CAAC,EAEyCG,EAAmBF,EAAe,EAAE,KAAK,CACjF,GAAI,GACJ,UAAW,EACb,CAAC,EAC4CE,EAAmBzB,EAAkB,EAAE,KAAK,CACvF,GAAI,GACJ,UAAW,EACb,CAAC,EACiCyB,EAAmBD,EAAO,EAAE,KAAK,CACjE,GAAI,GACJ,UAAW,EACb,CAAC,EC1VD,MAAMI,GAAoBD,GAAoB,OAAO,CACnD,OAAQE,GAAQhC,EAAE,CAAQ,EAAE,SAAA,CAC9B,CAAC,EAEKiC,GAAmBrB,GAAmB,KAAK,CAAE,OAAQ,GAAM,EAC3DsB,GAAqBL,GAE3B,SAAwBM,IAAkB,CACxC,KAAM,CAAE,MAAA1T,CAAA,EAAUS,GAAA,EACZpC,EAAcsV,GAAA,EACd,CAACC,EAAqBC,CAAsB,EAAIrQ,EAAAA,SAAS,EAAK,EAC9D,CAACsQ,EAAgBC,CAAiB,EAAIvQ,EAAAA,SAAmC,IAAI,EAC7E,CAACwQ,EAAsBC,CAAuB,EAAIzQ,EAAAA,SAAS,EAAK,EAGhE,CAAE,KAAM0Q,EAAQ,UAAWC,CAAA,EAAkBnH,EAAiB,CAClE,SAAU,CAAC,iBAAiB,CAAA,CAC7B,EAGK,CAAE,KAAMC,EAAU,UAAWC,CAAA,EAAoBF,EAA8B,CACnF,SAAU,CAAC,gBAAiB,CAAE,SAAUkH,GAAA,YAAAA,EAAQ,GAAI,EACpD,QAAS,CAAC,EAACA,GAAA,MAAAA,EAAQ,GAAA,CACpB,EAGK,CAAE,KAAMzB,EAAQ,UAAW2B,CAAA,EAAkBpH,EAA2B,CAC5E,SAAU,CAAC,oBAAoB,EAC/B,QAAS,CAAC,EAACkH,GAAA,MAAAA,EAAQ,GAAA,CACpB,EAGK,CAAE,KAAMrK,CAAA,EAAemD,EAAqB,CAChD,SAAU,CAAC,iBAAiB,CAAA,CAC7B,EAGKqH,EAAcC,GAA2C,CAC7D,SAAUC,GAAYjB,EAAiB,EACvC,cAAe,CACb,KAAM,GACN,YAAa,GACb,MAAO,GACP,cAAe,GACf,WAAY,OACZ,MAAO,EACP,OAAQ,CAAA,CAAC,CACX,CACD,EAGKkB,EAAeF,GAA4C,CAC/D,SAAUC,GAAYd,EAAkB,EACxC,cAAe,CACb,KAAM,GACN,KAAM,GACN,YAAa,GACb,SAAU,GACV,SAAU,EAAA,CACZ,CACD,EAGKgB,EAAaH,GAA0C,CAC3D,SAAUC,GAAYf,EAAgB,EACtC,cAAeU,GAAU,CACvB,aAAc,GACd,YAAa,GACb,gBAAiB,GACjB,cAAe,GACf,UAAW,GACX,kBAAmB,GACnB,SAAU,EAAA,CACZ,CACD,EAGKQ,EAAkBC,GAAY,CAClC,WAAY,MAAOhW,GACbmV,EACK,MAAMtV,EAAW,MAAO,iBAAiBsV,EAAe,EAAE,GAAInV,CAAI,EAElE,MAAMH,EAAW,OAAQ,gBAAiBG,CAAI,EAGzD,UAAW,IAAM,CACfN,EAAY,kBAAkB,CAAE,SAAU,CAAC,eAAe,EAAG,EAC7D2B,EAAM,CACJ,MAAO8T,EAAiB,kBAAoB,kBAC5C,YAAa,oBAAoBA,EAAiB,UAAY,SAAS,eAAA,CACxE,EACDD,EAAuB,EAAK,EAC5BE,EAAkB,IAAI,EACtBM,EAAY,MAAA,CAAM,EAEpB,QAAS,IAAM,CACbrU,EAAM,CACJ,MAAO,QACP,YAAa,aAAa8T,EAAiB,SAAW,QAAQ,WAC9D,QAAS,aAAA,CACV,CAAA,CACH,CACD,EAGKc,EAAiBD,GAAY,CACjC,WAAY,MAAOhW,GACV,MAAMH,EAAW,MAAO,kBAAmBG,CAAI,EAExD,UAAW,IAAM,CACfN,EAAY,kBAAkB,CAAE,SAAU,CAAC,iBAAiB,EAAG,EAC/D2B,EAAM,CACJ,MAAO,kBACP,YAAa,mDAAA,CACd,CAAA,EAEH,QAAS,IAAM,CACbA,EAAM,CACJ,MAAO,QACP,YAAa,kCACb,QAAS,aAAA,CACV,CAAA,CACH,CACD,EAGK6U,GAAwBF,GAAY,CACxC,WAAY,MAAOG,GACV,MAAMtW,EAAW,SAAU,iBAAiBsW,CAAS,EAAE,EAEhE,UAAW,IAAM,CACfzW,EAAY,kBAAkB,CAAE,SAAU,CAAC,eAAe,EAAG,EAC7D2B,EAAM,CACJ,MAAO,kBACP,YAAa,uCAAA,CACd,CAAA,EAEH,QAAS,IAAM,CACbA,EAAM,CACJ,MAAO,QACP,YAAa,2BACb,QAAS,aAAA,CACV,CAAA,CACH,CACD,EAGK+U,EAAmBJ,GAAY,CACnC,WAAY,MAAOhW,GACV,MAAMH,EAAW,OAAQ,kBAAmBG,CAAI,EAEzD,UAAW,IAAM,CACfN,EAAY,kBAAkB,CAAE,SAAU,CAAC,iBAAiB,EAAG,EAC/D2B,EAAM,CACJ,MAAO,mBACP,YAAa,wCAAA,CACd,EACDiU,EAAwB,EAAK,EAC7BO,EAAa,MAAA,CAAM,EAErB,QAAS,IAAM,CACbxU,EAAM,CACJ,MAAO,QACP,YAAa,4BACb,QAAS,aAAA,CACV,CAAA,CACH,CACD,EAEKgV,EAAmBrW,GAA4C,CACnE+V,EAAgB,OAAO/V,CAAI,CAAA,EAGvBsW,EAAkBtW,GAA2C,CACjEiW,EAAe,OAAOjW,CAAI,CAAA,EAGtBuW,GAAoBvW,GAA6C,CACrEoW,EAAiB,OAAOpW,CAAI,CAAA,EAGxBwW,GAAqB9K,GAA+B,CACxD0J,EAAkB1J,CAAO,EACzBgK,EAAY,MAAM,CAChB,KAAMhK,EAAQ,KACd,YAAaA,EAAQ,aAAe,GACpC,MAAOA,EAAQ,MACf,cAAeA,EAAQ,eAAiB,GACxC,WAAYA,EAAQ,WACpB,MAAOA,EAAQ,OAAS,EACxB,OAAQA,EAAQ,QAAU,CAAA,CAAC,CAC5B,EACDwJ,EAAuB,EAAI,CAAA,EAGvBuB,GAAuBN,GAAsB,CAC7C,QAAQ,+CAA+C,GACzDD,GAAsB,OAAOC,CAAS,CACxC,EAIIO,IAAe5C,GAAA,YAAAA,EAAQ,OAAO,CAAC6C,EAAKC,IACxCD,EAAMC,EAAM,WAAW,OAAO,CAACC,GAAS3N,KACtC2N,GAAU,WAAW3N,GAAK,KAAK,EAAG,CAAA,EACjC,KACA,EAEC4N,IAAchD,GAAA,YAAAA,EAAQ,SAAU,EAChCiD,IAAgBzI,GAAA,YAAAA,EAAU,SAAU,EACpC0I,GAAgB,YAAWzB,GAAA,YAAAA,EAAQ,SAAU,GAAG,EAEtD,OAAIC,EAEAvR,EAAAA,KAAC,MAAA,CAAI,UAAU,6BACb,SAAA,CAAApB,EAAAA,IAACoI,GAAA,EAAO,QACP,MAAA,CAAI,UAAU,8CACb,SAAAhH,EAAAA,KAAC,MAAA,CAAI,UAAU,0BACb,SAAA,CAAApB,EAAAA,IAAC4F,EAAA,CAAS,UAAU,UAAA,CAAW,EAC/B5F,MAAC,OAAI,UAAU,wCACZ,UAAC,GAAG,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC0J,EAAGC,IACrB3J,EAAAA,IAAC4F,EAAA,CAAiB,UAAU,MAAA,EAAb+D,CAAoB,CACpC,EACH,EACA3J,EAAAA,IAAC4F,EAAA,CAAS,UAAU,MAAA,CAAO,CAAA,CAAA,CAC7B,CAAA,CACF,CAAA,EACF,EAIC8M,EAmBHtR,EAAAA,KAAC,MAAA,CAAI,UAAU,6BACb,SAAA,CAAApB,EAAAA,IAACoI,GAAA,EAAO,EAERhH,EAAAA,KAAC,MAAA,CAAI,UAAU,8CAEb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,oEACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAApB,EAAAA,IAAC,KAAA,CAAG,UAAU,0CAA0C,SAAA,mBAAgB,EACxEA,EAAAA,IAAC,IAAA,CAAE,UAAU,wBAAwB,SAAA,iCAAA,CAA+B,CAAA,EACtE,EACAA,EAAAA,IAAC,MAAA,CAAI,UAAU,2CACZ,SAAA0S,EAAO,WACNtR,EAAAA,KAACuH,EAAA,CAAM,QAAQ,UAAU,UAAU,eACjC,SAAA,CAAA3I,EAAAA,IAACoU,GAAA,CAAY,UAAU,cAAA,CAAe,EAAE,iBAAA,CAAA,CAE1C,EAEAhT,EAAAA,KAACuH,EAAA,CAAM,QAAQ,YACb,SAAA,CAAA3I,EAAAA,IAACqU,GAAA,CAAM,UAAU,cAAA,CAAe,EAAE,sBAAA,CAAA,CAEpC,CAAA,CAEJ,CAAA,EACF,EAGAjT,EAAAA,KAAC,MAAA,CAAI,UAAU,6CACb,SAAA,CAAApB,EAAAA,IAACmD,EAAA,CACC,eAACI,EAAA,CAAY,UAAU,MACrB,SAAAnC,EAAAA,KAAC,MAAA,CAAI,UAAU,oBACb,SAAA,CAAApB,EAAAA,IAACsU,GAAA,CAAW,UAAU,sBAAA,CAAuB,EAC7ClT,EAAAA,KAAC,MAAA,CAAI,UAAU,OACb,SAAA,CAAApB,EAAAA,IAAC,IAAA,CAAE,UAAU,4CAA4C,SAAA,gBAAa,EACtEoB,EAAAA,KAAC,IAAA,CAAE,UAAU,qBAAqB,SAAA,CAAA,IAAEyS,GAAa,eAAA,CAAe,CAAA,CAAE,CAAA,CAAA,CACpE,CAAA,CAAA,CACF,EACF,EACF,EAEA7T,EAAAA,IAACmD,GACC,SAAAnD,EAAAA,IAACuD,EAAA,CAAY,UAAU,MACrB,SAAAnC,EAAAA,KAAC,MAAA,CAAI,UAAU,oBACb,SAAA,CAAApB,EAAAA,IAAC6J,GAAA,CAAa,UAAU,wBAAA,CAAyB,EACjDzI,EAAAA,KAAC,MAAA,CAAI,UAAU,OACb,SAAA,CAAApB,EAAAA,IAAC,IAAA,CAAE,UAAU,4CAA4C,SAAA,eAAY,EACrEA,EAAAA,IAAC,IAAA,CAAE,UAAU,qBAAsB,SAAAiU,EAAA,CAAY,CAAA,CAAA,CACjD,CAAA,CAAA,CACF,EACF,EACF,EAEAjU,EAAAA,IAACmD,GACC,SAAAnD,EAAAA,IAACuD,EAAA,CAAY,UAAU,MACrB,SAAAnC,EAAAA,KAAC,MAAA,CAAI,UAAU,oBACb,SAAA,CAAApB,EAAAA,IAACuU,GAAA,CAAQ,UAAU,yBAAA,CAA0B,EAC7CnT,EAAAA,KAAC,MAAA,CAAI,UAAU,OACb,SAAA,CAAApB,EAAAA,IAAC,IAAA,CAAE,UAAU,4CAA4C,SAAA,WAAQ,EACjEA,EAAAA,IAAC,IAAA,CAAE,UAAU,qBAAsB,SAAAkU,EAAA,CAAc,CAAA,CAAA,CACnD,CAAA,CAAA,CACF,EACF,EACF,EAEAlU,EAAAA,IAACmD,GACC,SAAAnD,EAAAA,IAACuD,EAAA,CAAY,UAAU,MACrB,SAAAnC,EAAAA,KAAC,MAAA,CAAI,UAAU,oBACb,SAAA,CAAApB,EAAAA,IAAC4J,GAAA,CAAK,UAAU,yBAAA,CAA0B,EAC1CxI,EAAAA,KAAC,MAAA,CAAI,UAAU,OACb,SAAA,CAAApB,EAAAA,IAAC,IAAA,CAAE,UAAU,4CAA4C,SAAA,SAAM,QAC9D,IAAA,CAAE,UAAU,qBAAsB,SAAAmU,GAAc,QAAQ,CAAC,CAAA,CAAE,CAAA,CAAA,CAC9D,CAAA,CAAA,CACF,EACF,CAAA,CACF,CAAA,EACF,EAGA/S,EAAAA,KAACsL,GAAA,CAAK,aAAa,WAAW,UAAU,YACtC,SAAA,CAAAtL,OAACwL,GAAA,CACC,SAAA,CAAA5M,EAAAA,IAAC8M,GAAA,CAAY,MAAM,WAAW,SAAA,WAAQ,EACtC9M,EAAAA,IAAC8M,GAAA,CAAY,MAAM,SAAS,SAAA,SAAM,EAClC9M,EAAAA,IAAC8M,GAAA,CAAY,MAAM,UAAU,SAAA,SAAA,CAAO,CAAA,EACtC,QAGCE,GAAA,CAAY,MAAM,WAAW,UAAU,YACtC,gBAAC7J,EAAA,CACC,SAAA,CAAAnD,MAACoD,GAAA,CACC,SAAAhC,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAApB,EAAAA,IAACqD,IAAU,SAAA,eAAA,CAAa,EACxBjC,EAAAA,KAAC,MAAA,CAAI,UAAU,aACb,SAAA,CAAAA,EAAAA,KAAC8L,GAAA,CAAO,KAAMsF,EAAsB,aAAcC,EAChD,SAAA,CAAAzS,EAAAA,IAACoN,GAAA,CAAc,QAAO,GACpB,SAAAhM,OAAC0B,GAAO,QAAQ,UAAU,QAAS,IAAM,CACvCkQ,EAAa,MAAA,CAAM,EAEnB,SAAA,CAAAhT,EAAAA,IAACiI,GAAA,CAAK,UAAU,cAAA,CAAe,EAAE,iBAAA,CAAA,CAEnC,CAAA,CACF,SACCyF,GAAA,CACC,SAAA,CAAA1N,MAAC6N,GAAA,CACC,SAAA7N,EAAAA,IAAC8N,GAAA,CAAY,SAAA,qBAAA,CAAmB,EAClC,EACA9N,EAAAA,IAACqO,GAAA,CAAM,GAAG2E,EACR,SAAA5R,EAAAA,KAAC,OAAA,CAAK,SAAU4R,EAAa,aAAaU,EAAgB,EAAG,UAAU,YACrE,SAAA,CAAA1T,EAAAA,IAACyO,EAAA,CACC,QAASuE,EAAa,QACtB,KAAK,OACL,OAAQ,CAAC,CAAE,MAAAwB,CAAA,WACRpF,EAAA,CACC,SAAA,CAAApP,EAAAA,IAACsP,GAAU,SAAA,eAAA,CAAa,QACvBE,EAAA,CACC,SAAAxP,EAAAA,IAAC8J,EAAA,CAAO,GAAG0K,EAAO,EACpB,QACC5E,EAAA,CAAA,CAAY,CAAA,CAAA,CACf,CAAA,CAAA,EAIJ5P,EAAAA,IAACyO,EAAA,CACC,QAASuE,EAAa,QACtB,KAAK,OACL,OAAQ,CAAC,CAAE,MAAAwB,CAAA,WACRpF,EAAA,CACC,SAAA,CAAApP,EAAAA,IAACsP,GAAU,SAAA,eAAA,CAAa,EACxBtP,EAAAA,IAACwP,GACC,SAAAxP,MAAC8J,EAAA,CAAO,GAAG0K,EAAO,YAAY,oBAAoB,CAAA,CACpD,QACC5E,EAAA,CAAA,CAAY,CAAA,CAAA,CACf,CAAA,CAAA,EAIJ5P,EAAAA,IAACyO,EAAA,CACC,QAASuE,EAAa,QACtB,KAAK,cACL,OAAQ,CAAC,CAAE,MAAAwB,CAAA,WACRpF,EAAA,CACC,SAAA,CAAApP,EAAAA,IAACsP,GAAU,SAAA,wBAAA,CAAsB,QAChCE,EAAA,CACC,SAAAxP,EAAAA,IAACyM,GAAA,CAAU,GAAG+H,EAAO,EACvB,QACC5E,EAAA,CAAA,CAAY,CAAA,CAAA,CACf,CAAA,CAAA,EAIJ5P,EAAAA,IAACyO,EAAA,CACC,QAASuE,EAAa,QACtB,KAAK,WACL,OAAQ,CAAC,CAAE,MAAAwB,CAAA,WACRpF,EAAA,CACC,SAAA,CAAApP,EAAAA,IAACsP,GAAU,SAAA,sBAAA,CAAoB,EAC/BtP,EAAAA,IAACwP,GACC,SAAAxP,MAAC8J,EAAA,CAAO,GAAG0K,EAAO,KAAK,MAAM,CAAA,CAC/B,QACC5E,EAAA,CAAA,CAAY,CAAA,CAAA,CACf,CAAA,CAAA,EAIJxO,EAAAA,KAAC,MAAA,CAAI,UAAU,6BACb,SAAA,CAAApB,EAAAA,IAAC8C,EAAA,CACC,KAAK,SACL,QAAQ,UACR,QAAS,IAAM2P,EAAwB,EAAK,EAC7C,SAAA,QAAA,CAAA,EAGDzS,EAAAA,IAAC8C,EAAA,CAAO,KAAK,SAAS,SAAUyQ,EAAiB,UAC9C,SAAAA,EAAiB,UAAY,cAAgB,iBAAA,CAChD,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CAAA,CACF,CAAA,EACF,EAEAnS,EAAAA,KAAC8L,GAAA,CAAO,KAAMkF,EAAqB,aAAcC,EAC/C,SAAA,CAAArS,MAACoN,IAAc,QAAO,GACpB,SAAAhM,OAAC0B,EAAA,CAAO,QAAS,IAAM,CACrByP,EAAkB,IAAI,EACtBM,EAAY,MAAA,CAAM,EAElB,SAAA,CAAA7S,EAAAA,IAACiI,GAAA,CAAK,UAAU,cAAA,CAAe,EAAE,aAAA,CAAA,CAEnC,CAAA,CACF,EACA7G,EAAAA,KAACsM,GAAA,CAAc,UAAU,YACzB,SAAA,CAAA1N,EAAAA,IAAC6N,IACC,SAAA7N,EAAAA,IAAC8N,GAAA,CACE,SAAAwE,EAAiB,eAAiB,kBACnC,CAAA,CACJ,EACAtS,EAAAA,IAACqO,GAAA,CAAM,GAAGwE,EACR,SAAAzR,EAAAA,KAAC,OAAA,CAAK,SAAUyR,EAAY,aAAaW,CAAe,EAAG,UAAU,YACnE,SAAA,CAAAxT,EAAAA,IAACyO,EAAA,CACC,QAASoE,EAAY,QACrB,KAAK,OACL,OAAQ,CAAC,CAAE,MAAA2B,CAAA,WACRpF,EAAA,CACC,SAAA,CAAApP,EAAAA,IAACsP,GAAU,SAAA,cAAA,CAAY,QACtBE,EAAA,CACC,SAAAxP,EAAAA,IAAC8J,EAAA,CAAO,GAAG0K,EAAO,EACpB,QACC5E,EAAA,CAAA,CAAY,CAAA,CAAA,CACf,CAAA,CAAA,EAIJ5P,EAAAA,IAACyO,EAAA,CACC,QAASoE,EAAY,QACrB,KAAK,cACL,OAAQ,CAAC,CAAE,MAAA2B,CAAA,WACRpF,EAAA,CACC,SAAA,CAAApP,EAAAA,IAACsP,GAAU,SAAA,aAAA,CAAW,QACrBE,EAAA,CACC,SAAAxP,EAAAA,IAACyM,GAAA,CAAU,GAAG+H,EAAO,EACvB,QACC5E,EAAA,CAAA,CAAY,CAAA,CAAA,CACf,CAAA,CAAA,EAIJxO,EAAAA,KAAC,MAAA,CAAI,UAAU,yBACb,SAAA,CAAApB,EAAAA,IAACyO,EAAA,CACC,QAASoE,EAAY,QACrB,KAAK,QACL,OAAQ,CAAC,CAAE,MAAA2B,CAAA,WACRpF,EAAA,CACC,SAAA,CAAApP,EAAAA,IAACsP,GAAU,SAAA,WAAA,CAAS,EACpBtP,EAAAA,IAACwP,EAAA,CACC,SAAAxP,EAAAA,IAAC8J,EAAA,CAAO,GAAG0K,EAAO,KAAK,SAAS,KAAK,MAAA,CAAO,CAAA,CAC9C,QACC5E,EAAA,CAAA,CAAY,CAAA,CAAA,CACf,CAAA,CAAA,EAIJ5P,EAAAA,IAACyO,EAAA,CACC,QAASoE,EAAY,QACrB,KAAK,gBACL,OAAQ,CAAC,CAAE,MAAA2B,CAAA,WACRpF,EAAA,CACG,SAAA,CAAApP,EAAAA,IAACsP,GAAU,SAAA,oBAAA,CAAkB,EAC/BtP,EAAAA,IAACwP,EAAA,CACC,SAAAxP,EAAAA,IAAC8J,EAAA,CAAO,GAAG0K,EAAO,KAAK,SAAS,KAAK,MAAA,CAAO,CAAA,CAC9C,QACC5E,EAAA,CAAA,CAAY,CAAA,CAAA,CACf,CAAA,CAAA,CAEJ,EACF,EAEAxO,EAAAA,KAAC,MAAA,CAAI,UAAU,yBACb,SAAA,CAAApB,EAAAA,IAACyO,EAAA,CACC,QAASoE,EAAY,QACrB,KAAK,aACL,OAAQ,CAAC,CAAE,MAAA2B,CAAA,WACRpF,EAAA,CACC,SAAA,CAAApP,EAAAA,IAACsP,GAAU,SAAA,UAAA,CAAQ,EACnBlO,EAAAA,KAAC8C,GAAA,CAAO,cAAgBuQ,GAAUD,EAAM,SAAS,SAASC,CAAK,CAAC,EAC9D,SAAA,CAAAzU,EAAAA,IAACwP,EAAA,CACC,eAAClL,GAAA,CACC,SAAAtE,EAAAA,IAACoE,IAAY,YAAY,iBAAA,CAAkB,EAC7C,CAAA,CACF,QACCW,GAAA,CACE,SAAAsD,GAAA,YAAAA,EAAY,IAAKI,SACfnD,EAAA,CAA6B,MAAOmD,EAAS,GAAG,WAC9C,SAAAA,EAAS,MADKA,EAAS,EAE1B,EACD,CACH,CAAA,EACC,QACJmH,EAAA,EAAW,EAAE,yCAAiCA,EAAA,CAAA,CAAY,CAAA,CAAA,CAC3D,CAAA,CAAA,EAIJ5P,EAAAA,IAACyO,EAAA,CACC,QAASoE,EAAY,QACrB,KAAK,QACL,OAAQ,CAAC,CAAE,MAAA2B,CAAA,WACRpF,EAAA,CACC,SAAA,CAAApP,EAAAA,IAACsP,GAAU,SAAA,gBAAA,CAAc,QACxBE,EAAA,CACC,SAAAxP,EAAAA,IAAC8J,GAAO,GAAG0K,EAAO,KAAK,SAAS,SAAWpL,GAAMoL,EAAM,SAAS,SAASpL,EAAE,OAAO,KAAK,CAAC,EAAG,EAC7F,QACCwG,EAAA,CAAA,CAAY,CAAA,CAAA,CACf,CAAA,CAAA,CAEJ,EACF,EAEAxO,EAAAA,KAAC,MAAA,CAAI,UAAU,6BACb,SAAA,CAAApB,EAAAA,IAAC8C,EAAA,CACC,KAAK,SACL,QAAQ,UACR,QAAS,IAAMuP,EAAuB,EAAK,EAC5C,SAAA,QAAA,CAAA,EAGDrS,EAAAA,IAAC8C,EAAA,CAAO,KAAK,SAAS,SAAUoQ,EAAgB,UAC7C,SAAAA,EAAgB,UAAY,YAAeZ,EAAiB,SAAW,QAAA,CAC1E,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CAAA,CACA,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,EACAtS,EAAAA,IAACuD,GACE,SAAAmI,EACC1L,EAAAA,IAAC,OAAI,UAAU,YACZ,UAAC,GAAG,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC0J,EAAGC,IACrBvI,EAAAA,KAAC,MAAA,CAAY,UAAU,oDACrB,SAAA,CAAApB,EAAAA,IAAC4F,EAAA,CAAS,UAAU,WAAA,CAAY,EAChCxE,EAAAA,KAAC,MAAA,CAAI,UAAU,mBACb,SAAA,CAAApB,EAAAA,IAAC4F,EAAA,CAAS,UAAU,WAAA,CAAY,EAChC5F,EAAAA,IAAC4F,EAAA,CAAS,UAAU,WAAA,CAAY,CAAA,EAClC,EACA5F,EAAAA,IAAC4F,EAAA,CAAS,UAAU,UAAA,CAAW,CAAA,CAAA,EANvB+D,CAOV,CACD,EACH,GACE8B,GAAA,YAAAA,EAAU,UAAW,EACvBrK,EAAAA,KAAC,MAAA,CAAI,UAAU,mBACb,SAAA,CAAApB,EAAAA,IAACuU,GAAA,CAAQ,UAAU,8CAAA,CAA+C,EAClEvU,EAAAA,IAAC,KAAA,CAAG,UAAU,6BAA6B,SAAA,kBAAe,EAC1DA,EAAAA,IAAC,IAAA,CAAE,UAAU,wBAAwB,SAAA,yCAAA,CAAuC,CAAA,CAAA,CAC9E,EAEAA,EAAAA,IAAC,MAAA,CAAI,UAAU,YACZ,SAAAyL,GAAA,YAAAA,EAAU,IAAK5C,GACdzH,OAAC,MAAA,CAAqB,UAAU,oDAC9B,SAAA,CAAApB,EAAAA,IAAC,MAAA,CAAI,UAAU,8DACZ,SAAA6I,EAAQ,QAAUA,EAAQ,OAAO,OAAS,EACzC7I,EAAAA,IAAC,MAAA,CACC,IAAK6I,EAAQ,OAAO,CAAC,EACrB,IAAKA,EAAQ,KACb,UAAU,oCAAA,CAAA,EAGZ7I,EAAAA,IAACuU,GAAA,CAAQ,UAAU,UAAU,CAAA,CAEjC,EACAnT,EAAAA,KAAC,MAAA,CAAI,UAAU,SACb,SAAA,CAAApB,EAAAA,IAAC,KAAA,CAAG,UAAU,gBAAiB,SAAA6I,EAAQ,KAAK,EAC5CzH,EAAAA,KAAC,IAAA,CAAE,UAAU,gCAAgC,SAAA,CAAA,IACzC,WAAWyH,EAAQ,KAAK,EAAE,eAAA,EAAiB,aAAWA,EAAQ,KAAA,EAClE,EACA7I,EAAAA,IAAC2I,EAAA,CAAM,QAASE,EAAQ,SAAW,UAAY,YAC5C,SAAAA,EAAQ,SAAW,SAAW,UAAA,CACjC,CAAA,EACF,EACAzH,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAApB,EAAAA,IAAC8C,EAAA,CACC,KAAK,KACL,QAAQ,UACR,QAAS,IAAM6Q,GAAkB9K,CAAO,EAExC,SAAA7I,EAAAA,IAAC0U,GAAA,CAAK,UAAU,SAAA,CAAU,CAAA,CAAA,EAE5B1U,EAAAA,IAAC8C,EAAA,CACC,KAAK,KACL,QAAQ,UACR,QAAS,IAAM8Q,GAAoB/K,EAAQ,EAAE,EAC7C,SAAUwK,GAAsB,UAEhC,SAAArT,EAAAA,IAACkI,GAAA,CAAO,UAAU,SAAA,CAAU,CAAA,CAAA,CAC9B,CAAA,CACF,CAAA,CAAA,EArCQW,EAAQ,EAsClB,EACD,CACH,CAAA,CAEJ,CAAA,CAAA,CACF,CAAA,CACF,QAGCmE,GAAA,CAAY,MAAM,SAAS,UAAU,YACpC,gBAAC7J,EAAA,CACC,SAAA,CAAAnD,MAACoD,GAAA,CACC,SAAApD,EAAAA,IAACqD,GAAA,CAAU,SAAA,eAAA,CAAa,EAC1B,EACArD,EAAAA,IAACuD,EAAA,CACE,SAAAqP,EACC5S,EAAAA,IAAC,MAAA,CAAI,UAAU,YACZ,SAAA,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC0J,EAAGC,IACrB3J,EAAAA,IAAC4F,EAAA,CAAiB,UAAU,MAAA,EAAb+D,CAAoB,CACpC,EACF,GACCsH,GAAA,YAAAA,EAAQ,UAAW,EACrB7P,OAAC,MAAA,CAAI,UAAU,mBACb,SAAA,CAAApB,EAAAA,IAAC6J,GAAA,CAAa,UAAU,8CAAA,CAA+C,EACvE7J,EAAAA,IAAC,KAAA,CAAG,UAAU,6BAA6B,SAAA,gBAAa,EACxDA,EAAAA,IAAC,IAAA,CAAE,UAAU,wBAAwB,SAAA,+DAAA,CAA6D,CAAA,CAAA,CACpG,EAEAA,EAAAA,IAAC,MAAA,CAAI,UAAU,YACZ,SAAAiR,GAAA,YAAAA,EAAQ,IAAK8C,GACZ3S,OAAC,MAAA,CAAmB,UAAU,wBAC5B,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,wCACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAA,EAAAA,KAAC,KAAA,CAAG,UAAU,gBAAgB,SAAA,CAAA,UAAQ2S,EAAM,WAAA,EAAY,EACxD/T,EAAAA,IAAC,IAAA,CAAE,UAAU,gCACV,SAAA,IAAI,KAAK+T,EAAM,SAAS,EAAE,mBAAA,CAAmB,CAChD,CAAA,EACF,EACA3S,EAAAA,KAAC,MAAA,CAAI,UAAU,aACb,SAAA,CAAAA,EAAAA,KAAC,IAAA,CAAE,UAAU,gBAAgB,SAAA,CAAA,IAAE,WAAW2S,EAAM,KAAK,EAAE,eAAA,CAAe,EAAE,QACvEpL,EAAA,CAAM,QACLoL,EAAM,SAAW,YAAc,UAC/BA,EAAM,SAAW,UAAY,YAC7BA,EAAM,SAAW,YAAc,UAAY,cAE1C,WAAM,MAAA,CACT,CAAA,CAAA,CACF,CAAA,EACF,EACA/T,EAAAA,IAAC,MAAA,CAAI,UAAU,YACZ,SAAA+T,EAAM,WAAW,IAAK1N,GACrBjF,EAAAA,KAAC,MAAA,CAAkB,UAAU,+BAC3B,SAAA,CAAAA,OAAC,OAAA,CAAM,SAAA,CAAAiF,EAAK,QAAQ,KAAK,MAAIA,EAAK,QAAA,EAAS,SAC1C,OAAA,CAAK,SAAA,CAAA,IAAE,WAAWA,EAAK,KAAK,EAAE,eAAA,CAAe,CAAA,CAAE,CAAA,GAFxCA,EAAK,EAGf,CACD,CAAA,CACH,CAAA,CAAA,EA1BQ0N,EAAM,EA2BhB,EACD,CACH,CAAA,CAEJ,CAAA,CAAA,CACF,CAAA,CACF,QAGC/G,GAAA,CAAY,MAAM,UAAU,UAAU,YACrC,gBAAC7J,EAAA,CACC,SAAA,CAAAnD,MAACoD,GAAA,CACC,SAAApD,EAAAA,IAACqD,GAAA,CAAU,SAAA,gBAAA,CAAc,EAC3B,EACArD,MAACuD,EAAA,CACC,SAAAvD,EAAAA,IAACqO,GAAA,CAAM,GAAG4E,EACR,SAAA7R,EAAAA,KAAC,OAAA,CAAK,SAAU6R,EAAW,aAAaQ,CAAc,EAAG,UAAU,YACjE,SAAA,CAAAzT,EAAAA,IAACyO,EAAA,CACC,QAASwE,EAAW,QACpB,KAAK,eACL,OAAQ,CAAC,CAAE,MAAAuB,CAAA,WACRpF,EAAA,CACC,SAAA,CAAApP,EAAAA,IAACsP,GAAU,SAAA,eAAA,CAAa,QACvBE,EAAA,CACC,SAAAxP,EAAAA,IAAC8J,EAAA,CAAO,GAAG0K,EAAO,EACpB,QACC5E,EAAA,CAAA,CAAY,CAAA,CAAA,CACf,CAAA,CAAA,EAIJ5P,EAAAA,IAACyO,EAAA,CACC,QAASwE,EAAW,QACpB,KAAK,cACL,OAAQ,CAAC,CAAE,MAAAuB,CAAA,WACRpF,EAAA,CACC,SAAA,CAAApP,EAAAA,IAACsP,GAAU,SAAA,sBAAA,CAAoB,QAC9BE,EAAA,CACC,SAAAxP,EAAAA,IAACyM,GAAA,CAAU,GAAG+H,EAAO,EACvB,QACC5E,EAAA,CAAA,CAAY,CAAA,CAAA,CACf,CAAA,CAAA,EAIJ5P,EAAAA,IAACyO,EAAA,CACC,QAASwE,EAAW,QACpB,KAAK,kBACL,OAAQ,CAAC,CAAE,MAAAuB,CAAA,WACRpF,EAAA,CACC,SAAA,CAAApP,EAAAA,IAACsP,GAAU,SAAA,kBAAA,CAAgB,QACAE,EAAA,CACzB,SAAAxP,EAAAA,IAACyM,GAAA,CAAU,GAAG+H,EAAO,EACvB,QACC5E,EAAA,CAAA,CAAY,CAAA,CAAA,CACf,CAAA,CAAA,EAIJxO,EAAAA,KAAC,MAAA,CAAI,UAAU,wCACb,SAAA,CAAApB,EAAAA,IAACyO,EAAA,CACC,QAASwE,EAAW,QACpB,KAAK,gBACL,OAAQ,CAAC,CAAE,MAAAuB,CAAA,WACRpF,EAAA,CACC,SAAA,CAAApP,EAAAA,IAACsP,GAAU,SAAA,gBAAA,CAAc,QACxBE,EAAA,CACC,SAAAxP,EAAAA,IAAC8J,EAAA,CAAO,GAAG0K,EAAO,EACpB,QACC5E,EAAA,CAAA,CAAY,CAAA,CAAA,CACf,CAAA,CAAA,EAIJ5P,EAAAA,IAACyO,EAAA,CACC,QAASwE,EAAW,QACI,KAAK,YAC7B,OAAQ,CAAC,CAAE,MAAAuB,CAAA,WACRpF,EAAA,CACC,SAAA,CAAApP,EAAAA,IAACsP,GAAU,SAAA,YAAA,CAAU,QACpBE,EAAA,CACC,SAAAxP,EAAAA,IAAC8J,EAAA,CAAO,GAAG0K,EAAO,EACpB,QACC5E,EAAA,CAAA,CAAY,CAAA,CAAA,CACf,CAAA,CAAA,CAEJ,EACF,EAEAxO,EAAAA,KAAC,MAAA,CAAI,UAAU,wCACb,SAAA,CAAApB,EAAAA,IAACyO,EAAA,CACC,QAASwE,EAAW,QACpB,KAAK,oBACL,OAAQ,CAAC,CAAE,MAAAuB,CAAA,WACRpF,EAAA,CACC,SAAA,CAAApP,EAAAA,IAACsP,GAAU,SAAA,qBAAA,CAAmB,EAC9BtP,EAAAA,IAACwP,GACC,SAAAxP,MAAC8J,EAAA,CAAO,GAAG0K,EAAO,KAAK,WAAW,CAAA,CACpC,QACC5E,EAAA,CAAA,CAAY,CAAA,CAAA,CACf,CAAA,CAAA,EAIJ5P,EAAAA,IAACyO,EAAA,CACC,QAASwE,EAAW,QACpB,KAAK,WACL,OAAQ,CAAC,CAAE,MAAAuB,CAAA,WACRpF,EAAA,CACC,SAAA,CAAApP,EAAAA,IAACsP,GAAU,SAAA,WAAA,CAAS,QACnBE,EAAA,CACC,SAAAxP,EAAAA,IAAC8J,EAAA,CAAO,GAAG0K,EAAO,EACpB,QACC5E,EAAA,CAAA,CAAY,CAAA,CAAA,CACf,CAAA,CAAA,CAEJ,EACF,EAEA5P,EAAAA,IAAC8C,EAAA,CAAO,KAAK,SAAS,SAAUsQ,EAAe,UAC5C,SAAAA,EAAe,UAAY,cAAgB,gBAAA,CAC9C,CAAA,CAAA,CACF,EACF,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,EACF,EAnkBEhS,EAAAA,KAAC,MAAA,CAAI,UAAU,6BACb,SAAA,CAAApB,EAAAA,IAACoI,GAAA,EAAO,EACRhH,EAAAA,KAAC,MAAA,CAAI,UAAU,2DACb,SAAA,CAAApB,EAAAA,IAAC,MAAA,CAAI,UAAU,gBAAgB,SAAA,KAAE,EACjCA,EAAAA,IAAC,KAAA,CAAG,UAAU,0BAA0B,SAAA,2BAAwB,EAChEA,EAAAA,IAAC,IAAA,CAAE,UAAU,6BAA6B,SAAA,4DAE1C,EACAA,MAAC8C,GAAO,QAAS,IAAM,OAAO,SAAS,KAAO,IAAK,SAAA,cAAA,CAEnD,CAAA,CAAA,CACF,CAAA,EACF,CAyjBN,CC30BA,SAAwB6R,IAAkB,CACxC,KAAM,CAAE,QAAAlS,CAAA,EAAYC,GAAA,EACd,CAACkS,EAAaC,CAAc,EAAI7S,EAAAA,SAAS,EAAK,EAEpD,OACEZ,EAAAA,KAAC,MAAA,CAAI,UAAU,0BAEb,SAAA,CAAApB,EAAAA,IAAC,MAAA,CAAI,UAAU,8CACb,SAAAA,EAAAA,IAAC,MAAA,CAAI,UAAU,yCACb,SAAAoB,OAAC,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAApB,MAACmI,GAAK,KAAK,IACT,SAAAnI,EAAAA,IAAC8C,EAAA,CAAO,QAAQ,QAAQ,KAAK,KAAK,UAAU,oCAC1C,SAAA9C,MAAC8U,GAAA,CAAU,UAAU,SAAA,CAAU,EACjC,EACF,EACA9U,EAAAA,IAAC,OAAI,UAAU,mEACb,eAAC6D,GAAA,CAAM,UAAU,6BAA6B,CAAA,CAChD,EACA7D,EAAAA,IAAC,OAAA,CAAK,UAAU,8BAA8B,SAAA,oBAAA,CAAkB,CAAA,EAClE,EACAA,EAAAA,IAAC,SAAA,CACC,QAASyC,EACT,UAAU,8DACX,SAAA,UAAA,CAAA,CAED,CAAA,CACF,EACF,EACF,EAEArB,EAAAA,KAAC,OAAA,CAAK,UAAU,+CACd,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,oBACb,SAAA,CAAApB,EAAAA,IAAC,OAAI,UAAU,oFACb,eAAC+U,GAAA,CAAO,UAAU,kCAAkC,CAAA,CACtD,EACA/U,EAAAA,IAAC,KAAA,CAAG,UAAU,wCAAwC,SAAA,kBAAe,EACrEA,EAAAA,IAAC,IAAA,CAAE,UAAU,6BAA6B,SAAA,6FAA0F,EAEpIoB,EAAAA,KAAC0B,EAAA,CACC,QAAS,IAAM+R,EAAe,EAAI,EAClC,UAAU,yMAEV,SAAA,CAAA7U,EAAAA,IAAC6D,GAAA,CAAM,UAAU,cAAA,CAAe,EAAE,YAAA,CAAA,CAAA,CAEpC,EACF,EAGAzC,EAAAA,KAAC,MAAA,CAAI,UAAU,4BACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,2DACb,SAAA,CAAApB,EAAAA,IAAC,OAAI,UAAU,0EACb,eAACgV,GAAA,CAAQ,UAAU,yBAAyB,CAAA,CAC9C,EACAhV,EAAAA,IAAC,KAAA,CAAG,UAAU,mCAAmC,SAAA,iBAAc,EAC/DA,EAAAA,IAAC,IAAA,CAAE,UAAU,wBAAwB,SAAA,4CAAA,CAA0C,CAAA,EACjF,EAEAoB,EAAAA,KAAC,MAAA,CAAI,UAAU,2DACb,SAAA,CAAApB,EAAAA,IAAC,OAAI,UAAU,yEACb,eAACiV,GAAA,CAAI,UAAU,wBAAwB,CAAA,CACzC,EACAjV,EAAAA,IAAC,KAAA,CAAG,UAAU,mCAAmC,SAAA,aAAU,EAC3DA,EAAAA,IAAC,IAAA,CAAE,UAAU,wBAAwB,SAAA,uCAAA,CAAqC,CAAA,EAC5E,EAEAoB,EAAAA,KAAC,MAAA,CAAI,UAAU,2DACb,SAAA,CAAApB,EAAAA,IAAC,OAAI,UAAU,2EACb,eAACkV,GAAA,CAAW,UAAU,0BAA0B,CAAA,CAClD,EACAlV,EAAAA,IAAC,KAAA,CAAG,UAAU,mCAAmC,SAAA,eAAY,EAC7DA,EAAAA,IAAC,IAAA,CAAE,UAAU,wBAAwB,SAAA,4CAAA,CAA0C,CAAA,EACjF,EAEAoB,EAAAA,KAAC,MAAA,CAAI,UAAU,2DACb,SAAA,CAAApB,EAAAA,IAAC,OAAI,UAAU,wEACb,eAACmV,GAAA,CAAM,UAAU,uBAAuB,CAAA,CAC1C,EACAnV,EAAAA,IAAC,KAAA,CAAG,UAAU,mCAAmC,SAAA,eAAY,EAC7DA,EAAAA,IAAC,IAAA,CAAE,UAAU,wBAAwB,SAAA,wCAAA,CAAsC,CAAA,CAAA,CAC7E,CAAA,CAAA,CACF,CAAA,EACF,EAEAA,EAAAA,IAAC,uBAAA,CACC,OAAQ4U,EACR,QAAS,IAAMC,EAAe,EAAK,CAAA,CAAA,CACrC,EACF,CAEJ,CC9FA,SAAwBO,IAAW,CACjC,OACEpV,EAAAA,IAAC,MAAA,CAAI,UAAU,kEACb,SAAAA,EAAAA,IAACmD,EAAA,CAAK,UAAU,uBACd,SAAA/B,EAAAA,KAACmC,EAAA,CAAY,UAAU,OACrB,SAAA,CAAAnC,EAAAA,KAAC,MAAA,CAAI,UAAU,kBACb,SAAA,CAAApB,EAAAA,IAACqV,GAAA,CAAY,UAAU,sBAAA,CAAuB,EAC9CrV,EAAAA,IAAC,KAAA,CAAG,UAAU,mCAAmC,SAAA,oBAAA,CAAkB,CAAA,EACrE,EAEAA,EAAAA,IAAC,IAAA,CAAE,UAAU,6BAA6B,SAAA,+CAAA,CAE1C,CAAA,CAAA,CACF,EACF,EACF,CAEJ,CCRA,SAASsV,GAAe,CAAE,SAAAzT,GAA2C,CACnE,KAAM,CAAE,aAAAC,EAAc,QAAAK,CAAA,EAAYO,GAAA,EAElC,OAAIP,EAEAnC,MAAC,OAAI,UAAU,gDACb,eAAC,MAAA,CAAI,UAAU,+DAA+D,CAAA,CAChF,EAIC8B,oBAIK,SAAAD,EAAS,EAHV7B,EAAAA,IAACuV,GAAA,CAAS,GAAG,OAAA,CAAQ,CAIhC,CAEA,SAASC,GAAqB,CAAE,SAAA3T,GAA2C,CACzE,KAAM,CAAE,KAAAI,EAAM,QAAAE,CAAA,EAAYO,GAAA,EAE1B,OAAIP,EAEAnC,MAAC,OAAI,UAAU,gDACb,eAAC,MAAA,CAAI,UAAU,+DAA+D,CAAA,CAChF,EAICiC,GAAA,MAAAA,EAAM,mCAID,SAAAJ,EAAS,EAHV7B,EAAAA,IAACuV,GAAA,CAAS,GAAG,eAAA,CAAgB,CAIxC,CAEA,SAASE,IAAS,CAChB,KAAM,CAAE,aAAA3T,EAAc,QAAAK,CAAA,EAAYO,GAAA,EAElC,OAAIP,EAEAnC,MAAC,OAAI,UAAU,gDACb,eAAC,MAAA,CAAI,UAAU,+DAA+D,CAAA,CAChF,SAKD0V,GAAA,CACC,SAAA,CAAA1V,EAAAA,IAAC2V,GAAA,CAAM,KAAK,QACT,SAAA7T,EAAe9B,EAAAA,IAACuV,GAAA,CAAS,GAAG,IAAI,EAAKvV,EAAAA,IAACyD,GAAA,CAAA,CAAS,EAClD,EAEAzD,EAAAA,IAAC2V,IAAM,KAAK,IACV,eAACL,GAAA,CACC,SAAAtV,EAAAA,IAAC4V,GAAA,CAAA,CAAS,CAAA,CACZ,CAAA,CACF,EAEA5V,MAAC2V,GAAA,CAAM,KAAK,oBACV,SAAA3V,EAAAA,IAACsV,GAAA,CACC,SAAAtV,EAAAA,IAACwV,GAAA,CACC,SAAAxV,MAACkS,GAAA,CAAA,CAAgB,CAAA,CACnB,CAAA,CACF,EACF,EAEAlS,EAAAA,IAAC2V,IAAM,KAAK,gBACV,eAACL,GAAA,CACC,SAAAtV,EAAAA,IAAC2U,GAAA,CAAA,CAAgB,CAAA,CACnB,CAAA,CACF,EAEA3U,EAAAA,IAAC2V,GAAA,CAAM,UAAWP,EAAA,CAAU,CAAA,EAC9B,CAEJ,CAEA,SAASS,IAAM,CACb,aACGC,GAAA,CAAoB,OAAQjZ,GAC3B,SAAAmD,MAACqB,GAAA,CACC,gBAACO,GAAA,CACC,SAAA,CAAA5B,EAAAA,IAACgB,GAAA,EAAQ,QACRyU,GAAA,CAAA,CAAO,CAAA,CAAA,CACV,EACF,EACF,CAEJ,CClGAM,GAAW,SAAS,eAAe,MAAM,CAAE,EAAE,OAAO/V,EAAAA,IAAC6V,KAAI,CAAE"}