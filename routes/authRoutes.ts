// routes/authRoutes.ts

import express from "express";
import { verifyAndDecodeToken } from "../server/util/authUtils"; // ‡§®‡§à ‡§Ø‡•Ç‡§ü‡§ø‡§≤‡§ø‡§ü‡•Ä ‡§´‡§º‡§æ‡§á‡§≤ ‡§á‡§Æ‡•ç‡§™‡•ã‡§∞‡•ç‡§ü ‡§ï‡§∞‡•á‡§Ç

const router = express.Router();

/**
 * üîê GET /api/auth/me
 * Verifies Firebase ID token from Authorization header
 * and returns basic user info.
 */
router.get("/api/auth/me", async (req, res) => {
  const authHeader = req.headers.authorization;

  if (!authHeader?.startsWith("Bearer ")) {
    return res.status(401).json({ message: "Missing or invalid token format" });
  }

  const idToken = authHeader.split(" ")[1];

  try {
    const userInfo = await verifyAndDecodeToken(idToken); // ‡§Ø‡•Ç‡§ü‡§ø‡§≤‡§ø‡§ü‡•Ä ‡§´‡§º‡§Ç‡§ï‡•ç‡§∂‡§® ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç

    return res.status(200).json({
      uid: userInfo.uid,
      email: userInfo.email,
      name: userInfo.name,
    });
  } catch (error) {
    console.error("‚ùå Token verification failed:", error);
    return res.status(401).json({ message: "Invalid or expired token" });
  }
});

export default router;
