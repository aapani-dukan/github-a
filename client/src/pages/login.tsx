// client/src/pages/login.tsx (‡§∏‡§Ç‡§∂‡•ã‡§ß‡§ø‡§§)

import { useEffect } from "react";
import { getAuth, GoogleAuthProvider, signInWithRedirect, getRedirectResult } from "firebase/auth";
import { app } from "@/lib/firebase";
import { Button } from "@/components/ui/button";
// import { useLocation } from "wouter"; // useLocation ‡§ï‡•Ä ‡§Ö‡§¨ ‡§Ø‡§π‡§æ‡§Å ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï‡§§‡§æ ‡§®‡§π‡•Ä‡§Ç ‡§π‡•à

export default function Login() {
  const auth = getAuth(app);
  // const [, setLocation] = useLocation(); // ‡§Ö‡§¨ ‡§á‡§∏‡§ï‡•Ä ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï‡§§‡§æ ‡§®‡§π‡•Ä‡§Ç ‡§π‡•à

  useEffect(() => {
    // getRedirectResult ‡§ï‡•ã ‡§∏‡§ø‡§∞‡•ç‡§´ ‡§Ø‡§π ‡§ö‡•á‡§ï ‡§ï‡§∞‡§®‡•á ‡§¶‡•á‡§Ç ‡§ï‡§ø ‡§≤‡•â‡§ó‡§ø‡§® ‡§∏‡§´‡§≤ ‡§π‡•Å‡§Ü ‡§π‡•à ‡§Ø‡§æ ‡§®‡§π‡•Ä‡§Ç,
    // ‡§∞‡•Ä‡§°‡§æ‡§Ø‡§∞‡•á‡§ï‡•ç‡§∂‡§® ‡§Ö‡§¨ AuthRedirectGuard ‡§¶‡•ç‡§µ‡§æ‡§∞‡§æ ‡§∏‡§Ç‡§≠‡§æ‡§≤‡§æ ‡§ú‡§æ‡§è‡§ó‡§æ.
    // user.role ‡§Ø‡§æ sessionStorage.loginRole ‡§ï‡•á ‡§Ü‡§ß‡§æ‡§∞ ‡§™‡§∞ ‡§Ø‡§π‡§æ‡§Å ‡§ï‡•ã‡§à ‡§∏‡•á‡§üLocation ‡§®‡§π‡•Ä‡§Ç ‡§π‡•ã‡§ó‡§æ‡•§
    getRedirectResult(auth)
      .then((result) => {
        if (result?.user) {
          console.log("üü¢ Google login successful via redirect. AuthGuard will handle redirection.");
        } else {
          // ‡§Ö‡§ó‡§∞ ‡§Ø‡•Ç‡§ú‡§∞ ‡§∏‡•Ä‡§ß‡•á /login ‡§™‡§∞ ‡§Ü‡§Ø‡§æ ‡§π‡•à ‡§î‡§∞ ‡§™‡§π‡§≤‡•á ‡§∏‡•á ‡§≤‡•â‡§ó ‡§á‡§® ‡§π‡•à, ‡§§‡•ã AuthGuard ‡§â‡§∏‡•á ‡§∏‡§π‡•Ä ‡§ú‡§ó‡§π ‡§≠‡•á‡§ú‡•á‡§ó‡§æ‡•§
          // ‡§Ø‡§π‡§æ‡§Å ‡§ï‡•ã‡§à ‡§°‡§æ‡§Ø‡§∞‡•á‡§ï‡•ç‡§ü ‡§∞‡•Ä‡§°‡§æ‡§Ø‡§∞‡•á‡§ï‡•ç‡§ü ‡§®‡§π‡•Ä‡§Ç‡•§
        }
      })
      .catch((error) => {
        console.error("üî¥ Error during Google sign-in redirect result:", error);
        // ‡§è‡§∞‡§∞ ‡§π‡•ã‡§®‡•á ‡§™‡§∞ ‡§≠‡•Ä, AuthGuard ‡§Ø‡•Ç‡§ú‡§∞ ‡§ï‡•á ‡§ë‡§•‡•á‡§Ç‡§ü‡§ø‡§ï‡•á‡§∂‡§® ‡§∏‡•ç‡§ü‡•á‡§ü‡§∏ ‡§ï‡•á ‡§Ü‡§ß‡§æ‡§∞ ‡§™‡§∞ ‡§∏‡§Ç‡§≠‡§æ‡§≤‡•á‡§ó‡§æ‡•§
      });

    // onAuthStateChanged ‡§≤‡§ø‡§∏‡§®‡§∞ ‡§ï‡•Ä ‡§≠‡•Ä ‡§Ö‡§¨ ‡§Ø‡§π‡§æ‡§Å ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï‡§§‡§æ ‡§®‡§π‡•Ä‡§Ç ‡§π‡•à,
    // ‡§ï‡•ç‡§Ø‡•ã‡§Ç‡§ï‡§ø AuthGuard ‡§î‡§∞ useAuth hook ‡§á‡§∏‡•á ‡§∏‡§Ç‡§≠‡§æ‡§≤ ‡§∞‡§π‡•á ‡§π‡•à‡§Ç‡•§
    return () => {};
  }, [auth]);

  const handleLogin = () => {
    const provider = new GoogleAuthProvider();
    sessionStorage.removeItem("loginRole"); // ‡§∏‡•Å‡§®‡§ø‡§∂‡•ç‡§ö‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç ‡§ï‡§ø ‡§ï‡•ã‡§à ‡§™‡•Å‡§∞‡§æ‡§®‡§æ ‡§´‡•ç‡§≤‡•à‡§ó ‡§® ‡§π‡•ã
    signInWithRedirect(auth, provider);
  };

  return (
    <div className="min-h-screen flex items-center justify-center bg-gray-100 px-4">
      <div className="bg-white p-8 rounded-2xl shadow-md w-full max-w-sm text-center space-y-6">
        <h1 className="text-2xl font-bold text-gray-800">Welcome to Shopnish</h1>
        <p className="text-gray-600">Please login with Google to continue</p>

        <Button onClick={handleLogin}>
          Continue with Google
        </Button>
      </div>
    </div>
  );
}
