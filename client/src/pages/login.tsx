// client/src/pages/login.tsx

import { useEffect } from "react";
import { getAuth, GoogleAuthProvider, signInWithRedirect, getRedirectResult } from "firebase/auth";
import { app } from "@/lib/firebase";
import { Button } from "@/components/ui/button";
import { useLocation } from "wouter";

export default function Login() {
  const auth = getAuth(app);
  const [, setLocation] = useLocation();

  useEffect(() => {
    const handleLoginRedirect = async () => {
      try {
        const result = await getRedirectResult(auth);

        if (result) {
          // рдпреВрдЬрд░ рдиреЗ Google рд╕реЗ рд╕рдлрд▓рддрд╛рдкреВрд░реНрд╡рдХ рд▓реЙрдЧрд┐рди рдХрд┐рдпрд╛ рд╣реИ
          console.log("ЁЯЯв Google login successful via redirect:", result.user);

          // sessionStorage рд╕реЗ loginRole рдлреНрд▓реИрдЧ рдХреА рдЬрд╛рдВрдЪ рдХрд░реЗрдВ
          const loginRole = sessionStorage.getItem("loginRole");
          sessionStorage.removeItem("loginRole"); // рдлреНрд▓реИрдЧ рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░рдиреЗ рдХреЗ рдмрд╛рдж рд╣рдЯрд╛ рджреЗрдВ

          if (loginRole === "seller") {
            console.log("Redirecting to /register-seller based on loginRole.");
            setLocation("/register-seller");
          } else {
            console.log("Redirecting to / (Home) as no specific role was set or it was not 'seller'.");
            setLocation("/");
          }
        } else {
          // рдЕрдЧрд░ рдХреЛрдИ рд░реАрдбрд╛рдпрд░реЗрдХреНрдЯ рд░рд┐рдЬрд▓реНрдЯ рдирд╣реАрдВ рд╣реИ, рддреЛ рдпреВрдЬрд░ рд╢рд╛рдпрдж рд╕реАрдзреЗ /login рдкрд░ рдЖрдпрд╛ рд╣реИ,
          // рдпрд╛ рдкрд╣рд▓реЗ рд╕реЗ рд╣реА рд▓реЙрдЧ рдЗрди рд╣реИ (рдЗрд╕ рдХреЗрд╕ рдореЗрдВ onAuthStateChanged рдЪрд▓реЗрдЧрд╛).
          // рдЕрдЧрд░ рд╡реЗ рдкрд╣рд▓реЗ рд╕реЗ рд▓реЙрдЧ рдЗрди рд╣реИрдВ рдФрд░ /login рдкрд░ рд╣реИрдВ, рддреЛ рдЙрдиреНрд╣реЗрдВ рд╣реЛрдо рдкрд░ рднреЗрдЬреЗрдВред
          if (auth.currentUser && window.location.pathname === "/login") {
            console.log("User already logged in and on /login page. Redirecting to /.");
            setLocation("/");
          }
        }
      } catch (error) {
        console.error("ЁЯФ┤ Error during Google sign-in redirect result:", error);
        // рдПрд░рд░ рд╣реЛрдиреЗ рдкрд░ рднреА рдпреВрдЬрд░ рдХреЛ рд╣реЛрдо рдкрд░ рднреЗрдЬ рджреЗрдВ
        setLocation("/");
      }
    };

    handleLoginRedirect();

    // onAuthStateChanged рд▓рд┐рд╕рдирд░ рдХреЛ рд╣рдЯрд╛ рджреЗрдВ рддрд╛рдХрд┐ рдпрд╣ getRedirectResult рдХреЗ рд╕рд╛рде рдХреЙрдиреНрдлреНрд▓рд┐рдХреНрдЯ рди рдХрд░реЗ,
    // рдХреНрдпреЛрдВрдХрд┐ getRedirectResult рд╣реА рд░реАрдбрд╛рдпрд░реЗрдХреНрдЯ рд▓реЙрдЬрд┐рдХ рдХреЛ рдкреВрд░реА рддрд░рд╣ рд╕реЗ рд╕рдВрднрд╛рд▓ рд░рд╣рд╛ рд╣реИ.
    // рдЖрдкрдХреЛ рдХреЗрд╡рд▓ рдпрд╣ рд╕реБрдирд┐рд╢реНрдЪрд┐рдд рдХрд░рдиреЗ рдХреА рдЖрд╡рд╢реНрдпрдХрддрд╛ рд╣реИ рдХрд┐ `useAuth` рд╣реБрдХ рд╕рд╣реА рдврдВрдЧ рд╕реЗ
    // user.role рдХреЛ рдЕрдкрдбреЗрдЯ рдХрд░ рд░рд╣рд╛ рд╣реИ рдЬрдм Firebase claims рдмрджрд▓рддреЗ рд╣реИрдВред
    return () => {}; // рдХреЛрдИ cleanup рдирд╣реАрдВ рдХреНрдпреЛрдВрдХрд┐ рд╣рдордиреЗ рд▓рд┐рд╕рдирд░ рд╣рдЯрд╛рдпрд╛ рд╣реИ
  }, [auth, setLocation]);

  const handleLogin = () => {
    const provider = new GoogleAuthProvider();
    // рдЗрд╕ `handleLogin` рдХреЛ рд╕реАрдзреЗ Header рдХреЙрдореНрдкреЛрдиреЗрдВрдЯ рдореЗрдВ `startGoogleLogin` рджреНрд╡рд╛рд░рд╛ рдХреЙрд▓ рдХрд┐рдпрд╛ рдЬрд╛рдирд╛ рдЪрд╛рд╣рд┐рдП,
    // рдЗрд╕рд▓рд┐рдП рдпрд╣рд╛рдБ sessionStorage.setItem("loginRole", "seller") рдХреА рдЖрд╡рд╢реНрдпрдХрддрд╛ рдирд╣реАрдВ рд╣реИ
    // рдЬрдм рддрдХ рдЖрдк рдЗрд╕реЗ рд╕рд╛рдорд╛рдиреНрдп "Continue with Google" рдмрдЯрди рдХреЗ рд░реВрдк рдореЗрдВ рдЙрдкрдпреЛрдЧ рди рдХрд░реЗрдВ
    // рдЬреЛ рд╕реЗрд▓рд░ рдлреНрд▓реЛ рд╢реБрд░реВ рдирд╣реАрдВ рдХрд░рддрд╛ рд╣реИред
    sessionStorage.removeItem("loginRole"); // рд╕реБрдирд┐рд╢реНрдЪрд┐рдд рдХрд░реЗрдВ рдХрд┐ рдХреЛрдИ рдкреБрд░рд╛рдирд╛ рдлреНрд▓реИрдЧ рди рд╣реЛ
    signInWithRedirect(auth, provider);
  };

  return (
    <div className="min-h-screen flex items-center justify-center bg-gray-100 px-4">
      <div className="bg-white p-8 rounded-2xl shadow-md w-full max-w-sm text-center space-y-6">
        <h1 className="text-2xl font-bold text-gray-800">Welcome to Shopnish</h1>
        <p className="text-gray-600">Please login with Google to continue</p>

        <Button onClick={handleLogin}>
          Continue with Google
        </Button>
      </div>
    </div>
  );
}
