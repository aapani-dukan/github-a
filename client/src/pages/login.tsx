// client/src/pages/login.tsx

import { useEffect } from "react";
import { getAuth, GoogleAuthProvider, signInWithRedirect, getRedirectResult } from "firebase/auth";
import { app } from "@/lib/firebase"; // ‡§∏‡•Å‡§®‡§ø‡§∂‡•ç‡§ö‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç ‡§ï‡§ø Firebase ‡§ê‡§™ ‡§Ø‡§π‡§æ‡§Å ‡§∏‡§π‡•Ä ‡§∏‡•á ‡§á‡§Æ‡•ç‡§™‡•ã‡§∞‡•ç‡§ü ‡§π‡•Å‡§Ü ‡§π‡•à
import { Button } from "@/components/ui/button";

export default function Login() {
  const auth = getAuth(app);

  useEffect(() => {
    // Google ‡§∏‡•á ‡§∞‡•Ä‡§°‡§æ‡§Ø‡§∞‡•á‡§ï‡•ç‡§ü ‡§π‡•ã‡§®‡•á ‡§ï‡•á ‡§¨‡§æ‡§¶, ‡§Ø‡§π ‡§ï‡•ã‡§° ‡§ö‡§≤‡§§‡§æ ‡§π‡•à‡•§
    // ‡§π‡§Æ ‡§Ø‡§π‡§æ‡§Ç ‡§ï‡•ã‡§à ‡§°‡§æ‡§Ø‡§∞‡•á‡§ï‡•ç‡§ü ‡§®‡•á‡§µ‡§ø‡§ó‡•á‡§∂‡§® ‡§®‡§π‡•Ä‡§Ç ‡§ï‡§∞‡•á‡§Ç‡§ó‡•á, ‡§ï‡•ç‡§Ø‡•ã‡§Ç‡§ï‡§ø AuthRedirectGuard ‡§á‡§∏‡•á ‡§∏‡§Ç‡§≠‡§æ‡§≤‡•á‡§ó‡§æ‡•§
    const handleRedirectResult = async () => {
      try {
        const result = await getRedirectResult(auth);
        if (result?.user) {
          console.log("üü¢ login.tsx: Google login successful via redirect. User:", result.user.uid);
          // ‡§á‡§∏ ‡§¨‡§ø‡§Ç‡§¶‡•Å ‡§™‡§∞, AuthRedirectGuard ‡§è‡§ï‡•ç‡§ü‡§ø‡§µ‡•á‡§ü ‡§π‡•ã ‡§ú‡§æ‡§è‡§ó‡§æ ‡§î‡§∞ ‡§Ø‡•Ç‡§ú‡§∞ ‡§ï‡•ã ‡§∏‡§π‡•Ä ‡§™‡•á‡§ú ‡§™‡§∞ ‡§≠‡•á‡§ú ‡§¶‡•á‡§ó‡§æ‡•§
          // sessionStorage.loginRole ‡§ï‡•ã ‡§Ø‡§π‡•Ä‡§Ç ‡§π‡§ü‡§æ‡§®‡•á ‡§ï‡•Ä ‡§ú‡§∞‡•Ç‡§∞‡§§ ‡§®‡§π‡•Ä‡§Ç ‡§π‡•à, AuthRedirectGuard ‡§â‡§∏‡•á ‡§∏‡§Ç‡§≠‡§æ‡§≤‡•á‡§ó‡§æ‡•§
        } else {
          console.log("üü° login.tsx: No redirect result user found, or not a redirect flow.");
          // ‡§Ø‡§¶‡§ø ‡§Ø‡•Ç‡§ú‡§∞ ‡§∏‡•Ä‡§ß‡•á /login ‡§™‡§∞ ‡§Ü‡§Ø‡§æ ‡§π‡•à ‡§Ø‡§æ ‡§™‡§π‡§≤‡•á ‡§∏‡•á ‡§≤‡•â‡§ó ‡§á‡§® ‡§π‡•à, ‡§§‡•ã ‡§≠‡•Ä
          // AuthRedirectGuard ‡§â‡§∏‡•á ‡§â‡§∏‡§ï‡•Ä ‡§ë‡§•‡•á‡§Ç‡§ü‡§ø‡§ï‡•á‡§∂‡§® ‡§∏‡•ç‡§•‡§ø‡§§‡§ø ‡§ï‡•á ‡§Ü‡§ß‡§æ‡§∞ ‡§™‡§∞ ‡§∏‡§Ç‡§≠‡§æ‡§≤‡•á‡§ó‡§æ‡•§
        }
      } catch (error) {
        console.error("üî¥ login.tsx: Error during Google sign-in redirect result:", error);
        // ‡§è‡§∞‡§∞ ‡§π‡•ã‡§®‡•á ‡§™‡§∞ ‡§≠‡•Ä, AuthRedirectGuard ‡§Ø‡•Ç‡§ú‡§∞ ‡§ï‡•á ‡§ë‡§•‡•á‡§Ç‡§ü‡§ø‡§ï‡•á‡§∂‡§® ‡§∏‡•ç‡§ü‡•á‡§ü‡§∏ ‡§ï‡•á ‡§Ü‡§ß‡§æ‡§∞ ‡§™‡§∞ ‡§∏‡§Ç‡§≠‡§æ‡§≤‡•á‡§ó‡§æ‡•§
      }
    };

    handleRedirectResult();

    // ‡§ï‡•ã‡§à onAuthStateChanged ‡§≤‡§ø‡§∏‡§®‡§∞ ‡§Ø‡§π‡§æ‡§Å ‡§®‡§π‡•Ä‡§Ç ‡§ö‡§æ‡§π‡§ø‡§è, useAuth ‡§π‡•Å‡§ï ‡§á‡§∏‡•á ‡§∏‡§Ç‡§≠‡§æ‡§≤‡§§‡§æ ‡§π‡•à‡•§
    return () => {}; 
  }, [auth]);

  const handleLogin = () => {
    const provider = new GoogleAuthProvider();
    // ‡§Ø‡§¶‡§ø ‡§Ø‡§π ‡§∏‡§æ‡§Æ‡§æ‡§®‡•ç‡§Ø ‡§≤‡•â‡§ó‡§ø‡§® ‡§¨‡§ü‡§® ‡§π‡•à, ‡§§‡•ã loginRole ‡§®‡§π‡•Ä‡§Ç ‡§∏‡•á‡§ü ‡§ï‡§∞‡•á‡§Ç.
    // ‡§Ø‡§¶‡§ø "Become a Seller" ‡§¨‡§ü‡§® ‡§á‡§∏‡•á ‡§ï‡•â‡§≤ ‡§ï‡§∞ ‡§∞‡§π‡§æ ‡§π‡•à, ‡§§‡•ã ‡§â‡§∏‡§®‡•á ‡§™‡§π‡§≤‡•á ‡§π‡•Ä sessionStorage ‡§∏‡•á‡§ü ‡§ï‡§∞ ‡§¶‡§ø‡§Ø‡§æ ‡§π‡•ã‡§ó‡§æ.
    sessionStorage.removeItem("loginRole"); // ‡§∏‡•Å‡§®‡§ø‡§∂‡•ç‡§ö‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç ‡§ï‡§ø ‡§ï‡•ã‡§à ‡§™‡•Å‡§∞‡§æ‡§®‡§æ, ‡§Ö‡§µ‡§æ‡§Ç‡§õ‡§ø‡§§ ‡§´‡•ç‡§≤‡•à‡§ó ‡§® ‡§π‡•ã.
    console.log("üîµ login.tsx: Initiating Google sign-in redirect.");
    signInWithRedirect(auth, provider);
  };

  return (
    <div className="min-h-screen flex items-center justify-center bg-gray-100 px-4">
      <div className="bg-white p-8 rounded-2xl shadow-md w-full max-w-sm text-center space-y-6">
        <h1 className="text-2xl font-bold text-gray-800">Welcome to Shopnish</h1>
        <p className="text-gray-600">Please login with Google to continue</p>

        <Button onClick={handleLogin}>
          Continue with Google
        </Button>
      </div>
    </div>
  );
}
