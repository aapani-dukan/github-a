// Header.tsx
import React from "react";
import { useCartStore } from "@/lib/store";
import CartModal from "./cart-modal";
import { Link, useLocation } from "wouter";
import { initiateGoogleSignInRedirect } from "@/lib/firebase"; // initiateGoogleSignInRedirect ‡§á‡§Æ‡•ç‡§™‡•ã‡§∞‡•ç‡§ü ‡§ï‡§∞‡•á‡§Ç
import { useAuth } from "@/hooks/useAuth"; // useAuth ‡§á‡§Æ‡•ç‡§™‡•ã‡§∞‡•ç‡§ü ‡§ï‡§∞‡•á‡§Ç

interface Category {
  id: string;
  name: string;
}

interface HeaderProps {
  categories: Category[];
}

const Header: React.FC<HeaderProps> = ({ categories }) => {
  const { items, isCartOpen, toggleCart } = useCartStore();
  const [, navigate] = useLocation();
  // ‚úÖ isAuthenticated ‡§î‡§∞ isLoadingAuth ‡§ï‡•ã ‡§≠‡•Ä useAuth ‡§∏‡•á ‡§™‡•ç‡§∞‡§æ‡§™‡•ç‡§§ ‡§ï‡§∞‡•á‡§Ç
  const { user, isAuthenticated, isLoadingAuth } = useAuth(); 

  // 'Become a Seller' ‡§¨‡§ü‡§® ‡§ï‡•á ‡§≤‡§ø‡§è ‡§π‡•à‡§Ç‡§°‡§≤‡§∞
  const handleBecomeSeller = async () => {
    // ‡§™‡§π‡§≤‡•á ‡§ú‡§æ‡§Ç‡§ö‡•á‡§Ç ‡§ï‡§ø ‡§ë‡§•‡•á‡§Ç‡§ü‡§ø‡§ï‡•á‡§∂‡§® ‡§Ö‡§≠‡•Ä ‡§≤‡•ã‡§° ‡§π‡•ã ‡§∞‡§π‡§æ ‡§π‡•à ‡§Ø‡§æ ‡§®‡§π‡•Ä‡§Ç
    if (isLoadingAuth) {
      console.log("Auth is still loading, please wait.");
      // ‡§Ø‡•Ç‡§ú‡§∞ ‡§ï‡•ã ‡§è‡§ï ‡§ü‡•ã‡§∏‡•ç‡§ü ‡§Ø‡§æ ‡§ï‡•Å‡§õ UI ‡§´‡•Ä‡§°‡§¨‡•à‡§ï ‡§¶‡•á‡§Ç
      // ‡§Ü‡§™ ‡§Ø‡§π‡§æ‡§Ç ‡§è‡§ï ‡§≤‡•ã‡§°‡§ø‡§Ç‡§ó ‡§∏‡•ç‡§™‡§ø‡§®‡§∞ ‡§≠‡•Ä ‡§¶‡§ø‡§ñ‡§æ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç
      return; 
    }

    // ‚úÖ ‡§Ø‡§¶‡§ø ‡§Ø‡•Ç‡§ú‡§º‡§∞ ‡§≤‡•â‡§ó ‡§á‡§® ‡§®‡§π‡•Ä‡§Ç ‡§π‡•à (‡§Ø‡§æ‡§®‡•Ä isAuthenticated false ‡§π‡•à)
    if (!isAuthenticated) {
      console.log("User is not logged in, initiating Google Sign-In Redirect for seller application.");
      try {
        // Google Sign-in Redirect ‡§ö‡§æ‡§≤‡•Ç ‡§ï‡§∞‡•á‡§Ç
        // AuthRedirectGuard ‡§î‡§∞ useAuth ‡§ï‡§æ useEffect ‡§≤‡•â‡§ó‡§ø‡§® ‡§ï‡•á ‡§¨‡§æ‡§¶ ‡§¨‡§æ‡§ï‡•Ä ‡§ï‡§æ ‡§ï‡§æ‡§Æ ‡§∏‡§Ç‡§≠‡§æ‡§≤ ‡§≤‡•á‡§Ç‡§ó‡•á
        await initiateGoogleSignInRedirect(); 
        // ‡§á‡§∏ ‡§¨‡§ø‡§Ç‡§¶‡•Å ‡§™‡§∞, ‡§¨‡•ç‡§∞‡§æ‡§â‡§ú‡§º‡§∞ Google ‡§ï‡•á ‡§≤‡•â‡§ó‡§ø‡§® ‡§™‡•á‡§ú ‡§™‡§∞ ‡§∞‡•Ä‡§°‡§æ‡§Ø‡§∞‡•á‡§ï‡•ç‡§ü ‡§π‡•ã ‡§ú‡§æ‡§è‡§ó‡§æ‡•§
        // ‡§ú‡§¨ ‡§Ø‡•Ç‡§ú‡§∞ ‡§µ‡§æ‡§™‡§∏ ‡§Ü‡§è‡§ó‡§æ, ‡§§‡•ã onAuthStateChanged (useAuth ‡§Æ‡•á‡§Ç) ‡§î‡§∞ AuthRedirectGuard ‡§â‡§∏‡•á ‡§∏‡§π‡•Ä ‡§ú‡§ó‡§π ‡§≠‡•á‡§ú‡•á‡§Ç‡§ó‡•á‡•§
      } catch (error) {
        console.error("Error during Google Sign-In Redirect:", error);
        // ‡§§‡•ç‡§∞‡•Å‡§ü‡§ø ‡§π‡•à‡§Ç‡§°‡§≤‡§ø‡§Ç‡§ó, ‡§ú‡•à‡§∏‡•á ‡§ü‡•ã‡§∏‡•ç‡§ü ‡§¶‡§ø‡§ñ‡§æ‡§®‡§æ
      }
    } else {
      // ‚úÖ ‡§Ø‡§¶‡§ø ‡§Ø‡•Ç‡§ú‡§º‡§∞ ‡§™‡§π‡§≤‡•á ‡§∏‡•á ‡§≤‡•â‡§ó ‡§á‡§® ‡§π‡•à (isAuthenticated true ‡§π‡•à)
      console.log("User is already logged in, navigating to seller application.");
      // ‡§Ö‡§¨ ‡§∏‡•Ä‡§ß‡•á /seller-apply ‡§™‡§∞ ‡§≠‡•á‡§ú‡•á‡§Ç, AuthRedirectGuard ‡§≠‡•Ç‡§Æ‡§ø‡§ï‡§æ ‡§ï‡•á ‡§Ü‡§ß‡§æ‡§∞ ‡§™‡§∞ ‡§Ö‡§Ç‡§§‡§ø‡§Æ ‡§®‡§ø‡§∞‡•ç‡§£‡§Ø ‡§≤‡•á‡§ó‡§æ
      navigate("/seller-apply?intent=become-seller"); 
    }
  };

  return (
    <header className="bg-white shadow-md px-4 py-3 flex items-center justify-between">
      <Link href="/" className="text-xl font-bold text-blue-600">
        Shopnish
      </Link>

      <nav className="space-x-4">
        {categories.map((category) => (
          <Link
            key={category.id}
            href={`/category/${category.id}`}
            className="text-gray-700 hover:text-blue-600"
          >
            {category.name}
          </Link>
        ))}
      </nav>

      <div className="flex items-center space-x-4">
        <button
          onClick={toggleCart}
          className="relative text-gray-700 hover:text-blue-600"
        >
          üõí
          {items.length > 0 && (
            <span className="absolute -top-2 -right-2 bg-red-500 text-white rounded-full w-5 h-5 text-xs flex items-center justify-center">
              {items.length}
            </span>
          )}
        </button>

        {/* Updated: Become a Seller Button */}
        <button
          onClick={handleBecomeSeller}
          className="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700"
          // ‡§Ü‡§™ ‡§Ø‡§π‡§æ‡§Ç ‡§¨‡§ü‡§® ‡§ï‡•ã isLoadingAuth ‡§ï‡•á ‡§¶‡•å‡§∞‡§æ‡§® ‡§°‡§ø‡§∏‡•á‡§¨‡§≤ ‡§≠‡•Ä ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç
          disabled={isLoadingAuth} 
        >
          {isLoadingAuth ? "Loading Auth..." : "Become a Seller"}
        </button>
      </div>

      <CartModal isOpen={isCartOpen} onClose={toggleCart} />
    </header>
  );
};

export default Header;
