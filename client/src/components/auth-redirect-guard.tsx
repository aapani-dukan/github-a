// src/guards/AuthRedirectGuard.tsx

import { useEffect } from "react";
import { useAuth } from "@/hooks/useAuth";
import { useLocation } from "wouter";

/**
 * Centralized route-guard
 * - Allows access to public pages without login
 * - Redirects to appropriate dashboard based on user role
 */
export function AuthRedirectGuard() {
  const [location, navigate] = useLocation();
  const { user, loading } = useAuth();

  useEffect(() => {
    if (loading) return;

    // üîì ‡§™‡§¨‡•ç‡§≤‡§ø‡§ï ‡§™‡§æ‡§•‡•ç‡§∏ ‡§ú‡§ø‡§®‡•ç‡§π‡•á‡§Ç ‡§≤‡•â‡§ó‡§ø‡§® ‡§ï‡•Ä ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï‡§§‡§æ ‡§®‡§π‡•Ä‡§Ç ‡§π‡•à
    const publicPaths = [
      "/",
      "/product", // /product/:id
      "/cart",
      "/checkout",
      "/auth",
      "/login"
    ];

    const isPublic = publicPaths.some((path) => location.startsWith(path));
    if (isPublic) return;

    // ‚ùå ‡§Ø‡•Ç‡§ú‡§º‡§∞ ‡§≤‡•â‡§ó ‡§á‡§® ‡§®‡§π‡•Ä‡§Ç ‡§π‡•à
    if (!user) {
      if (!location.startsWith("/auth") && !location.startsWith("/login") && !location.startsWith("/admin-login")) {
        navigate("/auth");
      }
      return;
    }

    // ‚ùó role ‡§≤‡•ã‡§° ‡§®‡§π‡•Ä‡§Ç ‡§π‡•Å‡§Ü ‡§§‡•ã ‡§ï‡•ã‡§à redirect ‡§Æ‡§§ ‡§ï‡§∞‡•ã ‚Äî ‡§µ‡§∞‡•ç‡§®‡§æ loop ‡§¨‡§® ‡§∏‡§ï‡§§‡§æ ‡§π‡•à
    if (!user.role) return;

    // ‚úÖ Role-based Redirect
    switch (user.role) {
      case "seller": {
        const approvalStatus = user.seller?.approvalStatus;

        // ‚ùó approvalStatus missing ‡§π‡•à ‡§§‡•ã ‡§ï‡•ã‡§à redirect ‡§Æ‡§§ ‡§ï‡§∞‡•ã
        if (!approvalStatus) return;

        let targetPath = "/seller-apply";
        if (approvalStatus === "approved") targetPath = "/seller-dashboard";
        else if (approvalStatus === "pending") targetPath = "/seller-status";

        // ‚ùå ‡§Ö‡§ó‡§∞ ‡§™‡§π‡§≤‡•á ‡§∏‡•á ‡§ü‡§æ‡§∞‡§ó‡•á‡§ü ‡§™‡§æ‡§• ‡§™‡§∞ ‡§π‡•ã ‡§§‡•ã redirect ‡§Æ‡§§ ‡§ï‡§∞‡•ã
        if (!location.startsWith(targetPath)) {
          navigate(targetPath);
        }
        return;
      }

      case "admin":
        if (!location.startsWith("/admin-dashboard")) {
          navigate("/admin-dashboard");
        }
        return;

      case "delivery":
        if (!location.startsWith("/delivery-dashboard")) {
          navigate("/delivery-dashboard");
        }
        return;

      case "customer":
      default:
        if (!location.startsWith("/")) {
          navigate("/");
        }
    }
  }, [user, loading, location, navigate]);

  return null;
}
